node {
  name: "H_out_true"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "is_train"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "L_in"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 7
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Pad"
  op: "Pad"
  input: "L_in"
  input: "Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.47140452
      }
    }
  }
}
node {
  name: "conv1/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.47140452
      }
    }
  }
}
node {
  name: "conv1/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1/W/Initializer/random_uniform/max"
  input: "conv1/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
}
node {
  name: "conv1/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1/W/Initializer/random_uniform/RandomUniform"
  input: "conv1/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
}
node {
  name: "conv1/W/Initializer/random_uniform"
  op: "Add"
  input: "conv1/W/Initializer/random_uniform/mul"
  input: "conv1/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
}
node {
  name: "conv1/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/W/Assign"
  op: "Assign"
  input: "conv1/W"
  input: "conv1/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/W/read"
  op: "Identity"
  input: "conv1/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
}
node {
  name: "conv1/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/b/Assign"
  op: "Assign"
  input: "conv1/b"
  input: "conv1/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/b/read"
  op: "Identity"
  input: "conv1/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
}
node {
  name: "Conv3D"
  op: "Conv3D"
  input: "Pad"
  input: "conv1/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "Conv3D"
  input: "conv1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1a/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1a/beta/Assign"
  op: "Assign"
  input: "Rbn1a/beta"
  input: "Rbn1a/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/beta/read"
  op: "Identity"
  input: "Rbn1a/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
}
node {
  name: "Rbn1a/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1a/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1a/gamma/Assign"
  op: "Assign"
  input: "Rbn1a/gamma"
  input: "Rbn1a/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/gamma/read"
  op: "Identity"
  input: "Rbn1a/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
}
node {
  name: "Rbn1a/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1a/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1a/moving_mean/Assign"
  op: "Assign"
  input: "Rbn1a/moving_mean"
  input: "Rbn1a/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/moving_mean/read"
  op: "Identity"
  input: "Rbn1a/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1a/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1a/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1a/moving_variance/Assign"
  op: "Assign"
  input: "Rbn1a/moving_variance"
  input: "Rbn1a/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/moving_variance/read"
  op: "Identity"
  input: "Rbn1a/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn1a/cond/switch_t"
  op: "Identity"
  input: "Rbn1a/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn1a/cond/switch_f"
  op: "Identity"
  input: "Rbn1a/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn1a/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn1a/cond/moments/mean/reduction_indices"
  op: "Const"
  input: "^Rbn1a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/moments/mean"
  op: "Mean"
  input: "Rbn1a/cond/moments/mean/Switch:1"
  input: "Rbn1a/cond/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/cond/moments/mean/Switch"
  op: "Switch"
  input: "add"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/moments/StopGradient"
  op: "StopGradient"
  input: "Rbn1a/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Rbn1a/cond/moments/mean/Switch:1"
  input: "Rbn1a/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/moments/variance/reduction_indices"
  op: "Const"
  input: "^Rbn1a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/moments/variance"
  op: "Mean"
  input: "Rbn1a/cond/moments/SquaredDifference"
  input: "Rbn1a/cond/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/cond/moments/Squeeze"
  op: "Squeeze"
  input: "Rbn1a/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn1a/cond/moments/Squeeze_1"
  op: "Squeeze"
  input: "Rbn1a/cond/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^Rbn1a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_mean/biased/Assign"
  op: "Assign"
  input: "Rbn1a/Rbn1a/moving_mean/biased"
  input: "Rbn1a/Rbn1a/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_mean/biased/read"
  op: "Identity"
  input: "Rbn1a/Rbn1a/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_mean/local_step/Assign"
  op: "Assign"
  input: "Rbn1a/Rbn1a/moving_mean/local_step"
  input: "Rbn1a/Rbn1a/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_mean/local_step/read"
  op: "Identity"
  input: "Rbn1a/Rbn1a/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "Rbn1a/cond/AssignMovingAvg/sub/Switch:1"
  input: "Rbn1a/cond/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "Rbn1a/Rbn1a/moving_mean/biased/read"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "Rbn1a/cond/AssignMovingAvg/sub"
  input: "Rbn1a/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "Rbn1a/cond/AssignMovingAvg/AssignSub/Switch:1"
  input: "Rbn1a/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn1a/Rbn1a/moving_mean/biased"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^Rbn1a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "Rbn1a/cond/AssignMovingAvg/AssignAdd/Switch:1"
  input: "Rbn1a/cond/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn1a/Rbn1a/moving_mean/local_step"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^Rbn1a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Rbn1a/cond/AssignMovingAvg/sub_1/x"
  input: "Rbn1a/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/Pow"
  op: "Pow"
  input: "Rbn1a/cond/AssignMovingAvg/sub_1"
  input: "Rbn1a/cond/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^Rbn1a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "Rbn1a/cond/AssignMovingAvg/sub_2/x"
  input: "Rbn1a/cond/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "Rbn1a/cond/AssignMovingAvg/AssignSub"
  input: "Rbn1a/cond/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg"
  op: "Assign"
  input: "Rbn1a/cond/AssignMovingAvg/Switch:1"
  input: "Rbn1a/cond/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "Rbn1a/moving_mean"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^Rbn1a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_variance/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_variance/biased/Assign"
  op: "Assign"
  input: "Rbn1a/Rbn1a/moving_variance/biased"
  input: "Rbn1a/Rbn1a/moving_variance/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_variance/biased/read"
  op: "Identity"
  input: "Rbn1a/Rbn1a/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_variance/local_step/Assign"
  op: "Assign"
  input: "Rbn1a/Rbn1a/moving_variance/local_step"
  input: "Rbn1a/Rbn1a/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/Rbn1a/moving_variance/local_step/read"
  op: "Identity"
  input: "Rbn1a/Rbn1a/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Rbn1a/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "Rbn1a/cond/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "Rbn1a/Rbn1a/moving_variance/biased/read"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Rbn1a/cond/AssignMovingAvg_1/sub"
  input: "Rbn1a/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/AssignSub"
  op: "AssignSub"
  input: "Rbn1a/cond/AssignMovingAvg_1/AssignSub/Switch:1"
  input: "Rbn1a/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn1a/Rbn1a/moving_variance/biased"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/AssignAdd/value"
  op: "Const"
  input: "^Rbn1a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/AssignAdd"
  op: "AssignAdd"
  input: "Rbn1a/cond/AssignMovingAvg_1/AssignAdd/Switch:1"
  input: "Rbn1a/cond/AssignMovingAvg_1/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn1a/Rbn1a/moving_variance/local_step"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/sub_1/x"
  op: "Const"
  input: "^Rbn1a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Rbn1a/cond/AssignMovingAvg_1/sub_1/x"
  input: "Rbn1a/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/Pow"
  op: "Pow"
  input: "Rbn1a/cond/AssignMovingAvg_1/sub_1"
  input: "Rbn1a/cond/AssignMovingAvg_1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/sub_2/x"
  op: "Const"
  input: "^Rbn1a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/sub_2"
  op: "Sub"
  input: "Rbn1a/cond/AssignMovingAvg_1/sub_2/x"
  input: "Rbn1a/cond/AssignMovingAvg_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/truediv"
  op: "RealDiv"
  input: "Rbn1a/cond/AssignMovingAvg_1/AssignSub"
  input: "Rbn1a/cond/AssignMovingAvg_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1"
  op: "Assign"
  input: "Rbn1a/cond/AssignMovingAvg_1/Switch:1"
  input: "Rbn1a/cond/AssignMovingAvg_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "Rbn1a/moving_variance"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/Identity"
  op: "Identity"
  input: "Rbn1a/cond/moments/Squeeze"
  input: "^Rbn1a/cond/AssignMovingAvg"
  input: "^Rbn1a/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/Identity_1"
  op: "Identity"
  input: "Rbn1a/cond/moments/Squeeze_1"
  input: "^Rbn1a/cond/AssignMovingAvg"
  input: "^Rbn1a/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/Switch_1"
  op: "Switch"
  input: "Rbn1a/moving_mean/read"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/Switch_2"
  op: "Switch"
  input: "Rbn1a/moving_variance/read"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1a/cond/Merge"
  op: "Merge"
  input: "Rbn1a/cond/Switch_1"
  input: "Rbn1a/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1a/cond/Merge_1"
  op: "Merge"
  input: "Rbn1a/cond/Switch_2"
  input: "Rbn1a/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "batchnorm/add"
  op: "AddV2"
  input: "Rbn1a/cond/Merge_1"
  input: "batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm/mul"
  op: "Mul"
  input: "batchnorm/Rsqrt"
  input: "Rbn1a/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm/mul_1"
  op: "Mul"
  input: "add"
  input: "batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm/mul_2"
  op: "Mul"
  input: "Rbn1a/cond/Merge"
  input: "batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm/sub"
  op: "Sub"
  input: "Rbn1a/beta/read"
  input: "batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm/add_1"
  op: "AddV2"
  input: "batchnorm/mul_1"
  input: "batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu"
  op: "Relu"
  input: "batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rconv1a/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv1a/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.30618623
      }
    }
  }
}
node {
  name: "Rconv1a/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.30618623
      }
    }
  }
}
node {
  name: "Rconv1a/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Rconv1a/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Rconv1a/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Rconv1a/W/Initializer/random_uniform/max"
  input: "Rconv1a/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
}
node {
  name: "Rconv1a/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Rconv1a/W/Initializer/random_uniform/RandomUniform"
  input: "Rconv1a/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
}
node {
  name: "Rconv1a/W/Initializer/random_uniform"
  op: "Add"
  input: "Rconv1a/W/Initializer/random_uniform/mul"
  input: "Rconv1a/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
}
node {
  name: "Rconv1a/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv1a/W/Assign"
  op: "Assign"
  input: "Rconv1a/W"
  input: "Rconv1a/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv1a/W/read"
  op: "Identity"
  input: "Rconv1a/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
}
node {
  name: "Rconv1a/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv1a/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv1a/b/Assign"
  op: "Assign"
  input: "Rconv1a/b"
  input: "Rconv1a/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv1a/b/read"
  op: "Identity"
  input: "Rconv1a/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
}
node {
  name: "Conv3D_1"
  op: "Conv3D"
  input: "Relu"
  input: "Rconv1a/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_1"
  op: "AddV2"
  input: "Conv3D_1"
  input: "Rconv1a/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1b/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1b/beta/Assign"
  op: "Assign"
  input: "Rbn1b/beta"
  input: "Rbn1b/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/beta/read"
  op: "Identity"
  input: "Rbn1b/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
}
node {
  name: "Rbn1b/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1b/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1b/gamma/Assign"
  op: "Assign"
  input: "Rbn1b/gamma"
  input: "Rbn1b/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/gamma/read"
  op: "Identity"
  input: "Rbn1b/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
}
node {
  name: "Rbn1b/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1b/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1b/moving_mean/Assign"
  op: "Assign"
  input: "Rbn1b/moving_mean"
  input: "Rbn1b/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/moving_mean/read"
  op: "Identity"
  input: "Rbn1b/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1b/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1b/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1b/moving_variance/Assign"
  op: "Assign"
  input: "Rbn1b/moving_variance"
  input: "Rbn1b/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/moving_variance/read"
  op: "Identity"
  input: "Rbn1b/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn1b/cond/switch_t"
  op: "Identity"
  input: "Rbn1b/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn1b/cond/switch_f"
  op: "Identity"
  input: "Rbn1b/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn1b/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn1b/cond/moments/mean/reduction_indices"
  op: "Const"
  input: "^Rbn1b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/moments/mean"
  op: "Mean"
  input: "Rbn1b/cond/moments/mean/Switch:1"
  input: "Rbn1b/cond/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/cond/moments/mean/Switch"
  op: "Switch"
  input: "add_1"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_1"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/moments/StopGradient"
  op: "StopGradient"
  input: "Rbn1b/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Rbn1b/cond/moments/mean/Switch:1"
  input: "Rbn1b/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/moments/variance/reduction_indices"
  op: "Const"
  input: "^Rbn1b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/moments/variance"
  op: "Mean"
  input: "Rbn1b/cond/moments/SquaredDifference"
  input: "Rbn1b/cond/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/cond/moments/Squeeze"
  op: "Squeeze"
  input: "Rbn1b/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn1b/cond/moments/Squeeze_1"
  op: "Squeeze"
  input: "Rbn1b/cond/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^Rbn1b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_mean/biased/Assign"
  op: "Assign"
  input: "Rbn1b/Rbn1b/moving_mean/biased"
  input: "Rbn1b/Rbn1b/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_mean/biased/read"
  op: "Identity"
  input: "Rbn1b/Rbn1b/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_mean/local_step/Assign"
  op: "Assign"
  input: "Rbn1b/Rbn1b/moving_mean/local_step"
  input: "Rbn1b/Rbn1b/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_mean/local_step/read"
  op: "Identity"
  input: "Rbn1b/Rbn1b/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "Rbn1b/cond/AssignMovingAvg/sub/Switch:1"
  input: "Rbn1b/cond/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "Rbn1b/Rbn1b/moving_mean/biased/read"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "Rbn1b/cond/AssignMovingAvg/sub"
  input: "Rbn1b/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "Rbn1b/cond/AssignMovingAvg/AssignSub/Switch:1"
  input: "Rbn1b/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn1b/Rbn1b/moving_mean/biased"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^Rbn1b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "Rbn1b/cond/AssignMovingAvg/AssignAdd/Switch:1"
  input: "Rbn1b/cond/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn1b/Rbn1b/moving_mean/local_step"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^Rbn1b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Rbn1b/cond/AssignMovingAvg/sub_1/x"
  input: "Rbn1b/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/Pow"
  op: "Pow"
  input: "Rbn1b/cond/AssignMovingAvg/sub_1"
  input: "Rbn1b/cond/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^Rbn1b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "Rbn1b/cond/AssignMovingAvg/sub_2/x"
  input: "Rbn1b/cond/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "Rbn1b/cond/AssignMovingAvg/AssignSub"
  input: "Rbn1b/cond/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg"
  op: "Assign"
  input: "Rbn1b/cond/AssignMovingAvg/Switch:1"
  input: "Rbn1b/cond/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "Rbn1b/moving_mean"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^Rbn1b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_variance/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_variance/biased/Assign"
  op: "Assign"
  input: "Rbn1b/Rbn1b/moving_variance/biased"
  input: "Rbn1b/Rbn1b/moving_variance/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_variance/biased/read"
  op: "Identity"
  input: "Rbn1b/Rbn1b/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_variance/local_step/Assign"
  op: "Assign"
  input: "Rbn1b/Rbn1b/moving_variance/local_step"
  input: "Rbn1b/Rbn1b/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/Rbn1b/moving_variance/local_step/read"
  op: "Identity"
  input: "Rbn1b/Rbn1b/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Rbn1b/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "Rbn1b/cond/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "Rbn1b/Rbn1b/moving_variance/biased/read"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Rbn1b/cond/AssignMovingAvg_1/sub"
  input: "Rbn1b/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/AssignSub"
  op: "AssignSub"
  input: "Rbn1b/cond/AssignMovingAvg_1/AssignSub/Switch:1"
  input: "Rbn1b/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn1b/Rbn1b/moving_variance/biased"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/AssignAdd/value"
  op: "Const"
  input: "^Rbn1b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/AssignAdd"
  op: "AssignAdd"
  input: "Rbn1b/cond/AssignMovingAvg_1/AssignAdd/Switch:1"
  input: "Rbn1b/cond/AssignMovingAvg_1/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn1b/Rbn1b/moving_variance/local_step"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/sub_1/x"
  op: "Const"
  input: "^Rbn1b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Rbn1b/cond/AssignMovingAvg_1/sub_1/x"
  input: "Rbn1b/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/Pow"
  op: "Pow"
  input: "Rbn1b/cond/AssignMovingAvg_1/sub_1"
  input: "Rbn1b/cond/AssignMovingAvg_1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/sub_2/x"
  op: "Const"
  input: "^Rbn1b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/sub_2"
  op: "Sub"
  input: "Rbn1b/cond/AssignMovingAvg_1/sub_2/x"
  input: "Rbn1b/cond/AssignMovingAvg_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/truediv"
  op: "RealDiv"
  input: "Rbn1b/cond/AssignMovingAvg_1/AssignSub"
  input: "Rbn1b/cond/AssignMovingAvg_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1"
  op: "Assign"
  input: "Rbn1b/cond/AssignMovingAvg_1/Switch:1"
  input: "Rbn1b/cond/AssignMovingAvg_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "Rbn1b/moving_variance"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/Identity"
  op: "Identity"
  input: "Rbn1b/cond/moments/Squeeze"
  input: "^Rbn1b/cond/AssignMovingAvg"
  input: "^Rbn1b/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/Identity_1"
  op: "Identity"
  input: "Rbn1b/cond/moments/Squeeze_1"
  input: "^Rbn1b/cond/AssignMovingAvg"
  input: "^Rbn1b/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/Switch_1"
  op: "Switch"
  input: "Rbn1b/moving_mean/read"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/Switch_2"
  op: "Switch"
  input: "Rbn1b/moving_variance/read"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn1b/cond/Merge"
  op: "Merge"
  input: "Rbn1b/cond/Switch_1"
  input: "Rbn1b/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn1b/cond/Merge_1"
  op: "Merge"
  input: "Rbn1b/cond/Switch_2"
  input: "Rbn1b/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "batchnorm_1/add"
  op: "AddV2"
  input: "Rbn1b/cond/Merge_1"
  input: "batchnorm_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "batchnorm_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_1/mul"
  op: "Mul"
  input: "batchnorm_1/Rsqrt"
  input: "Rbn1b/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_1/mul_1"
  op: "Mul"
  input: "add_1"
  input: "batchnorm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_1/mul_2"
  op: "Mul"
  input: "Rbn1b/cond/Merge"
  input: "batchnorm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_1/sub"
  op: "Sub"
  input: "Rbn1b/beta/read"
  input: "batchnorm_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_1/add_1"
  op: "AddV2"
  input: "batchnorm_1/mul_1"
  input: "batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_1"
  op: "Relu"
  input: "batchnorm_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Pad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Pad_1"
  op: "Pad"
  input: "Relu_1"
  input: "Pad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv1b/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv1b/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.058925565
      }
    }
  }
}
node {
  name: "Rconv1b/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.058925565
      }
    }
  }
}
node {
  name: "Rconv1b/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Rconv1b/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Rconv1b/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Rconv1b/W/Initializer/random_uniform/max"
  input: "Rconv1b/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
}
node {
  name: "Rconv1b/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Rconv1b/W/Initializer/random_uniform/RandomUniform"
  input: "Rconv1b/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
}
node {
  name: "Rconv1b/W/Initializer/random_uniform"
  op: "Add"
  input: "Rconv1b/W/Initializer/random_uniform/mul"
  input: "Rconv1b/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
}
node {
  name: "Rconv1b/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv1b/W/Assign"
  op: "Assign"
  input: "Rconv1b/W"
  input: "Rconv1b/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv1b/W/read"
  op: "Identity"
  input: "Rconv1b/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
}
node {
  name: "Rconv1b/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv1b/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv1b/b/Assign"
  op: "Assign"
  input: "Rconv1b/b"
  input: "Rconv1b/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv1b/b/read"
  op: "Identity"
  input: "Rconv1b/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
}
node {
  name: "Conv3D_2"
  op: "Conv3D"
  input: "Pad_1"
  input: "Rconv1b/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_2"
  op: "AddV2"
  input: "Conv3D_2"
  input: "Rconv1b/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "add"
  input: "add_2"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rbn2a/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2a/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2a/beta/Assign"
  op: "Assign"
  input: "Rbn2a/beta"
  input: "Rbn2a/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/beta/read"
  op: "Identity"
  input: "Rbn2a/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
}
node {
  name: "Rbn2a/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2a/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2a/gamma/Assign"
  op: "Assign"
  input: "Rbn2a/gamma"
  input: "Rbn2a/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/gamma/read"
  op: "Identity"
  input: "Rbn2a/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
}
node {
  name: "Rbn2a/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2a/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2a/moving_mean/Assign"
  op: "Assign"
  input: "Rbn2a/moving_mean"
  input: "Rbn2a/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/moving_mean/read"
  op: "Identity"
  input: "Rbn2a/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2a/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2a/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2a/moving_variance/Assign"
  op: "Assign"
  input: "Rbn2a/moving_variance"
  input: "Rbn2a/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/moving_variance/read"
  op: "Identity"
  input: "Rbn2a/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn2a/cond/switch_t"
  op: "Identity"
  input: "Rbn2a/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn2a/cond/switch_f"
  op: "Identity"
  input: "Rbn2a/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn2a/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn2a/cond/moments/mean/reduction_indices"
  op: "Const"
  input: "^Rbn2a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/moments/mean"
  op: "Mean"
  input: "Rbn2a/cond/moments/mean/Switch:1"
  input: "Rbn2a/cond/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/cond/moments/mean/Switch"
  op: "Switch"
  input: "concat"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/moments/StopGradient"
  op: "StopGradient"
  input: "Rbn2a/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Rbn2a/cond/moments/mean/Switch:1"
  input: "Rbn2a/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/moments/variance/reduction_indices"
  op: "Const"
  input: "^Rbn2a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/moments/variance"
  op: "Mean"
  input: "Rbn2a/cond/moments/SquaredDifference"
  input: "Rbn2a/cond/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/cond/moments/Squeeze"
  op: "Squeeze"
  input: "Rbn2a/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn2a/cond/moments/Squeeze_1"
  op: "Squeeze"
  input: "Rbn2a/cond/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^Rbn2a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_mean/biased/Assign"
  op: "Assign"
  input: "Rbn2a/Rbn2a/moving_mean/biased"
  input: "Rbn2a/Rbn2a/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_mean/biased/read"
  op: "Identity"
  input: "Rbn2a/Rbn2a/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_mean/local_step/Assign"
  op: "Assign"
  input: "Rbn2a/Rbn2a/moving_mean/local_step"
  input: "Rbn2a/Rbn2a/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_mean/local_step/read"
  op: "Identity"
  input: "Rbn2a/Rbn2a/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "Rbn2a/cond/AssignMovingAvg/sub/Switch:1"
  input: "Rbn2a/cond/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "Rbn2a/Rbn2a/moving_mean/biased/read"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "Rbn2a/cond/AssignMovingAvg/sub"
  input: "Rbn2a/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "Rbn2a/cond/AssignMovingAvg/AssignSub/Switch:1"
  input: "Rbn2a/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn2a/Rbn2a/moving_mean/biased"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^Rbn2a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "Rbn2a/cond/AssignMovingAvg/AssignAdd/Switch:1"
  input: "Rbn2a/cond/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn2a/Rbn2a/moving_mean/local_step"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^Rbn2a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Rbn2a/cond/AssignMovingAvg/sub_1/x"
  input: "Rbn2a/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/Pow"
  op: "Pow"
  input: "Rbn2a/cond/AssignMovingAvg/sub_1"
  input: "Rbn2a/cond/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^Rbn2a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "Rbn2a/cond/AssignMovingAvg/sub_2/x"
  input: "Rbn2a/cond/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "Rbn2a/cond/AssignMovingAvg/AssignSub"
  input: "Rbn2a/cond/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg"
  op: "Assign"
  input: "Rbn2a/cond/AssignMovingAvg/Switch:1"
  input: "Rbn2a/cond/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "Rbn2a/moving_mean"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^Rbn2a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_variance/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_variance/biased/Assign"
  op: "Assign"
  input: "Rbn2a/Rbn2a/moving_variance/biased"
  input: "Rbn2a/Rbn2a/moving_variance/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_variance/biased/read"
  op: "Identity"
  input: "Rbn2a/Rbn2a/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_variance/local_step/Assign"
  op: "Assign"
  input: "Rbn2a/Rbn2a/moving_variance/local_step"
  input: "Rbn2a/Rbn2a/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/Rbn2a/moving_variance/local_step/read"
  op: "Identity"
  input: "Rbn2a/Rbn2a/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Rbn2a/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "Rbn2a/cond/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "Rbn2a/Rbn2a/moving_variance/biased/read"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Rbn2a/cond/AssignMovingAvg_1/sub"
  input: "Rbn2a/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/AssignSub"
  op: "AssignSub"
  input: "Rbn2a/cond/AssignMovingAvg_1/AssignSub/Switch:1"
  input: "Rbn2a/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn2a/Rbn2a/moving_variance/biased"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/AssignAdd/value"
  op: "Const"
  input: "^Rbn2a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/AssignAdd"
  op: "AssignAdd"
  input: "Rbn2a/cond/AssignMovingAvg_1/AssignAdd/Switch:1"
  input: "Rbn2a/cond/AssignMovingAvg_1/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn2a/Rbn2a/moving_variance/local_step"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/sub_1/x"
  op: "Const"
  input: "^Rbn2a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Rbn2a/cond/AssignMovingAvg_1/sub_1/x"
  input: "Rbn2a/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/Pow"
  op: "Pow"
  input: "Rbn2a/cond/AssignMovingAvg_1/sub_1"
  input: "Rbn2a/cond/AssignMovingAvg_1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/sub_2/x"
  op: "Const"
  input: "^Rbn2a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/sub_2"
  op: "Sub"
  input: "Rbn2a/cond/AssignMovingAvg_1/sub_2/x"
  input: "Rbn2a/cond/AssignMovingAvg_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/truediv"
  op: "RealDiv"
  input: "Rbn2a/cond/AssignMovingAvg_1/AssignSub"
  input: "Rbn2a/cond/AssignMovingAvg_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1"
  op: "Assign"
  input: "Rbn2a/cond/AssignMovingAvg_1/Switch:1"
  input: "Rbn2a/cond/AssignMovingAvg_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "Rbn2a/moving_variance"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/Identity"
  op: "Identity"
  input: "Rbn2a/cond/moments/Squeeze"
  input: "^Rbn2a/cond/AssignMovingAvg"
  input: "^Rbn2a/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/Identity_1"
  op: "Identity"
  input: "Rbn2a/cond/moments/Squeeze_1"
  input: "^Rbn2a/cond/AssignMovingAvg"
  input: "^Rbn2a/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/Switch_1"
  op: "Switch"
  input: "Rbn2a/moving_mean/read"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/Switch_2"
  op: "Switch"
  input: "Rbn2a/moving_variance/read"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2a/cond/Merge"
  op: "Merge"
  input: "Rbn2a/cond/Switch_1"
  input: "Rbn2a/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2a/cond/Merge_1"
  op: "Merge"
  input: "Rbn2a/cond/Switch_2"
  input: "Rbn2a/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_2/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "batchnorm_2/add"
  op: "AddV2"
  input: "Rbn2a/cond/Merge_1"
  input: "batchnorm_2/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_2/Rsqrt"
  op: "Rsqrt"
  input: "batchnorm_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_2/mul"
  op: "Mul"
  input: "batchnorm_2/Rsqrt"
  input: "Rbn2a/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_2/mul_1"
  op: "Mul"
  input: "concat"
  input: "batchnorm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_2/mul_2"
  op: "Mul"
  input: "Rbn2a/cond/Merge"
  input: "batchnorm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_2/sub"
  op: "Sub"
  input: "Rbn2a/beta/read"
  input: "batchnorm_2/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_2/add_1"
  op: "AddV2"
  input: "batchnorm_2/mul_1"
  input: "batchnorm_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_2"
  op: "Relu"
  input: "batchnorm_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rconv2a/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv2a/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "Rconv2a/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "Rconv2a/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Rconv2a/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Rconv2a/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Rconv2a/W/Initializer/random_uniform/max"
  input: "Rconv2a/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
}
node {
  name: "Rconv2a/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Rconv2a/W/Initializer/random_uniform/RandomUniform"
  input: "Rconv2a/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
}
node {
  name: "Rconv2a/W/Initializer/random_uniform"
  op: "Add"
  input: "Rconv2a/W/Initializer/random_uniform/mul"
  input: "Rconv2a/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
}
node {
  name: "Rconv2a/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv2a/W/Assign"
  op: "Assign"
  input: "Rconv2a/W"
  input: "Rconv2a/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv2a/W/read"
  op: "Identity"
  input: "Rconv2a/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
}
node {
  name: "Rconv2a/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv2a/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv2a/b/Assign"
  op: "Assign"
  input: "Rconv2a/b"
  input: "Rconv2a/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv2a/b/read"
  op: "Identity"
  input: "Rconv2a/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
}
node {
  name: "Conv3D_3"
  op: "Conv3D"
  input: "Relu_2"
  input: "Rconv2a/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_3"
  op: "AddV2"
  input: "Conv3D_3"
  input: "Rconv2a/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2b/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2b/beta/Assign"
  op: "Assign"
  input: "Rbn2b/beta"
  input: "Rbn2b/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/beta/read"
  op: "Identity"
  input: "Rbn2b/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
}
node {
  name: "Rbn2b/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2b/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2b/gamma/Assign"
  op: "Assign"
  input: "Rbn2b/gamma"
  input: "Rbn2b/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/gamma/read"
  op: "Identity"
  input: "Rbn2b/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
}
node {
  name: "Rbn2b/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2b/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2b/moving_mean/Assign"
  op: "Assign"
  input: "Rbn2b/moving_mean"
  input: "Rbn2b/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/moving_mean/read"
  op: "Identity"
  input: "Rbn2b/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2b/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2b/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2b/moving_variance/Assign"
  op: "Assign"
  input: "Rbn2b/moving_variance"
  input: "Rbn2b/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/moving_variance/read"
  op: "Identity"
  input: "Rbn2b/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn2b/cond/switch_t"
  op: "Identity"
  input: "Rbn2b/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn2b/cond/switch_f"
  op: "Identity"
  input: "Rbn2b/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn2b/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn2b/cond/moments/mean/reduction_indices"
  op: "Const"
  input: "^Rbn2b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/moments/mean"
  op: "Mean"
  input: "Rbn2b/cond/moments/mean/Switch:1"
  input: "Rbn2b/cond/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/cond/moments/mean/Switch"
  op: "Switch"
  input: "add_3"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_3"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/moments/StopGradient"
  op: "StopGradient"
  input: "Rbn2b/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Rbn2b/cond/moments/mean/Switch:1"
  input: "Rbn2b/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/moments/variance/reduction_indices"
  op: "Const"
  input: "^Rbn2b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/moments/variance"
  op: "Mean"
  input: "Rbn2b/cond/moments/SquaredDifference"
  input: "Rbn2b/cond/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/cond/moments/Squeeze"
  op: "Squeeze"
  input: "Rbn2b/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn2b/cond/moments/Squeeze_1"
  op: "Squeeze"
  input: "Rbn2b/cond/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^Rbn2b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_mean/biased/Assign"
  op: "Assign"
  input: "Rbn2b/Rbn2b/moving_mean/biased"
  input: "Rbn2b/Rbn2b/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_mean/biased/read"
  op: "Identity"
  input: "Rbn2b/Rbn2b/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_mean/local_step/Assign"
  op: "Assign"
  input: "Rbn2b/Rbn2b/moving_mean/local_step"
  input: "Rbn2b/Rbn2b/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_mean/local_step/read"
  op: "Identity"
  input: "Rbn2b/Rbn2b/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "Rbn2b/cond/AssignMovingAvg/sub/Switch:1"
  input: "Rbn2b/cond/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "Rbn2b/Rbn2b/moving_mean/biased/read"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "Rbn2b/cond/AssignMovingAvg/sub"
  input: "Rbn2b/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "Rbn2b/cond/AssignMovingAvg/AssignSub/Switch:1"
  input: "Rbn2b/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn2b/Rbn2b/moving_mean/biased"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^Rbn2b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "Rbn2b/cond/AssignMovingAvg/AssignAdd/Switch:1"
  input: "Rbn2b/cond/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn2b/Rbn2b/moving_mean/local_step"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^Rbn2b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Rbn2b/cond/AssignMovingAvg/sub_1/x"
  input: "Rbn2b/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/Pow"
  op: "Pow"
  input: "Rbn2b/cond/AssignMovingAvg/sub_1"
  input: "Rbn2b/cond/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^Rbn2b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "Rbn2b/cond/AssignMovingAvg/sub_2/x"
  input: "Rbn2b/cond/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "Rbn2b/cond/AssignMovingAvg/AssignSub"
  input: "Rbn2b/cond/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg"
  op: "Assign"
  input: "Rbn2b/cond/AssignMovingAvg/Switch:1"
  input: "Rbn2b/cond/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "Rbn2b/moving_mean"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^Rbn2b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_variance/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_variance/biased/Assign"
  op: "Assign"
  input: "Rbn2b/Rbn2b/moving_variance/biased"
  input: "Rbn2b/Rbn2b/moving_variance/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_variance/biased/read"
  op: "Identity"
  input: "Rbn2b/Rbn2b/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_variance/local_step/Assign"
  op: "Assign"
  input: "Rbn2b/Rbn2b/moving_variance/local_step"
  input: "Rbn2b/Rbn2b/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/Rbn2b/moving_variance/local_step/read"
  op: "Identity"
  input: "Rbn2b/Rbn2b/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Rbn2b/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "Rbn2b/cond/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "Rbn2b/Rbn2b/moving_variance/biased/read"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Rbn2b/cond/AssignMovingAvg_1/sub"
  input: "Rbn2b/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/AssignSub"
  op: "AssignSub"
  input: "Rbn2b/cond/AssignMovingAvg_1/AssignSub/Switch:1"
  input: "Rbn2b/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn2b/Rbn2b/moving_variance/biased"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/AssignAdd/value"
  op: "Const"
  input: "^Rbn2b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/AssignAdd"
  op: "AssignAdd"
  input: "Rbn2b/cond/AssignMovingAvg_1/AssignAdd/Switch:1"
  input: "Rbn2b/cond/AssignMovingAvg_1/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn2b/Rbn2b/moving_variance/local_step"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/sub_1/x"
  op: "Const"
  input: "^Rbn2b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Rbn2b/cond/AssignMovingAvg_1/sub_1/x"
  input: "Rbn2b/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/Pow"
  op: "Pow"
  input: "Rbn2b/cond/AssignMovingAvg_1/sub_1"
  input: "Rbn2b/cond/AssignMovingAvg_1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/sub_2/x"
  op: "Const"
  input: "^Rbn2b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/sub_2"
  op: "Sub"
  input: "Rbn2b/cond/AssignMovingAvg_1/sub_2/x"
  input: "Rbn2b/cond/AssignMovingAvg_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/truediv"
  op: "RealDiv"
  input: "Rbn2b/cond/AssignMovingAvg_1/AssignSub"
  input: "Rbn2b/cond/AssignMovingAvg_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1"
  op: "Assign"
  input: "Rbn2b/cond/AssignMovingAvg_1/Switch:1"
  input: "Rbn2b/cond/AssignMovingAvg_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "Rbn2b/moving_variance"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/Identity"
  op: "Identity"
  input: "Rbn2b/cond/moments/Squeeze"
  input: "^Rbn2b/cond/AssignMovingAvg"
  input: "^Rbn2b/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/Identity_1"
  op: "Identity"
  input: "Rbn2b/cond/moments/Squeeze_1"
  input: "^Rbn2b/cond/AssignMovingAvg"
  input: "^Rbn2b/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/Switch_1"
  op: "Switch"
  input: "Rbn2b/moving_mean/read"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/Switch_2"
  op: "Switch"
  input: "Rbn2b/moving_variance/read"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn2b/cond/Merge"
  op: "Merge"
  input: "Rbn2b/cond/Switch_1"
  input: "Rbn2b/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn2b/cond/Merge_1"
  op: "Merge"
  input: "Rbn2b/cond/Switch_2"
  input: "Rbn2b/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_3/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "batchnorm_3/add"
  op: "AddV2"
  input: "Rbn2b/cond/Merge_1"
  input: "batchnorm_3/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_3/Rsqrt"
  op: "Rsqrt"
  input: "batchnorm_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_3/mul"
  op: "Mul"
  input: "batchnorm_3/Rsqrt"
  input: "Rbn2b/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_3/mul_1"
  op: "Mul"
  input: "add_3"
  input: "batchnorm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_3/mul_2"
  op: "Mul"
  input: "Rbn2b/cond/Merge"
  input: "batchnorm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_3/sub"
  op: "Sub"
  input: "Rbn2b/beta/read"
  input: "batchnorm_3/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_3/add_1"
  op: "AddV2"
  input: "batchnorm_3/mul_1"
  input: "batchnorm_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_3"
  op: "Relu"
  input: "batchnorm_3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Pad_2/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Pad_2"
  op: "Pad"
  input: "Relu_3"
  input: "Pad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv2b/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv2b/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.048112523
      }
    }
  }
}
node {
  name: "Rconv2b/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112523
      }
    }
  }
}
node {
  name: "Rconv2b/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Rconv2b/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Rconv2b/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Rconv2b/W/Initializer/random_uniform/max"
  input: "Rconv2b/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
}
node {
  name: "Rconv2b/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Rconv2b/W/Initializer/random_uniform/RandomUniform"
  input: "Rconv2b/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
}
node {
  name: "Rconv2b/W/Initializer/random_uniform"
  op: "Add"
  input: "Rconv2b/W/Initializer/random_uniform/mul"
  input: "Rconv2b/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
}
node {
  name: "Rconv2b/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv2b/W/Assign"
  op: "Assign"
  input: "Rconv2b/W"
  input: "Rconv2b/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv2b/W/read"
  op: "Identity"
  input: "Rconv2b/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
}
node {
  name: "Rconv2b/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv2b/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv2b/b/Assign"
  op: "Assign"
  input: "Rconv2b/b"
  input: "Rconv2b/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv2b/b/read"
  op: "Identity"
  input: "Rconv2b/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
}
node {
  name: "Conv3D_4"
  op: "Conv3D"
  input: "Pad_2"
  input: "Rconv2b/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_4"
  op: "AddV2"
  input: "Conv3D_4"
  input: "Rconv2b/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "concat"
  input: "add_4"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rbn3a/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3a/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3a/beta/Assign"
  op: "Assign"
  input: "Rbn3a/beta"
  input: "Rbn3a/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/beta/read"
  op: "Identity"
  input: "Rbn3a/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
}
node {
  name: "Rbn3a/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3a/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3a/gamma/Assign"
  op: "Assign"
  input: "Rbn3a/gamma"
  input: "Rbn3a/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/gamma/read"
  op: "Identity"
  input: "Rbn3a/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
}
node {
  name: "Rbn3a/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3a/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3a/moving_mean/Assign"
  op: "Assign"
  input: "Rbn3a/moving_mean"
  input: "Rbn3a/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/moving_mean/read"
  op: "Identity"
  input: "Rbn3a/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3a/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3a/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3a/moving_variance/Assign"
  op: "Assign"
  input: "Rbn3a/moving_variance"
  input: "Rbn3a/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/moving_variance/read"
  op: "Identity"
  input: "Rbn3a/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn3a/cond/switch_t"
  op: "Identity"
  input: "Rbn3a/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn3a/cond/switch_f"
  op: "Identity"
  input: "Rbn3a/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn3a/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn3a/cond/moments/mean/reduction_indices"
  op: "Const"
  input: "^Rbn3a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/moments/mean"
  op: "Mean"
  input: "Rbn3a/cond/moments/mean/Switch:1"
  input: "Rbn3a/cond/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/cond/moments/mean/Switch"
  op: "Switch"
  input: "concat_1"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_1"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/moments/StopGradient"
  op: "StopGradient"
  input: "Rbn3a/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Rbn3a/cond/moments/mean/Switch:1"
  input: "Rbn3a/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/moments/variance/reduction_indices"
  op: "Const"
  input: "^Rbn3a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/moments/variance"
  op: "Mean"
  input: "Rbn3a/cond/moments/SquaredDifference"
  input: "Rbn3a/cond/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/cond/moments/Squeeze"
  op: "Squeeze"
  input: "Rbn3a/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn3a/cond/moments/Squeeze_1"
  op: "Squeeze"
  input: "Rbn3a/cond/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^Rbn3a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_mean/biased/Assign"
  op: "Assign"
  input: "Rbn3a/Rbn3a/moving_mean/biased"
  input: "Rbn3a/Rbn3a/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_mean/biased/read"
  op: "Identity"
  input: "Rbn3a/Rbn3a/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_mean/local_step/Assign"
  op: "Assign"
  input: "Rbn3a/Rbn3a/moving_mean/local_step"
  input: "Rbn3a/Rbn3a/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_mean/local_step/read"
  op: "Identity"
  input: "Rbn3a/Rbn3a/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "Rbn3a/cond/AssignMovingAvg/sub/Switch:1"
  input: "Rbn3a/cond/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "Rbn3a/Rbn3a/moving_mean/biased/read"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "Rbn3a/cond/AssignMovingAvg/sub"
  input: "Rbn3a/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "Rbn3a/cond/AssignMovingAvg/AssignSub/Switch:1"
  input: "Rbn3a/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn3a/Rbn3a/moving_mean/biased"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^Rbn3a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "Rbn3a/cond/AssignMovingAvg/AssignAdd/Switch:1"
  input: "Rbn3a/cond/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn3a/Rbn3a/moving_mean/local_step"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^Rbn3a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Rbn3a/cond/AssignMovingAvg/sub_1/x"
  input: "Rbn3a/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/Pow"
  op: "Pow"
  input: "Rbn3a/cond/AssignMovingAvg/sub_1"
  input: "Rbn3a/cond/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^Rbn3a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "Rbn3a/cond/AssignMovingAvg/sub_2/x"
  input: "Rbn3a/cond/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "Rbn3a/cond/AssignMovingAvg/AssignSub"
  input: "Rbn3a/cond/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg"
  op: "Assign"
  input: "Rbn3a/cond/AssignMovingAvg/Switch:1"
  input: "Rbn3a/cond/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "Rbn3a/moving_mean"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^Rbn3a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_variance/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_variance/biased/Assign"
  op: "Assign"
  input: "Rbn3a/Rbn3a/moving_variance/biased"
  input: "Rbn3a/Rbn3a/moving_variance/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_variance/biased/read"
  op: "Identity"
  input: "Rbn3a/Rbn3a/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_variance/local_step/Assign"
  op: "Assign"
  input: "Rbn3a/Rbn3a/moving_variance/local_step"
  input: "Rbn3a/Rbn3a/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/Rbn3a/moving_variance/local_step/read"
  op: "Identity"
  input: "Rbn3a/Rbn3a/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Rbn3a/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "Rbn3a/cond/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "Rbn3a/Rbn3a/moving_variance/biased/read"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Rbn3a/cond/AssignMovingAvg_1/sub"
  input: "Rbn3a/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/AssignSub"
  op: "AssignSub"
  input: "Rbn3a/cond/AssignMovingAvg_1/AssignSub/Switch:1"
  input: "Rbn3a/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn3a/Rbn3a/moving_variance/biased"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/AssignAdd/value"
  op: "Const"
  input: "^Rbn3a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/AssignAdd"
  op: "AssignAdd"
  input: "Rbn3a/cond/AssignMovingAvg_1/AssignAdd/Switch:1"
  input: "Rbn3a/cond/AssignMovingAvg_1/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn3a/Rbn3a/moving_variance/local_step"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/sub_1/x"
  op: "Const"
  input: "^Rbn3a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Rbn3a/cond/AssignMovingAvg_1/sub_1/x"
  input: "Rbn3a/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/Pow"
  op: "Pow"
  input: "Rbn3a/cond/AssignMovingAvg_1/sub_1"
  input: "Rbn3a/cond/AssignMovingAvg_1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/sub_2/x"
  op: "Const"
  input: "^Rbn3a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/sub_2"
  op: "Sub"
  input: "Rbn3a/cond/AssignMovingAvg_1/sub_2/x"
  input: "Rbn3a/cond/AssignMovingAvg_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/truediv"
  op: "RealDiv"
  input: "Rbn3a/cond/AssignMovingAvg_1/AssignSub"
  input: "Rbn3a/cond/AssignMovingAvg_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1"
  op: "Assign"
  input: "Rbn3a/cond/AssignMovingAvg_1/Switch:1"
  input: "Rbn3a/cond/AssignMovingAvg_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "Rbn3a/moving_variance"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/Identity"
  op: "Identity"
  input: "Rbn3a/cond/moments/Squeeze"
  input: "^Rbn3a/cond/AssignMovingAvg"
  input: "^Rbn3a/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/Identity_1"
  op: "Identity"
  input: "Rbn3a/cond/moments/Squeeze_1"
  input: "^Rbn3a/cond/AssignMovingAvg"
  input: "^Rbn3a/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/Switch_1"
  op: "Switch"
  input: "Rbn3a/moving_mean/read"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/Switch_2"
  op: "Switch"
  input: "Rbn3a/moving_variance/read"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3a/cond/Merge"
  op: "Merge"
  input: "Rbn3a/cond/Switch_1"
  input: "Rbn3a/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3a/cond/Merge_1"
  op: "Merge"
  input: "Rbn3a/cond/Switch_2"
  input: "Rbn3a/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_4/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "batchnorm_4/add"
  op: "AddV2"
  input: "Rbn3a/cond/Merge_1"
  input: "batchnorm_4/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_4/Rsqrt"
  op: "Rsqrt"
  input: "batchnorm_4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_4/mul"
  op: "Mul"
  input: "batchnorm_4/Rsqrt"
  input: "Rbn3a/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_4/mul_1"
  op: "Mul"
  input: "concat_1"
  input: "batchnorm_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_4/mul_2"
  op: "Mul"
  input: "Rbn3a/cond/Merge"
  input: "batchnorm_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_4/sub"
  op: "Sub"
  input: "Rbn3a/beta/read"
  input: "batchnorm_4/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_4/add_1"
  op: "AddV2"
  input: "batchnorm_4/mul_1"
  input: "batchnorm_4/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_4"
  op: "Relu"
  input: "batchnorm_4/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rconv3a/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv3a/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650635
      }
    }
  }
}
node {
  name: "Rconv3a/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650635
      }
    }
  }
}
node {
  name: "Rconv3a/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Rconv3a/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Rconv3a/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Rconv3a/W/Initializer/random_uniform/max"
  input: "Rconv3a/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
}
node {
  name: "Rconv3a/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Rconv3a/W/Initializer/random_uniform/RandomUniform"
  input: "Rconv3a/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
}
node {
  name: "Rconv3a/W/Initializer/random_uniform"
  op: "Add"
  input: "Rconv3a/W/Initializer/random_uniform/mul"
  input: "Rconv3a/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
}
node {
  name: "Rconv3a/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv3a/W/Assign"
  op: "Assign"
  input: "Rconv3a/W"
  input: "Rconv3a/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv3a/W/read"
  op: "Identity"
  input: "Rconv3a/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
}
node {
  name: "Rconv3a/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv3a/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv3a/b/Assign"
  op: "Assign"
  input: "Rconv3a/b"
  input: "Rconv3a/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv3a/b/read"
  op: "Identity"
  input: "Rconv3a/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
}
node {
  name: "Conv3D_5"
  op: "Conv3D"
  input: "Relu_4"
  input: "Rconv3a/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_5"
  op: "AddV2"
  input: "Conv3D_5"
  input: "Rconv3a/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3b/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3b/beta/Assign"
  op: "Assign"
  input: "Rbn3b/beta"
  input: "Rbn3b/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/beta/read"
  op: "Identity"
  input: "Rbn3b/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
}
node {
  name: "Rbn3b/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3b/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3b/gamma/Assign"
  op: "Assign"
  input: "Rbn3b/gamma"
  input: "Rbn3b/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/gamma/read"
  op: "Identity"
  input: "Rbn3b/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
}
node {
  name: "Rbn3b/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3b/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3b/moving_mean/Assign"
  op: "Assign"
  input: "Rbn3b/moving_mean"
  input: "Rbn3b/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/moving_mean/read"
  op: "Identity"
  input: "Rbn3b/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3b/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3b/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3b/moving_variance/Assign"
  op: "Assign"
  input: "Rbn3b/moving_variance"
  input: "Rbn3b/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/moving_variance/read"
  op: "Identity"
  input: "Rbn3b/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn3b/cond/switch_t"
  op: "Identity"
  input: "Rbn3b/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn3b/cond/switch_f"
  op: "Identity"
  input: "Rbn3b/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn3b/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn3b/cond/moments/mean/reduction_indices"
  op: "Const"
  input: "^Rbn3b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/moments/mean"
  op: "Mean"
  input: "Rbn3b/cond/moments/mean/Switch:1"
  input: "Rbn3b/cond/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/cond/moments/mean/Switch"
  op: "Switch"
  input: "add_5"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_5"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/moments/StopGradient"
  op: "StopGradient"
  input: "Rbn3b/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Rbn3b/cond/moments/mean/Switch:1"
  input: "Rbn3b/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/moments/variance/reduction_indices"
  op: "Const"
  input: "^Rbn3b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/moments/variance"
  op: "Mean"
  input: "Rbn3b/cond/moments/SquaredDifference"
  input: "Rbn3b/cond/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/cond/moments/Squeeze"
  op: "Squeeze"
  input: "Rbn3b/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn3b/cond/moments/Squeeze_1"
  op: "Squeeze"
  input: "Rbn3b/cond/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^Rbn3b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_mean/biased/Assign"
  op: "Assign"
  input: "Rbn3b/Rbn3b/moving_mean/biased"
  input: "Rbn3b/Rbn3b/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_mean/biased/read"
  op: "Identity"
  input: "Rbn3b/Rbn3b/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_mean/local_step/Assign"
  op: "Assign"
  input: "Rbn3b/Rbn3b/moving_mean/local_step"
  input: "Rbn3b/Rbn3b/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_mean/local_step/read"
  op: "Identity"
  input: "Rbn3b/Rbn3b/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "Rbn3b/cond/AssignMovingAvg/sub/Switch:1"
  input: "Rbn3b/cond/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "Rbn3b/Rbn3b/moving_mean/biased/read"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "Rbn3b/cond/AssignMovingAvg/sub"
  input: "Rbn3b/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "Rbn3b/cond/AssignMovingAvg/AssignSub/Switch:1"
  input: "Rbn3b/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn3b/Rbn3b/moving_mean/biased"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^Rbn3b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "Rbn3b/cond/AssignMovingAvg/AssignAdd/Switch:1"
  input: "Rbn3b/cond/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn3b/Rbn3b/moving_mean/local_step"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^Rbn3b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Rbn3b/cond/AssignMovingAvg/sub_1/x"
  input: "Rbn3b/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/Pow"
  op: "Pow"
  input: "Rbn3b/cond/AssignMovingAvg/sub_1"
  input: "Rbn3b/cond/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^Rbn3b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "Rbn3b/cond/AssignMovingAvg/sub_2/x"
  input: "Rbn3b/cond/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "Rbn3b/cond/AssignMovingAvg/AssignSub"
  input: "Rbn3b/cond/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg"
  op: "Assign"
  input: "Rbn3b/cond/AssignMovingAvg/Switch:1"
  input: "Rbn3b/cond/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "Rbn3b/moving_mean"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^Rbn3b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_variance/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_variance/biased/Assign"
  op: "Assign"
  input: "Rbn3b/Rbn3b/moving_variance/biased"
  input: "Rbn3b/Rbn3b/moving_variance/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_variance/biased/read"
  op: "Identity"
  input: "Rbn3b/Rbn3b/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_variance/local_step/Assign"
  op: "Assign"
  input: "Rbn3b/Rbn3b/moving_variance/local_step"
  input: "Rbn3b/Rbn3b/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/Rbn3b/moving_variance/local_step/read"
  op: "Identity"
  input: "Rbn3b/Rbn3b/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Rbn3b/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "Rbn3b/cond/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "Rbn3b/Rbn3b/moving_variance/biased/read"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Rbn3b/cond/AssignMovingAvg_1/sub"
  input: "Rbn3b/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/AssignSub"
  op: "AssignSub"
  input: "Rbn3b/cond/AssignMovingAvg_1/AssignSub/Switch:1"
  input: "Rbn3b/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn3b/Rbn3b/moving_variance/biased"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/AssignAdd/value"
  op: "Const"
  input: "^Rbn3b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/AssignAdd"
  op: "AssignAdd"
  input: "Rbn3b/cond/AssignMovingAvg_1/AssignAdd/Switch:1"
  input: "Rbn3b/cond/AssignMovingAvg_1/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn3b/Rbn3b/moving_variance/local_step"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/sub_1/x"
  op: "Const"
  input: "^Rbn3b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Rbn3b/cond/AssignMovingAvg_1/sub_1/x"
  input: "Rbn3b/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/Pow"
  op: "Pow"
  input: "Rbn3b/cond/AssignMovingAvg_1/sub_1"
  input: "Rbn3b/cond/AssignMovingAvg_1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/sub_2/x"
  op: "Const"
  input: "^Rbn3b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/sub_2"
  op: "Sub"
  input: "Rbn3b/cond/AssignMovingAvg_1/sub_2/x"
  input: "Rbn3b/cond/AssignMovingAvg_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/truediv"
  op: "RealDiv"
  input: "Rbn3b/cond/AssignMovingAvg_1/AssignSub"
  input: "Rbn3b/cond/AssignMovingAvg_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1"
  op: "Assign"
  input: "Rbn3b/cond/AssignMovingAvg_1/Switch:1"
  input: "Rbn3b/cond/AssignMovingAvg_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "Rbn3b/moving_variance"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/Identity"
  op: "Identity"
  input: "Rbn3b/cond/moments/Squeeze"
  input: "^Rbn3b/cond/AssignMovingAvg"
  input: "^Rbn3b/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/Identity_1"
  op: "Identity"
  input: "Rbn3b/cond/moments/Squeeze_1"
  input: "^Rbn3b/cond/AssignMovingAvg"
  input: "^Rbn3b/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/Switch_1"
  op: "Switch"
  input: "Rbn3b/moving_mean/read"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/Switch_2"
  op: "Switch"
  input: "Rbn3b/moving_variance/read"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn3b/cond/Merge"
  op: "Merge"
  input: "Rbn3b/cond/Switch_1"
  input: "Rbn3b/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn3b/cond/Merge_1"
  op: "Merge"
  input: "Rbn3b/cond/Switch_2"
  input: "Rbn3b/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_5/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "batchnorm_5/add"
  op: "AddV2"
  input: "Rbn3b/cond/Merge_1"
  input: "batchnorm_5/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_5/Rsqrt"
  op: "Rsqrt"
  input: "batchnorm_5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_5/mul"
  op: "Mul"
  input: "batchnorm_5/Rsqrt"
  input: "Rbn3b/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_5/mul_1"
  op: "Mul"
  input: "add_5"
  input: "batchnorm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_5/mul_2"
  op: "Mul"
  input: "Rbn3b/cond/Merge"
  input: "batchnorm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_5/sub"
  op: "Sub"
  input: "Rbn3b/beta/read"
  input: "batchnorm_5/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_5/add_1"
  op: "AddV2"
  input: "batchnorm_5/mul_1"
  input: "batchnorm_5/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_5"
  op: "Relu"
  input: "batchnorm_5/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Pad_3/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Pad_3"
  op: "Pad"
  input: "Relu_5"
  input: "Pad_3/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv3b/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv3b/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.041666668
      }
    }
  }
}
node {
  name: "Rconv3b/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.041666668
      }
    }
  }
}
node {
  name: "Rconv3b/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Rconv3b/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Rconv3b/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Rconv3b/W/Initializer/random_uniform/max"
  input: "Rconv3b/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
}
node {
  name: "Rconv3b/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Rconv3b/W/Initializer/random_uniform/RandomUniform"
  input: "Rconv3b/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
}
node {
  name: "Rconv3b/W/Initializer/random_uniform"
  op: "Add"
  input: "Rconv3b/W/Initializer/random_uniform/mul"
  input: "Rconv3b/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
}
node {
  name: "Rconv3b/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv3b/W/Assign"
  op: "Assign"
  input: "Rconv3b/W"
  input: "Rconv3b/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv3b/W/read"
  op: "Identity"
  input: "Rconv3b/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
}
node {
  name: "Rconv3b/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv3b/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv3b/b/Assign"
  op: "Assign"
  input: "Rconv3b/b"
  input: "Rconv3b/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv3b/b/read"
  op: "Identity"
  input: "Rconv3b/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
}
node {
  name: "Conv3D_6"
  op: "Conv3D"
  input: "Pad_3"
  input: "Rconv3b/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_6"
  op: "AddV2"
  input: "Conv3D_6"
  input: "Rconv3b/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "concat_2"
  op: "ConcatV2"
  input: "concat_1"
  input: "add_6"
  input: "concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rbn4a/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4a/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4a/beta/Assign"
  op: "Assign"
  input: "Rbn4a/beta"
  input: "Rbn4a/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/beta/read"
  op: "Identity"
  input: "Rbn4a/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
}
node {
  name: "Rbn4a/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4a/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4a/gamma/Assign"
  op: "Assign"
  input: "Rbn4a/gamma"
  input: "Rbn4a/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/gamma/read"
  op: "Identity"
  input: "Rbn4a/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
}
node {
  name: "Rbn4a/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4a/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4a/moving_mean/Assign"
  op: "Assign"
  input: "Rbn4a/moving_mean"
  input: "Rbn4a/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/moving_mean/read"
  op: "Identity"
  input: "Rbn4a/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4a/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4a/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4a/moving_variance/Assign"
  op: "Assign"
  input: "Rbn4a/moving_variance"
  input: "Rbn4a/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/moving_variance/read"
  op: "Identity"
  input: "Rbn4a/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn4a/cond/switch_t"
  op: "Identity"
  input: "Rbn4a/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn4a/cond/switch_f"
  op: "Identity"
  input: "Rbn4a/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn4a/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn4a/cond/moments/mean/reduction_indices"
  op: "Const"
  input: "^Rbn4a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/moments/mean"
  op: "Mean"
  input: "Rbn4a/cond/moments/mean/Switch:1"
  input: "Rbn4a/cond/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/cond/moments/mean/Switch"
  op: "Switch"
  input: "concat_2"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_2"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/moments/StopGradient"
  op: "StopGradient"
  input: "Rbn4a/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Rbn4a/cond/moments/mean/Switch:1"
  input: "Rbn4a/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/moments/variance/reduction_indices"
  op: "Const"
  input: "^Rbn4a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/moments/variance"
  op: "Mean"
  input: "Rbn4a/cond/moments/SquaredDifference"
  input: "Rbn4a/cond/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/cond/moments/Squeeze"
  op: "Squeeze"
  input: "Rbn4a/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn4a/cond/moments/Squeeze_1"
  op: "Squeeze"
  input: "Rbn4a/cond/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^Rbn4a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_mean/biased/Assign"
  op: "Assign"
  input: "Rbn4a/Rbn4a/moving_mean/biased"
  input: "Rbn4a/Rbn4a/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_mean/biased/read"
  op: "Identity"
  input: "Rbn4a/Rbn4a/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_mean/local_step/Assign"
  op: "Assign"
  input: "Rbn4a/Rbn4a/moving_mean/local_step"
  input: "Rbn4a/Rbn4a/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_mean/local_step/read"
  op: "Identity"
  input: "Rbn4a/Rbn4a/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "Rbn4a/cond/AssignMovingAvg/sub/Switch:1"
  input: "Rbn4a/cond/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "Rbn4a/Rbn4a/moving_mean/biased/read"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "Rbn4a/cond/AssignMovingAvg/sub"
  input: "Rbn4a/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "Rbn4a/cond/AssignMovingAvg/AssignSub/Switch:1"
  input: "Rbn4a/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn4a/Rbn4a/moving_mean/biased"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^Rbn4a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "Rbn4a/cond/AssignMovingAvg/AssignAdd/Switch:1"
  input: "Rbn4a/cond/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn4a/Rbn4a/moving_mean/local_step"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^Rbn4a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Rbn4a/cond/AssignMovingAvg/sub_1/x"
  input: "Rbn4a/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/Pow"
  op: "Pow"
  input: "Rbn4a/cond/AssignMovingAvg/sub_1"
  input: "Rbn4a/cond/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^Rbn4a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "Rbn4a/cond/AssignMovingAvg/sub_2/x"
  input: "Rbn4a/cond/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "Rbn4a/cond/AssignMovingAvg/AssignSub"
  input: "Rbn4a/cond/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg"
  op: "Assign"
  input: "Rbn4a/cond/AssignMovingAvg/Switch:1"
  input: "Rbn4a/cond/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "Rbn4a/moving_mean"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^Rbn4a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_variance/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_variance/biased/Assign"
  op: "Assign"
  input: "Rbn4a/Rbn4a/moving_variance/biased"
  input: "Rbn4a/Rbn4a/moving_variance/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_variance/biased/read"
  op: "Identity"
  input: "Rbn4a/Rbn4a/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_variance/local_step/Assign"
  op: "Assign"
  input: "Rbn4a/Rbn4a/moving_variance/local_step"
  input: "Rbn4a/Rbn4a/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/Rbn4a/moving_variance/local_step/read"
  op: "Identity"
  input: "Rbn4a/Rbn4a/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Rbn4a/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "Rbn4a/cond/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "Rbn4a/Rbn4a/moving_variance/biased/read"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Rbn4a/cond/AssignMovingAvg_1/sub"
  input: "Rbn4a/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/AssignSub"
  op: "AssignSub"
  input: "Rbn4a/cond/AssignMovingAvg_1/AssignSub/Switch:1"
  input: "Rbn4a/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn4a/Rbn4a/moving_variance/biased"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/AssignAdd/value"
  op: "Const"
  input: "^Rbn4a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/AssignAdd"
  op: "AssignAdd"
  input: "Rbn4a/cond/AssignMovingAvg_1/AssignAdd/Switch:1"
  input: "Rbn4a/cond/AssignMovingAvg_1/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn4a/Rbn4a/moving_variance/local_step"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/sub_1/x"
  op: "Const"
  input: "^Rbn4a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Rbn4a/cond/AssignMovingAvg_1/sub_1/x"
  input: "Rbn4a/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/Pow"
  op: "Pow"
  input: "Rbn4a/cond/AssignMovingAvg_1/sub_1"
  input: "Rbn4a/cond/AssignMovingAvg_1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/sub_2/x"
  op: "Const"
  input: "^Rbn4a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/sub_2"
  op: "Sub"
  input: "Rbn4a/cond/AssignMovingAvg_1/sub_2/x"
  input: "Rbn4a/cond/AssignMovingAvg_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/truediv"
  op: "RealDiv"
  input: "Rbn4a/cond/AssignMovingAvg_1/AssignSub"
  input: "Rbn4a/cond/AssignMovingAvg_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1"
  op: "Assign"
  input: "Rbn4a/cond/AssignMovingAvg_1/Switch:1"
  input: "Rbn4a/cond/AssignMovingAvg_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "Rbn4a/moving_variance"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/Identity"
  op: "Identity"
  input: "Rbn4a/cond/moments/Squeeze"
  input: "^Rbn4a/cond/AssignMovingAvg"
  input: "^Rbn4a/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/Identity_1"
  op: "Identity"
  input: "Rbn4a/cond/moments/Squeeze_1"
  input: "^Rbn4a/cond/AssignMovingAvg"
  input: "^Rbn4a/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/Switch_1"
  op: "Switch"
  input: "Rbn4a/moving_mean/read"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/Switch_2"
  op: "Switch"
  input: "Rbn4a/moving_variance/read"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4a/cond/Merge"
  op: "Merge"
  input: "Rbn4a/cond/Switch_1"
  input: "Rbn4a/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4a/cond/Merge_1"
  op: "Merge"
  input: "Rbn4a/cond/Switch_2"
  input: "Rbn4a/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_6/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "batchnorm_6/add"
  op: "AddV2"
  input: "Rbn4a/cond/Merge_1"
  input: "batchnorm_6/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_6/Rsqrt"
  op: "Rsqrt"
  input: "batchnorm_6/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_6/mul"
  op: "Mul"
  input: "batchnorm_6/Rsqrt"
  input: "Rbn4a/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_6/mul_1"
  op: "Mul"
  input: "concat_2"
  input: "batchnorm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_6/mul_2"
  op: "Mul"
  input: "Rbn4a/cond/Merge"
  input: "batchnorm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_6/sub"
  op: "Sub"
  input: "Rbn4a/beta/read"
  input: "batchnorm_6/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_6/add_1"
  op: "AddV2"
  input: "batchnorm_6/mul_1"
  input: "batchnorm_6/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_6"
  op: "Relu"
  input: "batchnorm_6/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rconv4a/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\240\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv4a/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.19364917
      }
    }
  }
}
node {
  name: "Rconv4a/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.19364917
      }
    }
  }
}
node {
  name: "Rconv4a/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Rconv4a/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Rconv4a/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Rconv4a/W/Initializer/random_uniform/max"
  input: "Rconv4a/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
}
node {
  name: "Rconv4a/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Rconv4a/W/Initializer/random_uniform/RandomUniform"
  input: "Rconv4a/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
}
node {
  name: "Rconv4a/W/Initializer/random_uniform"
  op: "Add"
  input: "Rconv4a/W/Initializer/random_uniform/mul"
  input: "Rconv4a/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
}
node {
  name: "Rconv4a/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv4a/W/Assign"
  op: "Assign"
  input: "Rconv4a/W"
  input: "Rconv4a/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv4a/W/read"
  op: "Identity"
  input: "Rconv4a/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
}
node {
  name: "Rconv4a/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv4a/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv4a/b/Assign"
  op: "Assign"
  input: "Rconv4a/b"
  input: "Rconv4a/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv4a/b/read"
  op: "Identity"
  input: "Rconv4a/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
}
node {
  name: "Conv3D_7"
  op: "Conv3D"
  input: "Relu_6"
  input: "Rconv4a/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_7"
  op: "AddV2"
  input: "Conv3D_7"
  input: "Rconv4a/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4b/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4b/beta/Assign"
  op: "Assign"
  input: "Rbn4b/beta"
  input: "Rbn4b/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/beta/read"
  op: "Identity"
  input: "Rbn4b/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
}
node {
  name: "Rbn4b/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4b/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4b/gamma/Assign"
  op: "Assign"
  input: "Rbn4b/gamma"
  input: "Rbn4b/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/gamma/read"
  op: "Identity"
  input: "Rbn4b/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
}
node {
  name: "Rbn4b/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4b/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4b/moving_mean/Assign"
  op: "Assign"
  input: "Rbn4b/moving_mean"
  input: "Rbn4b/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/moving_mean/read"
  op: "Identity"
  input: "Rbn4b/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4b/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4b/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4b/moving_variance/Assign"
  op: "Assign"
  input: "Rbn4b/moving_variance"
  input: "Rbn4b/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/moving_variance/read"
  op: "Identity"
  input: "Rbn4b/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn4b/cond/switch_t"
  op: "Identity"
  input: "Rbn4b/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn4b/cond/switch_f"
  op: "Identity"
  input: "Rbn4b/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn4b/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn4b/cond/moments/mean/reduction_indices"
  op: "Const"
  input: "^Rbn4b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/moments/mean"
  op: "Mean"
  input: "Rbn4b/cond/moments/mean/Switch:1"
  input: "Rbn4b/cond/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/cond/moments/mean/Switch"
  op: "Switch"
  input: "add_7"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_7"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/moments/StopGradient"
  op: "StopGradient"
  input: "Rbn4b/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Rbn4b/cond/moments/mean/Switch:1"
  input: "Rbn4b/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/moments/variance/reduction_indices"
  op: "Const"
  input: "^Rbn4b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/moments/variance"
  op: "Mean"
  input: "Rbn4b/cond/moments/SquaredDifference"
  input: "Rbn4b/cond/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/cond/moments/Squeeze"
  op: "Squeeze"
  input: "Rbn4b/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn4b/cond/moments/Squeeze_1"
  op: "Squeeze"
  input: "Rbn4b/cond/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^Rbn4b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_mean/biased/Assign"
  op: "Assign"
  input: "Rbn4b/Rbn4b/moving_mean/biased"
  input: "Rbn4b/Rbn4b/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_mean/biased/read"
  op: "Identity"
  input: "Rbn4b/Rbn4b/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_mean/local_step/Assign"
  op: "Assign"
  input: "Rbn4b/Rbn4b/moving_mean/local_step"
  input: "Rbn4b/Rbn4b/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_mean/local_step/read"
  op: "Identity"
  input: "Rbn4b/Rbn4b/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "Rbn4b/cond/AssignMovingAvg/sub/Switch:1"
  input: "Rbn4b/cond/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "Rbn4b/Rbn4b/moving_mean/biased/read"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "Rbn4b/cond/AssignMovingAvg/sub"
  input: "Rbn4b/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "Rbn4b/cond/AssignMovingAvg/AssignSub/Switch:1"
  input: "Rbn4b/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn4b/Rbn4b/moving_mean/biased"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^Rbn4b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "Rbn4b/cond/AssignMovingAvg/AssignAdd/Switch:1"
  input: "Rbn4b/cond/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn4b/Rbn4b/moving_mean/local_step"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^Rbn4b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Rbn4b/cond/AssignMovingAvg/sub_1/x"
  input: "Rbn4b/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/Pow"
  op: "Pow"
  input: "Rbn4b/cond/AssignMovingAvg/sub_1"
  input: "Rbn4b/cond/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^Rbn4b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "Rbn4b/cond/AssignMovingAvg/sub_2/x"
  input: "Rbn4b/cond/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "Rbn4b/cond/AssignMovingAvg/AssignSub"
  input: "Rbn4b/cond/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg"
  op: "Assign"
  input: "Rbn4b/cond/AssignMovingAvg/Switch:1"
  input: "Rbn4b/cond/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "Rbn4b/moving_mean"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^Rbn4b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_variance/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_variance/biased/Assign"
  op: "Assign"
  input: "Rbn4b/Rbn4b/moving_variance/biased"
  input: "Rbn4b/Rbn4b/moving_variance/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_variance/biased/read"
  op: "Identity"
  input: "Rbn4b/Rbn4b/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_variance/local_step/Assign"
  op: "Assign"
  input: "Rbn4b/Rbn4b/moving_variance/local_step"
  input: "Rbn4b/Rbn4b/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/Rbn4b/moving_variance/local_step/read"
  op: "Identity"
  input: "Rbn4b/Rbn4b/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Rbn4b/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "Rbn4b/cond/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "Rbn4b/Rbn4b/moving_variance/biased/read"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Rbn4b/cond/AssignMovingAvg_1/sub"
  input: "Rbn4b/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/AssignSub"
  op: "AssignSub"
  input: "Rbn4b/cond/AssignMovingAvg_1/AssignSub/Switch:1"
  input: "Rbn4b/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn4b/Rbn4b/moving_variance/biased"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/AssignAdd/value"
  op: "Const"
  input: "^Rbn4b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/AssignAdd"
  op: "AssignAdd"
  input: "Rbn4b/cond/AssignMovingAvg_1/AssignAdd/Switch:1"
  input: "Rbn4b/cond/AssignMovingAvg_1/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn4b/Rbn4b/moving_variance/local_step"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/sub_1/x"
  op: "Const"
  input: "^Rbn4b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Rbn4b/cond/AssignMovingAvg_1/sub_1/x"
  input: "Rbn4b/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/Pow"
  op: "Pow"
  input: "Rbn4b/cond/AssignMovingAvg_1/sub_1"
  input: "Rbn4b/cond/AssignMovingAvg_1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/sub_2/x"
  op: "Const"
  input: "^Rbn4b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/sub_2"
  op: "Sub"
  input: "Rbn4b/cond/AssignMovingAvg_1/sub_2/x"
  input: "Rbn4b/cond/AssignMovingAvg_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/truediv"
  op: "RealDiv"
  input: "Rbn4b/cond/AssignMovingAvg_1/AssignSub"
  input: "Rbn4b/cond/AssignMovingAvg_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1"
  op: "Assign"
  input: "Rbn4b/cond/AssignMovingAvg_1/Switch:1"
  input: "Rbn4b/cond/AssignMovingAvg_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "Rbn4b/moving_variance"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/Identity"
  op: "Identity"
  input: "Rbn4b/cond/moments/Squeeze"
  input: "^Rbn4b/cond/AssignMovingAvg"
  input: "^Rbn4b/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/Identity_1"
  op: "Identity"
  input: "Rbn4b/cond/moments/Squeeze_1"
  input: "^Rbn4b/cond/AssignMovingAvg"
  input: "^Rbn4b/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/Switch_1"
  op: "Switch"
  input: "Rbn4b/moving_mean/read"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/Switch_2"
  op: "Switch"
  input: "Rbn4b/moving_variance/read"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn4b/cond/Merge"
  op: "Merge"
  input: "Rbn4b/cond/Switch_1"
  input: "Rbn4b/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn4b/cond/Merge_1"
  op: "Merge"
  input: "Rbn4b/cond/Switch_2"
  input: "Rbn4b/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_7/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "batchnorm_7/add"
  op: "AddV2"
  input: "Rbn4b/cond/Merge_1"
  input: "batchnorm_7/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_7/Rsqrt"
  op: "Rsqrt"
  input: "batchnorm_7/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_7/mul"
  op: "Mul"
  input: "batchnorm_7/Rsqrt"
  input: "Rbn4b/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_7/mul_1"
  op: "Mul"
  input: "add_7"
  input: "batchnorm_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_7/mul_2"
  op: "Mul"
  input: "Rbn4b/cond/Merge"
  input: "batchnorm_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_7/sub"
  op: "Sub"
  input: "Rbn4b/beta/read"
  input: "batchnorm_7/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_7/add_1"
  op: "AddV2"
  input: "batchnorm_7/mul_1"
  input: "batchnorm_7/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_7"
  op: "Relu"
  input: "batchnorm_7/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Pad_4/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Pad_4"
  op: "Pad"
  input: "Relu_7"
  input: "Pad_4/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv4b/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\240\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv4b/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0372678
      }
    }
  }
}
node {
  name: "Rconv4b/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0372678
      }
    }
  }
}
node {
  name: "Rconv4b/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Rconv4b/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Rconv4b/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Rconv4b/W/Initializer/random_uniform/max"
  input: "Rconv4b/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
}
node {
  name: "Rconv4b/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Rconv4b/W/Initializer/random_uniform/RandomUniform"
  input: "Rconv4b/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
}
node {
  name: "Rconv4b/W/Initializer/random_uniform"
  op: "Add"
  input: "Rconv4b/W/Initializer/random_uniform/mul"
  input: "Rconv4b/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
}
node {
  name: "Rconv4b/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 160
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv4b/W/Assign"
  op: "Assign"
  input: "Rconv4b/W"
  input: "Rconv4b/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv4b/W/read"
  op: "Identity"
  input: "Rconv4b/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
}
node {
  name: "Rconv4b/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv4b/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv4b/b/Assign"
  op: "Assign"
  input: "Rconv4b/b"
  input: "Rconv4b/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv4b/b/read"
  op: "Identity"
  input: "Rconv4b/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
}
node {
  name: "Conv3D_8"
  op: "Conv3D"
  input: "Pad_4"
  input: "Rconv4b/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_8"
  op: "AddV2"
  input: "Conv3D_8"
  input: "Rconv4b/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "concat_2"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "concat_3"
  op: "ConcatV2"
  input: "strided_slice"
  input: "add_8"
  input: "concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rbn5a/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5a/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5a/beta/Assign"
  op: "Assign"
  input: "Rbn5a/beta"
  input: "Rbn5a/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/beta/read"
  op: "Identity"
  input: "Rbn5a/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
}
node {
  name: "Rbn5a/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5a/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5a/gamma/Assign"
  op: "Assign"
  input: "Rbn5a/gamma"
  input: "Rbn5a/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/gamma/read"
  op: "Identity"
  input: "Rbn5a/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
}
node {
  name: "Rbn5a/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5a/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5a/moving_mean/Assign"
  op: "Assign"
  input: "Rbn5a/moving_mean"
  input: "Rbn5a/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/moving_mean/read"
  op: "Identity"
  input: "Rbn5a/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5a/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5a/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5a/moving_variance/Assign"
  op: "Assign"
  input: "Rbn5a/moving_variance"
  input: "Rbn5a/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/moving_variance/read"
  op: "Identity"
  input: "Rbn5a/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn5a/cond/switch_t"
  op: "Identity"
  input: "Rbn5a/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn5a/cond/switch_f"
  op: "Identity"
  input: "Rbn5a/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn5a/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn5a/cond/moments/mean/reduction_indices"
  op: "Const"
  input: "^Rbn5a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/moments/mean"
  op: "Mean"
  input: "Rbn5a/cond/moments/mean/Switch:1"
  input: "Rbn5a/cond/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/cond/moments/mean/Switch"
  op: "Switch"
  input: "concat_3"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_3"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/moments/StopGradient"
  op: "StopGradient"
  input: "Rbn5a/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Rbn5a/cond/moments/mean/Switch:1"
  input: "Rbn5a/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/moments/variance/reduction_indices"
  op: "Const"
  input: "^Rbn5a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/moments/variance"
  op: "Mean"
  input: "Rbn5a/cond/moments/SquaredDifference"
  input: "Rbn5a/cond/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/cond/moments/Squeeze"
  op: "Squeeze"
  input: "Rbn5a/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn5a/cond/moments/Squeeze_1"
  op: "Squeeze"
  input: "Rbn5a/cond/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^Rbn5a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_mean/biased/Assign"
  op: "Assign"
  input: "Rbn5a/Rbn5a/moving_mean/biased"
  input: "Rbn5a/Rbn5a/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_mean/biased/read"
  op: "Identity"
  input: "Rbn5a/Rbn5a/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_mean/local_step/Assign"
  op: "Assign"
  input: "Rbn5a/Rbn5a/moving_mean/local_step"
  input: "Rbn5a/Rbn5a/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_mean/local_step/read"
  op: "Identity"
  input: "Rbn5a/Rbn5a/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "Rbn5a/cond/AssignMovingAvg/sub/Switch:1"
  input: "Rbn5a/cond/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "Rbn5a/Rbn5a/moving_mean/biased/read"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "Rbn5a/cond/AssignMovingAvg/sub"
  input: "Rbn5a/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "Rbn5a/cond/AssignMovingAvg/AssignSub/Switch:1"
  input: "Rbn5a/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn5a/Rbn5a/moving_mean/biased"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^Rbn5a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "Rbn5a/cond/AssignMovingAvg/AssignAdd/Switch:1"
  input: "Rbn5a/cond/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn5a/Rbn5a/moving_mean/local_step"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^Rbn5a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Rbn5a/cond/AssignMovingAvg/sub_1/x"
  input: "Rbn5a/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/Pow"
  op: "Pow"
  input: "Rbn5a/cond/AssignMovingAvg/sub_1"
  input: "Rbn5a/cond/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^Rbn5a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "Rbn5a/cond/AssignMovingAvg/sub_2/x"
  input: "Rbn5a/cond/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "Rbn5a/cond/AssignMovingAvg/AssignSub"
  input: "Rbn5a/cond/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg"
  op: "Assign"
  input: "Rbn5a/cond/AssignMovingAvg/Switch:1"
  input: "Rbn5a/cond/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "Rbn5a/moving_mean"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^Rbn5a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_variance/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_variance/biased/Assign"
  op: "Assign"
  input: "Rbn5a/Rbn5a/moving_variance/biased"
  input: "Rbn5a/Rbn5a/moving_variance/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_variance/biased/read"
  op: "Identity"
  input: "Rbn5a/Rbn5a/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_variance/local_step/Assign"
  op: "Assign"
  input: "Rbn5a/Rbn5a/moving_variance/local_step"
  input: "Rbn5a/Rbn5a/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/Rbn5a/moving_variance/local_step/read"
  op: "Identity"
  input: "Rbn5a/Rbn5a/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Rbn5a/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "Rbn5a/cond/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "Rbn5a/Rbn5a/moving_variance/biased/read"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Rbn5a/cond/AssignMovingAvg_1/sub"
  input: "Rbn5a/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/AssignSub"
  op: "AssignSub"
  input: "Rbn5a/cond/AssignMovingAvg_1/AssignSub/Switch:1"
  input: "Rbn5a/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn5a/Rbn5a/moving_variance/biased"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/AssignAdd/value"
  op: "Const"
  input: "^Rbn5a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/AssignAdd"
  op: "AssignAdd"
  input: "Rbn5a/cond/AssignMovingAvg_1/AssignAdd/Switch:1"
  input: "Rbn5a/cond/AssignMovingAvg_1/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn5a/Rbn5a/moving_variance/local_step"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/sub_1/x"
  op: "Const"
  input: "^Rbn5a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Rbn5a/cond/AssignMovingAvg_1/sub_1/x"
  input: "Rbn5a/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/Pow"
  op: "Pow"
  input: "Rbn5a/cond/AssignMovingAvg_1/sub_1"
  input: "Rbn5a/cond/AssignMovingAvg_1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/sub_2/x"
  op: "Const"
  input: "^Rbn5a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/sub_2"
  op: "Sub"
  input: "Rbn5a/cond/AssignMovingAvg_1/sub_2/x"
  input: "Rbn5a/cond/AssignMovingAvg_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/truediv"
  op: "RealDiv"
  input: "Rbn5a/cond/AssignMovingAvg_1/AssignSub"
  input: "Rbn5a/cond/AssignMovingAvg_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1"
  op: "Assign"
  input: "Rbn5a/cond/AssignMovingAvg_1/Switch:1"
  input: "Rbn5a/cond/AssignMovingAvg_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "Rbn5a/moving_variance"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/Identity"
  op: "Identity"
  input: "Rbn5a/cond/moments/Squeeze"
  input: "^Rbn5a/cond/AssignMovingAvg"
  input: "^Rbn5a/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/Identity_1"
  op: "Identity"
  input: "Rbn5a/cond/moments/Squeeze_1"
  input: "^Rbn5a/cond/AssignMovingAvg"
  input: "^Rbn5a/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/Switch_1"
  op: "Switch"
  input: "Rbn5a/moving_mean/read"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/Switch_2"
  op: "Switch"
  input: "Rbn5a/moving_variance/read"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5a/cond/Merge"
  op: "Merge"
  input: "Rbn5a/cond/Switch_1"
  input: "Rbn5a/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5a/cond/Merge_1"
  op: "Merge"
  input: "Rbn5a/cond/Switch_2"
  input: "Rbn5a/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_8/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "batchnorm_8/add"
  op: "AddV2"
  input: "Rbn5a/cond/Merge_1"
  input: "batchnorm_8/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_8/Rsqrt"
  op: "Rsqrt"
  input: "batchnorm_8/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_8/mul"
  op: "Mul"
  input: "batchnorm_8/Rsqrt"
  input: "Rbn5a/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_8/mul_1"
  op: "Mul"
  input: "concat_3"
  input: "batchnorm_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_8/mul_2"
  op: "Mul"
  input: "Rbn5a/cond/Merge"
  input: "batchnorm_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_8/sub"
  op: "Sub"
  input: "Rbn5a/beta/read"
  input: "batchnorm_8/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_8/add_1"
  op: "AddV2"
  input: "batchnorm_8/mul_1"
  input: "batchnorm_8/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_8"
  op: "Relu"
  input: "batchnorm_8/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rconv5a/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv5a/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.17677669
      }
    }
  }
}
node {
  name: "Rconv5a/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.17677669
      }
    }
  }
}
node {
  name: "Rconv5a/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Rconv5a/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Rconv5a/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Rconv5a/W/Initializer/random_uniform/max"
  input: "Rconv5a/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
}
node {
  name: "Rconv5a/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Rconv5a/W/Initializer/random_uniform/RandomUniform"
  input: "Rconv5a/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
}
node {
  name: "Rconv5a/W/Initializer/random_uniform"
  op: "Add"
  input: "Rconv5a/W/Initializer/random_uniform/mul"
  input: "Rconv5a/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
}
node {
  name: "Rconv5a/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv5a/W/Assign"
  op: "Assign"
  input: "Rconv5a/W"
  input: "Rconv5a/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv5a/W/read"
  op: "Identity"
  input: "Rconv5a/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
}
node {
  name: "Rconv5a/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv5a/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv5a/b/Assign"
  op: "Assign"
  input: "Rconv5a/b"
  input: "Rconv5a/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv5a/b/read"
  op: "Identity"
  input: "Rconv5a/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
}
node {
  name: "Conv3D_9"
  op: "Conv3D"
  input: "Relu_8"
  input: "Rconv5a/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_9"
  op: "AddV2"
  input: "Conv3D_9"
  input: "Rconv5a/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5b/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5b/beta/Assign"
  op: "Assign"
  input: "Rbn5b/beta"
  input: "Rbn5b/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/beta/read"
  op: "Identity"
  input: "Rbn5b/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
}
node {
  name: "Rbn5b/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5b/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5b/gamma/Assign"
  op: "Assign"
  input: "Rbn5b/gamma"
  input: "Rbn5b/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/gamma/read"
  op: "Identity"
  input: "Rbn5b/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
}
node {
  name: "Rbn5b/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5b/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5b/moving_mean/Assign"
  op: "Assign"
  input: "Rbn5b/moving_mean"
  input: "Rbn5b/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/moving_mean/read"
  op: "Identity"
  input: "Rbn5b/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5b/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5b/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5b/moving_variance/Assign"
  op: "Assign"
  input: "Rbn5b/moving_variance"
  input: "Rbn5b/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/moving_variance/read"
  op: "Identity"
  input: "Rbn5b/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn5b/cond/switch_t"
  op: "Identity"
  input: "Rbn5b/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn5b/cond/switch_f"
  op: "Identity"
  input: "Rbn5b/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn5b/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn5b/cond/moments/mean/reduction_indices"
  op: "Const"
  input: "^Rbn5b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/moments/mean"
  op: "Mean"
  input: "Rbn5b/cond/moments/mean/Switch:1"
  input: "Rbn5b/cond/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/cond/moments/mean/Switch"
  op: "Switch"
  input: "add_9"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_9"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/moments/StopGradient"
  op: "StopGradient"
  input: "Rbn5b/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Rbn5b/cond/moments/mean/Switch:1"
  input: "Rbn5b/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/moments/variance/reduction_indices"
  op: "Const"
  input: "^Rbn5b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/moments/variance"
  op: "Mean"
  input: "Rbn5b/cond/moments/SquaredDifference"
  input: "Rbn5b/cond/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/cond/moments/Squeeze"
  op: "Squeeze"
  input: "Rbn5b/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn5b/cond/moments/Squeeze_1"
  op: "Squeeze"
  input: "Rbn5b/cond/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^Rbn5b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_mean/biased/Assign"
  op: "Assign"
  input: "Rbn5b/Rbn5b/moving_mean/biased"
  input: "Rbn5b/Rbn5b/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_mean/biased/read"
  op: "Identity"
  input: "Rbn5b/Rbn5b/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_mean/local_step/Assign"
  op: "Assign"
  input: "Rbn5b/Rbn5b/moving_mean/local_step"
  input: "Rbn5b/Rbn5b/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_mean/local_step/read"
  op: "Identity"
  input: "Rbn5b/Rbn5b/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "Rbn5b/cond/AssignMovingAvg/sub/Switch:1"
  input: "Rbn5b/cond/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "Rbn5b/Rbn5b/moving_mean/biased/read"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "Rbn5b/cond/AssignMovingAvg/sub"
  input: "Rbn5b/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "Rbn5b/cond/AssignMovingAvg/AssignSub/Switch:1"
  input: "Rbn5b/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn5b/Rbn5b/moving_mean/biased"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^Rbn5b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "Rbn5b/cond/AssignMovingAvg/AssignAdd/Switch:1"
  input: "Rbn5b/cond/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn5b/Rbn5b/moving_mean/local_step"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^Rbn5b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Rbn5b/cond/AssignMovingAvg/sub_1/x"
  input: "Rbn5b/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/Pow"
  op: "Pow"
  input: "Rbn5b/cond/AssignMovingAvg/sub_1"
  input: "Rbn5b/cond/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^Rbn5b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "Rbn5b/cond/AssignMovingAvg/sub_2/x"
  input: "Rbn5b/cond/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "Rbn5b/cond/AssignMovingAvg/AssignSub"
  input: "Rbn5b/cond/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg"
  op: "Assign"
  input: "Rbn5b/cond/AssignMovingAvg/Switch:1"
  input: "Rbn5b/cond/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "Rbn5b/moving_mean"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^Rbn5b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_variance/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_variance/biased/Assign"
  op: "Assign"
  input: "Rbn5b/Rbn5b/moving_variance/biased"
  input: "Rbn5b/Rbn5b/moving_variance/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_variance/biased/read"
  op: "Identity"
  input: "Rbn5b/Rbn5b/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_variance/local_step/Assign"
  op: "Assign"
  input: "Rbn5b/Rbn5b/moving_variance/local_step"
  input: "Rbn5b/Rbn5b/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/Rbn5b/moving_variance/local_step/read"
  op: "Identity"
  input: "Rbn5b/Rbn5b/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Rbn5b/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "Rbn5b/cond/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "Rbn5b/Rbn5b/moving_variance/biased/read"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Rbn5b/cond/AssignMovingAvg_1/sub"
  input: "Rbn5b/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/AssignSub"
  op: "AssignSub"
  input: "Rbn5b/cond/AssignMovingAvg_1/AssignSub/Switch:1"
  input: "Rbn5b/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn5b/Rbn5b/moving_variance/biased"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/AssignAdd/value"
  op: "Const"
  input: "^Rbn5b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/AssignAdd"
  op: "AssignAdd"
  input: "Rbn5b/cond/AssignMovingAvg_1/AssignAdd/Switch:1"
  input: "Rbn5b/cond/AssignMovingAvg_1/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn5b/Rbn5b/moving_variance/local_step"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/sub_1/x"
  op: "Const"
  input: "^Rbn5b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Rbn5b/cond/AssignMovingAvg_1/sub_1/x"
  input: "Rbn5b/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/Pow"
  op: "Pow"
  input: "Rbn5b/cond/AssignMovingAvg_1/sub_1"
  input: "Rbn5b/cond/AssignMovingAvg_1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/sub_2/x"
  op: "Const"
  input: "^Rbn5b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/sub_2"
  op: "Sub"
  input: "Rbn5b/cond/AssignMovingAvg_1/sub_2/x"
  input: "Rbn5b/cond/AssignMovingAvg_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/truediv"
  op: "RealDiv"
  input: "Rbn5b/cond/AssignMovingAvg_1/AssignSub"
  input: "Rbn5b/cond/AssignMovingAvg_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1"
  op: "Assign"
  input: "Rbn5b/cond/AssignMovingAvg_1/Switch:1"
  input: "Rbn5b/cond/AssignMovingAvg_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "Rbn5b/moving_variance"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/Identity"
  op: "Identity"
  input: "Rbn5b/cond/moments/Squeeze"
  input: "^Rbn5b/cond/AssignMovingAvg"
  input: "^Rbn5b/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/Identity_1"
  op: "Identity"
  input: "Rbn5b/cond/moments/Squeeze_1"
  input: "^Rbn5b/cond/AssignMovingAvg"
  input: "^Rbn5b/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/Switch_1"
  op: "Switch"
  input: "Rbn5b/moving_mean/read"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/Switch_2"
  op: "Switch"
  input: "Rbn5b/moving_variance/read"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn5b/cond/Merge"
  op: "Merge"
  input: "Rbn5b/cond/Switch_1"
  input: "Rbn5b/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn5b/cond/Merge_1"
  op: "Merge"
  input: "Rbn5b/cond/Switch_2"
  input: "Rbn5b/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_9/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "batchnorm_9/add"
  op: "AddV2"
  input: "Rbn5b/cond/Merge_1"
  input: "batchnorm_9/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_9/Rsqrt"
  op: "Rsqrt"
  input: "batchnorm_9/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_9/mul"
  op: "Mul"
  input: "batchnorm_9/Rsqrt"
  input: "Rbn5b/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_9/mul_1"
  op: "Mul"
  input: "add_9"
  input: "batchnorm_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_9/mul_2"
  op: "Mul"
  input: "Rbn5b/cond/Merge"
  input: "batchnorm_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_9/sub"
  op: "Sub"
  input: "Rbn5b/beta/read"
  input: "batchnorm_9/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_9/add_1"
  op: "AddV2"
  input: "batchnorm_9/mul_1"
  input: "batchnorm_9/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_9"
  op: "Relu"
  input: "batchnorm_9/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Pad_5/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Pad_5"
  op: "Pad"
  input: "Relu_9"
  input: "Pad_5/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv5b/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv5b/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.034020692
      }
    }
  }
}
node {
  name: "Rconv5b/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.034020692
      }
    }
  }
}
node {
  name: "Rconv5b/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Rconv5b/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Rconv5b/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Rconv5b/W/Initializer/random_uniform/max"
  input: "Rconv5b/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
}
node {
  name: "Rconv5b/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Rconv5b/W/Initializer/random_uniform/RandomUniform"
  input: "Rconv5b/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
}
node {
  name: "Rconv5b/W/Initializer/random_uniform"
  op: "Add"
  input: "Rconv5b/W/Initializer/random_uniform/mul"
  input: "Rconv5b/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
}
node {
  name: "Rconv5b/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv5b/W/Assign"
  op: "Assign"
  input: "Rconv5b/W"
  input: "Rconv5b/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv5b/W/read"
  op: "Identity"
  input: "Rconv5b/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
}
node {
  name: "Rconv5b/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv5b/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv5b/b/Assign"
  op: "Assign"
  input: "Rconv5b/b"
  input: "Rconv5b/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv5b/b/read"
  op: "Identity"
  input: "Rconv5b/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
}
node {
  name: "Conv3D_10"
  op: "Conv3D"
  input: "Pad_5"
  input: "Rconv5b/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_10"
  op: "AddV2"
  input: "Conv3D_10"
  input: "Rconv5b/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "concat_3"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "concat_4"
  op: "ConcatV2"
  input: "strided_slice_1"
  input: "add_10"
  input: "concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rbn6a/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6a/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6a/beta/Assign"
  op: "Assign"
  input: "Rbn6a/beta"
  input: "Rbn6a/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/beta/read"
  op: "Identity"
  input: "Rbn6a/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
}
node {
  name: "Rbn6a/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6a/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6a/gamma/Assign"
  op: "Assign"
  input: "Rbn6a/gamma"
  input: "Rbn6a/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/gamma/read"
  op: "Identity"
  input: "Rbn6a/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
}
node {
  name: "Rbn6a/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6a/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6a/moving_mean/Assign"
  op: "Assign"
  input: "Rbn6a/moving_mean"
  input: "Rbn6a/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/moving_mean/read"
  op: "Identity"
  input: "Rbn6a/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6a/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6a/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6a/moving_variance/Assign"
  op: "Assign"
  input: "Rbn6a/moving_variance"
  input: "Rbn6a/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/moving_variance/read"
  op: "Identity"
  input: "Rbn6a/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn6a/cond/switch_t"
  op: "Identity"
  input: "Rbn6a/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn6a/cond/switch_f"
  op: "Identity"
  input: "Rbn6a/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn6a/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn6a/cond/moments/mean/reduction_indices"
  op: "Const"
  input: "^Rbn6a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/moments/mean"
  op: "Mean"
  input: "Rbn6a/cond/moments/mean/Switch:1"
  input: "Rbn6a/cond/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/cond/moments/mean/Switch"
  op: "Switch"
  input: "concat_4"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_4"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/moments/StopGradient"
  op: "StopGradient"
  input: "Rbn6a/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Rbn6a/cond/moments/mean/Switch:1"
  input: "Rbn6a/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/moments/variance/reduction_indices"
  op: "Const"
  input: "^Rbn6a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/moments/variance"
  op: "Mean"
  input: "Rbn6a/cond/moments/SquaredDifference"
  input: "Rbn6a/cond/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/cond/moments/Squeeze"
  op: "Squeeze"
  input: "Rbn6a/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn6a/cond/moments/Squeeze_1"
  op: "Squeeze"
  input: "Rbn6a/cond/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^Rbn6a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_mean/biased/Assign"
  op: "Assign"
  input: "Rbn6a/Rbn6a/moving_mean/biased"
  input: "Rbn6a/Rbn6a/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_mean/biased/read"
  op: "Identity"
  input: "Rbn6a/Rbn6a/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_mean/local_step/Assign"
  op: "Assign"
  input: "Rbn6a/Rbn6a/moving_mean/local_step"
  input: "Rbn6a/Rbn6a/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_mean/local_step/read"
  op: "Identity"
  input: "Rbn6a/Rbn6a/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "Rbn6a/cond/AssignMovingAvg/sub/Switch:1"
  input: "Rbn6a/cond/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "Rbn6a/Rbn6a/moving_mean/biased/read"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "Rbn6a/cond/AssignMovingAvg/sub"
  input: "Rbn6a/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "Rbn6a/cond/AssignMovingAvg/AssignSub/Switch:1"
  input: "Rbn6a/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn6a/Rbn6a/moving_mean/biased"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^Rbn6a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "Rbn6a/cond/AssignMovingAvg/AssignAdd/Switch:1"
  input: "Rbn6a/cond/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn6a/Rbn6a/moving_mean/local_step"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^Rbn6a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Rbn6a/cond/AssignMovingAvg/sub_1/x"
  input: "Rbn6a/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/Pow"
  op: "Pow"
  input: "Rbn6a/cond/AssignMovingAvg/sub_1"
  input: "Rbn6a/cond/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^Rbn6a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "Rbn6a/cond/AssignMovingAvg/sub_2/x"
  input: "Rbn6a/cond/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "Rbn6a/cond/AssignMovingAvg/AssignSub"
  input: "Rbn6a/cond/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg"
  op: "Assign"
  input: "Rbn6a/cond/AssignMovingAvg/Switch:1"
  input: "Rbn6a/cond/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "Rbn6a/moving_mean"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^Rbn6a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_variance/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_variance/biased/Assign"
  op: "Assign"
  input: "Rbn6a/Rbn6a/moving_variance/biased"
  input: "Rbn6a/Rbn6a/moving_variance/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_variance/biased/read"
  op: "Identity"
  input: "Rbn6a/Rbn6a/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_variance/local_step/Assign"
  op: "Assign"
  input: "Rbn6a/Rbn6a/moving_variance/local_step"
  input: "Rbn6a/Rbn6a/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/Rbn6a/moving_variance/local_step/read"
  op: "Identity"
  input: "Rbn6a/Rbn6a/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Rbn6a/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "Rbn6a/cond/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "Rbn6a/Rbn6a/moving_variance/biased/read"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Rbn6a/cond/AssignMovingAvg_1/sub"
  input: "Rbn6a/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/AssignSub"
  op: "AssignSub"
  input: "Rbn6a/cond/AssignMovingAvg_1/AssignSub/Switch:1"
  input: "Rbn6a/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn6a/Rbn6a/moving_variance/biased"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/AssignAdd/value"
  op: "Const"
  input: "^Rbn6a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/AssignAdd"
  op: "AssignAdd"
  input: "Rbn6a/cond/AssignMovingAvg_1/AssignAdd/Switch:1"
  input: "Rbn6a/cond/AssignMovingAvg_1/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn6a/Rbn6a/moving_variance/local_step"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/sub_1/x"
  op: "Const"
  input: "^Rbn6a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Rbn6a/cond/AssignMovingAvg_1/sub_1/x"
  input: "Rbn6a/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/Pow"
  op: "Pow"
  input: "Rbn6a/cond/AssignMovingAvg_1/sub_1"
  input: "Rbn6a/cond/AssignMovingAvg_1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/sub_2/x"
  op: "Const"
  input: "^Rbn6a/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/sub_2"
  op: "Sub"
  input: "Rbn6a/cond/AssignMovingAvg_1/sub_2/x"
  input: "Rbn6a/cond/AssignMovingAvg_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/truediv"
  op: "RealDiv"
  input: "Rbn6a/cond/AssignMovingAvg_1/AssignSub"
  input: "Rbn6a/cond/AssignMovingAvg_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1"
  op: "Assign"
  input: "Rbn6a/cond/AssignMovingAvg_1/Switch:1"
  input: "Rbn6a/cond/AssignMovingAvg_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "Rbn6a/moving_variance"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/Identity"
  op: "Identity"
  input: "Rbn6a/cond/moments/Squeeze"
  input: "^Rbn6a/cond/AssignMovingAvg"
  input: "^Rbn6a/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/Identity_1"
  op: "Identity"
  input: "Rbn6a/cond/moments/Squeeze_1"
  input: "^Rbn6a/cond/AssignMovingAvg"
  input: "^Rbn6a/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/Switch_1"
  op: "Switch"
  input: "Rbn6a/moving_mean/read"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/Switch_2"
  op: "Switch"
  input: "Rbn6a/moving_variance/read"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6a/cond/Merge"
  op: "Merge"
  input: "Rbn6a/cond/Switch_1"
  input: "Rbn6a/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6a/cond/Merge_1"
  op: "Merge"
  input: "Rbn6a/cond/Switch_2"
  input: "Rbn6a/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_10/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "batchnorm_10/add"
  op: "AddV2"
  input: "Rbn6a/cond/Merge_1"
  input: "batchnorm_10/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_10/Rsqrt"
  op: "Rsqrt"
  input: "batchnorm_10/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_10/mul"
  op: "Mul"
  input: "batchnorm_10/Rsqrt"
  input: "Rbn6a/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_10/mul_1"
  op: "Mul"
  input: "concat_4"
  input: "batchnorm_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_10/mul_2"
  op: "Mul"
  input: "Rbn6a/cond/Merge"
  input: "batchnorm_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_10/sub"
  op: "Sub"
  input: "Rbn6a/beta/read"
  input: "batchnorm_10/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_10/add_1"
  op: "AddV2"
  input: "batchnorm_10/mul_1"
  input: "batchnorm_10/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_10"
  op: "Relu"
  input: "batchnorm_10/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rconv6a/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\340\000\000\000\340\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv6a/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366342
      }
    }
  }
}
node {
  name: "Rconv6a/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366342
      }
    }
  }
}
node {
  name: "Rconv6a/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Rconv6a/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Rconv6a/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Rconv6a/W/Initializer/random_uniform/max"
  input: "Rconv6a/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
}
node {
  name: "Rconv6a/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Rconv6a/W/Initializer/random_uniform/RandomUniform"
  input: "Rconv6a/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
}
node {
  name: "Rconv6a/W/Initializer/random_uniform"
  op: "Add"
  input: "Rconv6a/W/Initializer/random_uniform/mul"
  input: "Rconv6a/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
}
node {
  name: "Rconv6a/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv6a/W/Assign"
  op: "Assign"
  input: "Rconv6a/W"
  input: "Rconv6a/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv6a/W/read"
  op: "Identity"
  input: "Rconv6a/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
}
node {
  name: "Rconv6a/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv6a/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv6a/b/Assign"
  op: "Assign"
  input: "Rconv6a/b"
  input: "Rconv6a/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv6a/b/read"
  op: "Identity"
  input: "Rconv6a/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
}
node {
  name: "Conv3D_11"
  op: "Conv3D"
  input: "Relu_10"
  input: "Rconv6a/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_11"
  op: "AddV2"
  input: "Conv3D_11"
  input: "Rconv6a/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6b/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6b/beta/Assign"
  op: "Assign"
  input: "Rbn6b/beta"
  input: "Rbn6b/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/beta/read"
  op: "Identity"
  input: "Rbn6b/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
}
node {
  name: "Rbn6b/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6b/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6b/gamma/Assign"
  op: "Assign"
  input: "Rbn6b/gamma"
  input: "Rbn6b/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/gamma/read"
  op: "Identity"
  input: "Rbn6b/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
}
node {
  name: "Rbn6b/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6b/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6b/moving_mean/Assign"
  op: "Assign"
  input: "Rbn6b/moving_mean"
  input: "Rbn6b/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/moving_mean/read"
  op: "Identity"
  input: "Rbn6b/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6b/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6b/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6b/moving_variance/Assign"
  op: "Assign"
  input: "Rbn6b/moving_variance"
  input: "Rbn6b/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/moving_variance/read"
  op: "Identity"
  input: "Rbn6b/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn6b/cond/switch_t"
  op: "Identity"
  input: "Rbn6b/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn6b/cond/switch_f"
  op: "Identity"
  input: "Rbn6b/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn6b/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Rbn6b/cond/moments/mean/reduction_indices"
  op: "Const"
  input: "^Rbn6b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/moments/mean"
  op: "Mean"
  input: "Rbn6b/cond/moments/mean/Switch:1"
  input: "Rbn6b/cond/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/cond/moments/mean/Switch"
  op: "Switch"
  input: "add_11"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_11"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/moments/StopGradient"
  op: "StopGradient"
  input: "Rbn6b/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Rbn6b/cond/moments/mean/Switch:1"
  input: "Rbn6b/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/moments/variance/reduction_indices"
  op: "Const"
  input: "^Rbn6b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/moments/variance"
  op: "Mean"
  input: "Rbn6b/cond/moments/SquaredDifference"
  input: "Rbn6b/cond/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/cond/moments/Squeeze"
  op: "Squeeze"
  input: "Rbn6b/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn6b/cond/moments/Squeeze_1"
  op: "Squeeze"
  input: "Rbn6b/cond/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^Rbn6b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_mean/biased/Assign"
  op: "Assign"
  input: "Rbn6b/Rbn6b/moving_mean/biased"
  input: "Rbn6b/Rbn6b/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_mean/biased/read"
  op: "Identity"
  input: "Rbn6b/Rbn6b/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_mean/local_step/Assign"
  op: "Assign"
  input: "Rbn6b/Rbn6b/moving_mean/local_step"
  input: "Rbn6b/Rbn6b/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_mean/local_step/read"
  op: "Identity"
  input: "Rbn6b/Rbn6b/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "Rbn6b/cond/AssignMovingAvg/sub/Switch:1"
  input: "Rbn6b/cond/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "Rbn6b/Rbn6b/moving_mean/biased/read"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "Rbn6b/cond/AssignMovingAvg/sub"
  input: "Rbn6b/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "Rbn6b/cond/AssignMovingAvg/AssignSub/Switch:1"
  input: "Rbn6b/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn6b/Rbn6b/moving_mean/biased"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^Rbn6b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "Rbn6b/cond/AssignMovingAvg/AssignAdd/Switch:1"
  input: "Rbn6b/cond/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn6b/Rbn6b/moving_mean/local_step"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^Rbn6b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Rbn6b/cond/AssignMovingAvg/sub_1/x"
  input: "Rbn6b/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/Pow"
  op: "Pow"
  input: "Rbn6b/cond/AssignMovingAvg/sub_1"
  input: "Rbn6b/cond/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^Rbn6b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "Rbn6b/cond/AssignMovingAvg/sub_2/x"
  input: "Rbn6b/cond/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "Rbn6b/cond/AssignMovingAvg/AssignSub"
  input: "Rbn6b/cond/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg"
  op: "Assign"
  input: "Rbn6b/cond/AssignMovingAvg/Switch:1"
  input: "Rbn6b/cond/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "Rbn6b/moving_mean"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^Rbn6b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_variance/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_variance/biased/Assign"
  op: "Assign"
  input: "Rbn6b/Rbn6b/moving_variance/biased"
  input: "Rbn6b/Rbn6b/moving_variance/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_variance/biased/read"
  op: "Identity"
  input: "Rbn6b/Rbn6b/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_variance/local_step/Assign"
  op: "Assign"
  input: "Rbn6b/Rbn6b/moving_variance/local_step"
  input: "Rbn6b/Rbn6b/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/Rbn6b/moving_variance/local_step/read"
  op: "Identity"
  input: "Rbn6b/Rbn6b/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Rbn6b/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "Rbn6b/cond/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "Rbn6b/Rbn6b/moving_variance/biased/read"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Rbn6b/cond/AssignMovingAvg_1/sub"
  input: "Rbn6b/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/AssignSub"
  op: "AssignSub"
  input: "Rbn6b/cond/AssignMovingAvg_1/AssignSub/Switch:1"
  input: "Rbn6b/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/AssignSub/Switch"
  op: "RefSwitch"
  input: "Rbn6b/Rbn6b/moving_variance/biased"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/AssignAdd/value"
  op: "Const"
  input: "^Rbn6b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/AssignAdd"
  op: "AssignAdd"
  input: "Rbn6b/cond/AssignMovingAvg_1/AssignAdd/Switch:1"
  input: "Rbn6b/cond/AssignMovingAvg_1/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/AssignAdd/Switch"
  op: "RefSwitch"
  input: "Rbn6b/Rbn6b/moving_variance/local_step"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/sub_1/x"
  op: "Const"
  input: "^Rbn6b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Rbn6b/cond/AssignMovingAvg_1/sub_1/x"
  input: "Rbn6b/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/Pow"
  op: "Pow"
  input: "Rbn6b/cond/AssignMovingAvg_1/sub_1"
  input: "Rbn6b/cond/AssignMovingAvg_1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/sub_2/x"
  op: "Const"
  input: "^Rbn6b/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/sub_2"
  op: "Sub"
  input: "Rbn6b/cond/AssignMovingAvg_1/sub_2/x"
  input: "Rbn6b/cond/AssignMovingAvg_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/truediv"
  op: "RealDiv"
  input: "Rbn6b/cond/AssignMovingAvg_1/AssignSub"
  input: "Rbn6b/cond/AssignMovingAvg_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1"
  op: "Assign"
  input: "Rbn6b/cond/AssignMovingAvg_1/Switch:1"
  input: "Rbn6b/cond/AssignMovingAvg_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "Rbn6b/moving_variance"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/Identity"
  op: "Identity"
  input: "Rbn6b/cond/moments/Squeeze"
  input: "^Rbn6b/cond/AssignMovingAvg"
  input: "^Rbn6b/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/Identity_1"
  op: "Identity"
  input: "Rbn6b/cond/moments/Squeeze_1"
  input: "^Rbn6b/cond/AssignMovingAvg"
  input: "^Rbn6b/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/Switch_1"
  op: "Switch"
  input: "Rbn6b/moving_mean/read"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/Switch_2"
  op: "Switch"
  input: "Rbn6b/moving_variance/read"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
}
node {
  name: "Rbn6b/cond/Merge"
  op: "Merge"
  input: "Rbn6b/cond/Switch_1"
  input: "Rbn6b/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Rbn6b/cond/Merge_1"
  op: "Merge"
  input: "Rbn6b/cond/Switch_2"
  input: "Rbn6b/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_11/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "batchnorm_11/add"
  op: "AddV2"
  input: "Rbn6b/cond/Merge_1"
  input: "batchnorm_11/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_11/Rsqrt"
  op: "Rsqrt"
  input: "batchnorm_11/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_11/mul"
  op: "Mul"
  input: "batchnorm_11/Rsqrt"
  input: "Rbn6b/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_11/mul_1"
  op: "Mul"
  input: "add_11"
  input: "batchnorm_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_11/mul_2"
  op: "Mul"
  input: "Rbn6b/cond/Merge"
  input: "batchnorm_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_11/sub"
  op: "Sub"
  input: "Rbn6b/beta/read"
  input: "batchnorm_11/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_11/add_1"
  op: "AddV2"
  input: "batchnorm_11/mul_1"
  input: "batchnorm_11/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_11"
  op: "Relu"
  input: "batchnorm_11/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Pad_6/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Pad_6"
  op: "Pad"
  input: "Relu_11"
  input: "Pad_6/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv6b/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\340\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv6b/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03149704
      }
    }
  }
}
node {
  name: "Rconv6b/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03149704
      }
    }
  }
}
node {
  name: "Rconv6b/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Rconv6b/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Rconv6b/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Rconv6b/W/Initializer/random_uniform/max"
  input: "Rconv6b/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
}
node {
  name: "Rconv6b/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Rconv6b/W/Initializer/random_uniform/RandomUniform"
  input: "Rconv6b/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
}
node {
  name: "Rconv6b/W/Initializer/random_uniform"
  op: "Add"
  input: "Rconv6b/W/Initializer/random_uniform/mul"
  input: "Rconv6b/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
}
node {
  name: "Rconv6b/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 224
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv6b/W/Assign"
  op: "Assign"
  input: "Rconv6b/W"
  input: "Rconv6b/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv6b/W/read"
  op: "Identity"
  input: "Rconv6b/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
}
node {
  name: "Rconv6b/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv6b/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv6b/b/Assign"
  op: "Assign"
  input: "Rconv6b/b"
  input: "Rconv6b/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv6b/b/read"
  op: "Identity"
  input: "Rconv6b/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
}
node {
  name: "Conv3D_12"
  op: "Conv3D"
  input: "Pad_6"
  input: "Rconv6b/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_12"
  op: "AddV2"
  input: "Conv3D_12"
  input: "Rconv6b/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2"
  op: "StridedSlice"
  input: "concat_4"
  input: "strided_slice_2/stack"
  input: "strided_slice_2/stack_1"
  input: "strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "concat_5"
  op: "ConcatV2"
  input: "strided_slice_2"
  input: "add_12"
  input: "concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fbn1/beta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fbn1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fbn1/beta/Assign"
  op: "Assign"
  input: "fbn1/beta"
  input: "fbn1/beta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/beta/read"
  op: "Identity"
  input: "fbn1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
}
node {
  name: "fbn1/gamma/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fbn1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fbn1/gamma/Assign"
  op: "Assign"
  input: "fbn1/gamma"
  input: "fbn1/gamma/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/gamma/read"
  op: "Identity"
  input: "fbn1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
}
node {
  name: "fbn1/moving_mean/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fbn1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fbn1/moving_mean/Assign"
  op: "Assign"
  input: "fbn1/moving_mean"
  input: "fbn1/moving_mean/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/moving_mean/read"
  op: "Identity"
  input: "fbn1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
}
node {
  name: "fbn1/moving_variance/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fbn1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fbn1/moving_variance/Assign"
  op: "Assign"
  input: "fbn1/moving_variance"
  input: "fbn1/moving_variance/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/moving_variance/read"
  op: "Identity"
  input: "fbn1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
}
node {
  name: "fbn1/cond/Switch"
  op: "Switch"
  input: "is_train"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "fbn1/cond/switch_t"
  op: "Identity"
  input: "fbn1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "fbn1/cond/switch_f"
  op: "Identity"
  input: "fbn1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "fbn1/cond/pred_id"
  op: "Identity"
  input: "is_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "fbn1/cond/moments/mean/reduction_indices"
  op: "Const"
  input: "^fbn1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "fbn1/cond/moments/mean"
  op: "Mean"
  input: "fbn1/cond/moments/mean/Switch:1"
  input: "fbn1/cond/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/cond/moments/mean/Switch"
  op: "Switch"
  input: "concat_5"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat_5"
      }
    }
  }
}
node {
  name: "fbn1/cond/moments/StopGradient"
  op: "StopGradient"
  input: "fbn1/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "fbn1/cond/moments/mean/Switch:1"
  input: "fbn1/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/moments/variance/reduction_indices"
  op: "Const"
  input: "^fbn1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "fbn1/cond/moments/variance"
  op: "Mean"
  input: "fbn1/cond/moments/SquaredDifference"
  input: "fbn1/cond/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/cond/moments/Squeeze"
  op: "Squeeze"
  input: "fbn1/cond/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "fbn1/cond/moments/Squeeze_1"
  op: "Squeeze"
  input: "fbn1/cond/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
        i: 3
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/decay"
  op: "Const"
  input: "^fbn1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "fbn1/fbn1/moving_mean/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fbn1/fbn1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fbn1/fbn1/moving_mean/biased/Assign"
  op: "Assign"
  input: "fbn1/fbn1/moving_mean/biased"
  input: "fbn1/fbn1/moving_mean/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/fbn1/moving_mean/biased/read"
  op: "Identity"
  input: "fbn1/fbn1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
}
node {
  name: "fbn1/fbn1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fbn1/fbn1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fbn1/fbn1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "fbn1/fbn1/moving_mean/local_step"
  input: "fbn1/fbn1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/fbn1/moving_mean/local_step/read"
  op: "Identity"
  input: "fbn1/fbn1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/sub"
  op: "Sub"
  input: "fbn1/cond/AssignMovingAvg/sub/Switch:1"
  input: "fbn1/cond/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/sub/Switch"
  op: "Switch"
  input: "fbn1/fbn1/moving_mean/biased/read"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/mul"
  op: "Mul"
  input: "fbn1/cond/AssignMovingAvg/sub"
  input: "fbn1/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/AssignSub"
  op: "AssignSub"
  input: "fbn1/cond/AssignMovingAvg/AssignSub/Switch:1"
  input: "fbn1/cond/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/AssignSub/Switch"
  op: "RefSwitch"
  input: "fbn1/fbn1/moving_mean/biased"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/AssignAdd/value"
  op: "Const"
  input: "^fbn1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/AssignAdd"
  op: "AssignAdd"
  input: "fbn1/cond/AssignMovingAvg/AssignAdd/Switch:1"
  input: "fbn1/cond/AssignMovingAvg/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/AssignAdd/Switch"
  op: "RefSwitch"
  input: "fbn1/fbn1/moving_mean/local_step"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/sub_1/x"
  op: "Const"
  input: "^fbn1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "fbn1/cond/AssignMovingAvg/sub_1/x"
  input: "fbn1/cond/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/Pow"
  op: "Pow"
  input: "fbn1/cond/AssignMovingAvg/sub_1"
  input: "fbn1/cond/AssignMovingAvg/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/sub_2/x"
  op: "Const"
  input: "^fbn1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "fbn1/cond/AssignMovingAvg/sub_2/x"
  input: "fbn1/cond/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "fbn1/cond/AssignMovingAvg/AssignSub"
  input: "fbn1/cond/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg"
  op: "Assign"
  input: "fbn1/cond/AssignMovingAvg/Switch:1"
  input: "fbn1/cond/AssignMovingAvg/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "fbn1/moving_mean"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/decay"
  op: "Const"
  input: "^fbn1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "fbn1/fbn1/moving_variance/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fbn1/fbn1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fbn1/fbn1/moving_variance/biased/Assign"
  op: "Assign"
  input: "fbn1/fbn1/moving_variance/biased"
  input: "fbn1/fbn1/moving_variance/biased/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/fbn1/moving_variance/biased/read"
  op: "Identity"
  input: "fbn1/fbn1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
}
node {
  name: "fbn1/fbn1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fbn1/fbn1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fbn1/fbn1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "fbn1/fbn1/moving_variance/local_step"
  input: "fbn1/fbn1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/fbn1/moving_variance/local_step/read"
  op: "Identity"
  input: "fbn1/fbn1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "fbn1/cond/AssignMovingAvg_1/sub/Switch:1"
  input: "fbn1/cond/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/sub/Switch"
  op: "Switch"
  input: "fbn1/fbn1/moving_variance/biased/read"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "fbn1/cond/AssignMovingAvg_1/sub"
  input: "fbn1/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/AssignSub"
  op: "AssignSub"
  input: "fbn1/cond/AssignMovingAvg_1/AssignSub/Switch:1"
  input: "fbn1/cond/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/AssignSub/Switch"
  op: "RefSwitch"
  input: "fbn1/fbn1/moving_variance/biased"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/AssignAdd/value"
  op: "Const"
  input: "^fbn1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/AssignAdd"
  op: "AssignAdd"
  input: "fbn1/cond/AssignMovingAvg_1/AssignAdd/Switch:1"
  input: "fbn1/cond/AssignMovingAvg_1/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/AssignAdd/Switch"
  op: "RefSwitch"
  input: "fbn1/fbn1/moving_variance/local_step"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/sub_1/x"
  op: "Const"
  input: "^fbn1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "fbn1/cond/AssignMovingAvg_1/sub_1/x"
  input: "fbn1/cond/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/Pow"
  op: "Pow"
  input: "fbn1/cond/AssignMovingAvg_1/sub_1"
  input: "fbn1/cond/AssignMovingAvg_1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/sub_2/x"
  op: "Const"
  input: "^fbn1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/sub_2"
  op: "Sub"
  input: "fbn1/cond/AssignMovingAvg_1/sub_2/x"
  input: "fbn1/cond/AssignMovingAvg_1/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/truediv"
  op: "RealDiv"
  input: "fbn1/cond/AssignMovingAvg_1/AssignSub"
  input: "fbn1/cond/AssignMovingAvg_1/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1"
  op: "Assign"
  input: "fbn1/cond/AssignMovingAvg_1/Switch:1"
  input: "fbn1/cond/AssignMovingAvg_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/cond/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "fbn1/moving_variance"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
}
node {
  name: "fbn1/cond/Identity"
  op: "Identity"
  input: "fbn1/cond/moments/Squeeze"
  input: "^fbn1/cond/AssignMovingAvg"
  input: "^fbn1/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/Identity_1"
  op: "Identity"
  input: "fbn1/cond/moments/Squeeze_1"
  input: "^fbn1/cond/AssignMovingAvg"
  input: "^fbn1/cond/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/Switch_1"
  op: "Switch"
  input: "fbn1/moving_mean/read"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
}
node {
  name: "fbn1/cond/Switch_2"
  op: "Switch"
  input: "fbn1/moving_variance/read"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
}
node {
  name: "fbn1/cond/Merge"
  op: "Merge"
  input: "fbn1/cond/Switch_1"
  input: "fbn1/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fbn1/cond/Merge_1"
  op: "Merge"
  input: "fbn1/cond/Switch_2"
  input: "fbn1/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_12/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "batchnorm_12/add"
  op: "AddV2"
  input: "fbn1/cond/Merge_1"
  input: "batchnorm_12/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_12/Rsqrt"
  op: "Rsqrt"
  input: "batchnorm_12/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_12/mul"
  op: "Mul"
  input: "batchnorm_12/Rsqrt"
  input: "fbn1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_12/mul_1"
  op: "Mul"
  input: "concat_5"
  input: "batchnorm_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_12/mul_2"
  op: "Mul"
  input: "fbn1/cond/Merge"
  input: "batchnorm_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_12/sub"
  op: "Sub"
  input: "fbn1/beta/read"
  input: "batchnorm_12/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batchnorm_12/add_1"
  op: "AddV2"
  input: "batchnorm_12/mul_1"
  input: "batchnorm_12/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_12"
  op: "Relu"
  input: "batchnorm_12/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Pad_7/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Pad_7"
  op: "Pad"
  input: "Relu_12"
  input: "Pad_7/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv2/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103104
      }
    }
  }
}
node {
  name: "conv2/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103104
      }
    }
  }
}
node {
  name: "conv2/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2/W/Initializer/random_uniform/max"
  input: "conv2/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
}
node {
  name: "conv2/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2/W/Initializer/random_uniform/RandomUniform"
  input: "conv2/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
}
node {
  name: "conv2/W/Initializer/random_uniform"
  op: "Add"
  input: "conv2/W/Initializer/random_uniform/mul"
  input: "conv2/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
}
node {
  name: "conv2/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/W/Assign"
  op: "Assign"
  input: "conv2/W"
  input: "conv2/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/W/read"
  op: "Identity"
  input: "conv2/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
}
node {
  name: "conv2/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/b/Assign"
  op: "Assign"
  input: "conv2/b"
  input: "conv2/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/b/read"
  op: "Identity"
  input: "conv2/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
}
node {
  name: "Conv3D_13"
  op: "Conv3D"
  input: "Pad_7"
  input: "conv2/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_13"
  op: "AddV2"
  input: "Conv3D_13"
  input: "conv2/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_13"
  op: "Relu"
  input: "add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "rconv1/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.15309311
      }
    }
  }
}
node {
  name: "rconv1/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15309311
      }
    }
  }
}
node {
  name: "rconv1/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rconv1/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rconv1/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rconv1/W/Initializer/random_uniform/max"
  input: "rconv1/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
}
node {
  name: "rconv1/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rconv1/W/Initializer/random_uniform/RandomUniform"
  input: "rconv1/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
}
node {
  name: "rconv1/W/Initializer/random_uniform"
  op: "Add"
  input: "rconv1/W/Initializer/random_uniform/mul"
  input: "rconv1/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
}
node {
  name: "rconv1/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rconv1/W/Assign"
  op: "Assign"
  input: "rconv1/W"
  input: "rconv1/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rconv1/W/read"
  op: "Identity"
  input: "rconv1/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
}
node {
  name: "rconv1/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv1/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rconv1/b/Assign"
  op: "Assign"
  input: "rconv1/b"
  input: "rconv1/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rconv1/b/read"
  op: "Identity"
  input: "rconv1/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
}
node {
  name: "Conv3D_14"
  op: "Conv3D"
  input: "Relu_13"
  input: "rconv1/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_14"
  op: "AddV2"
  input: "Conv3D_14"
  input: "rconv1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_14"
  op: "Relu"
  input: "add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "rconv2/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.15309311
      }
    }
  }
}
node {
  name: "rconv2/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15309311
      }
    }
  }
}
node {
  name: "rconv2/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rconv2/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rconv2/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rconv2/W/Initializer/random_uniform/max"
  input: "rconv2/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
}
node {
  name: "rconv2/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rconv2/W/Initializer/random_uniform/RandomUniform"
  input: "rconv2/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
}
node {
  name: "rconv2/W/Initializer/random_uniform"
  op: "Add"
  input: "rconv2/W/Initializer/random_uniform/mul"
  input: "rconv2/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
}
node {
  name: "rconv2/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rconv2/W/Assign"
  op: "Assign"
  input: "rconv2/W"
  input: "rconv2/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rconv2/W/read"
  op: "Identity"
  input: "rconv2/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
}
node {
  name: "rconv2/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv2/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rconv2/b/Assign"
  op: "Assign"
  input: "rconv2/b"
  input: "rconv2/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rconv2/b/read"
  op: "Identity"
  input: "rconv2/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
}
node {
  name: "Conv3D_15"
  op: "Conv3D"
  input: "Relu_14"
  input: "rconv2/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_15"
  op: "AddV2"
  input: "Conv3D_15"
  input: "rconv2/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fconv1/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fconv1/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.15309311
      }
    }
  }
}
node {
  name: "fconv1/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15309311
      }
    }
  }
}
node {
  name: "fconv1/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fconv1/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fconv1/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fconv1/W/Initializer/random_uniform/max"
  input: "fconv1/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
}
node {
  name: "fconv1/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fconv1/W/Initializer/random_uniform/RandomUniform"
  input: "fconv1/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
}
node {
  name: "fconv1/W/Initializer/random_uniform"
  op: "Add"
  input: "fconv1/W/Initializer/random_uniform/mul"
  input: "fconv1/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
}
node {
  name: "fconv1/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fconv1/W/Assign"
  op: "Assign"
  input: "fconv1/W"
  input: "fconv1/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fconv1/W/read"
  op: "Identity"
  input: "fconv1/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
}
node {
  name: "fconv1/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fconv1/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fconv1/b/Assign"
  op: "Assign"
  input: "fconv1/b"
  input: "fconv1/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fconv1/b/read"
  op: "Identity"
  input: "fconv1/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
}
node {
  name: "Conv3D_16"
  op: "Conv3D"
  input: "Relu_13"
  input: "fconv1/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_16"
  op: "AddV2"
  input: "Conv3D_16"
  input: "fconv1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_15"
  op: "Relu"
  input: "add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fconv2/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000\220\001\000\000"
      }
    }
  }
}
node {
  name: "fconv2/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317
      }
    }
  }
}
node {
  name: "fconv2/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317
      }
    }
  }
}
node {
  name: "fconv2/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fconv2/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fconv2/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fconv2/W/Initializer/random_uniform/max"
  input: "fconv2/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
}
node {
  name: "fconv2/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fconv2/W/Initializer/random_uniform/RandomUniform"
  input: "fconv2/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
}
node {
  name: "fconv2/W/Initializer/random_uniform"
  op: "Add"
  input: "fconv2/W/Initializer/random_uniform/mul"
  input: "fconv2/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
}
node {
  name: "fconv2/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fconv2/W/Assign"
  op: "Assign"
  input: "fconv2/W"
  input: "fconv2/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fconv2/W/read"
  op: "Identity"
  input: "fconv2/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
}
node {
  name: "fconv2/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fconv2/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fconv2/b/Assign"
  op: "Assign"
  input: "fconv2/b"
  input: "fconv2/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fconv2/b/read"
  op: "Identity"
  input: "fconv2/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
}
node {
  name: "Conv3D_17"
  op: "Conv3D"
  input: "Relu_15"
  input: "fconv2/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "add_17"
  op: "AddV2"
  input: "Conv3D_17"
  input: "fconv2/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_3"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice_3/stack"
  input: "strided_slice_3/stack_1"
  input: "strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_4"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice_4/stack"
  input: "strided_slice_4/stack_1"
  input: "strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_5"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice_5/stack"
  input: "strided_slice_5/stack_1"
  input: "strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_6"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice_6/stack"
  input: "strided_slice_6/stack_1"
  input: "strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Reshape/shape/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 25
      }
    }
  }
}
node {
  name: "Reshape/shape/5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Pack"
  input: "strided_slice_3"
  input: "strided_slice_4"
  input: "strided_slice_5"
  input: "strided_slice_6"
  input: "Reshape/shape/4"
  input: "Reshape/shape/5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "add_17"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub"
  op: "Sub"
  input: "Rank_1"
  input: "Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range"
  op: "Range"
  input: "range/start"
  input: "range/limit"
  input: "range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range_1"
  op: "Range"
  input: "range_1/start"
  input: "Sub"
  input: "range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_6/values_1"
  op: "Pack"
  input: "Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "concat_6/values_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "concat_6/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_6"
  op: "ConcatV2"
  input: "range"
  input: "concat_6/values_1"
  input: "range_1"
  input: "concat_6/values_3"
  input: "concat_6/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "Reshape"
  input: "concat_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Softmax"
  op: "Softmax"
  input: "transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub_1"
  op: "Sub"
  input: "Rank_1"
  input: "Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range_2/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range_2"
  op: "Range"
  input: "range_2/start"
  input: "range_2/limit"
  input: "range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range_3"
  op: "Range"
  input: "range_3/start"
  input: "Sub_1"
  input: "range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_7/values_1"
  op: "Pack"
  input: "Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "concat_7/values_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "concat_7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_7"
  op: "ConcatV2"
  input: "range_2"
  input: "concat_7/values_1"
  input: "range_3"
  input: "concat_7/values_3"
  input: "concat_7/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "transpose_1"
  op: "Transpose"
  input: "Softmax"
  input: "concat_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_7"
  op: "StridedSlice"
  input: "L_in"
  input: "strided_slice_7/stack"
  input: "strided_slice_7/stack_1"
  input: "strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 16
    }
  }
}
node {
  name: "strided_slice_8/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_8"
  op: "StridedSlice"
  input: "transpose_1"
  input: "strided_slice_8/stack"
  input: "strided_slice_8/stack_1"
  input: "strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 61
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 61
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "filter_localexpand/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_localexpand"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 25
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "filter_localexpand"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_localexpand"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 25
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "filter_localexpand"
    }
  }
}
node {
  name: "filter_localexpand/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "filter_localexpand"
}
node {
  name: "filter_localexpand/Assign"
  op: "AssignVariableOp"
  input: "filter_localexpand"
  input: "filter_localexpand/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "filter_localexpand/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "filter_localexpand"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_2"
  op: "Transpose"
  input: "strided_slice_7"
  input: "transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "filter_localexpand"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D"
  op: "Conv2D"
  input: "transpose_2"
  input: "Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "Conv2D"
  input: "ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MatMul"
  op: "BatchMatMulV2"
  input: "ExpandDims"
  input: "strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "Squeeze"
  op: "Squeeze"
  input: "MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 3
      }
    }
  }
}
node {
  name: "DepthToSpace"
  op: "DepthToSpace"
  input: "Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "block_size"
    value {
      i: 4
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "strided_slice_9/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_9"
  op: "StridedSlice"
  input: "L_in"
  input: "strided_slice_9/stack"
  input: "strided_slice_9/stack_1"
  input: "strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 16
    }
  }
}
node {
  name: "strided_slice_10/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_10"
  op: "StridedSlice"
  input: "transpose_1"
  input: "strided_slice_10/stack"
  input: "strided_slice_10/stack_1"
  input: "strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 61
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 61
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "filter_localexpand_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_localexpand_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 25
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "filter_localexpand_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_localexpand_1"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 25
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "filter_localexpand_1"
    }
  }
}
node {
  name: "filter_localexpand_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "filter_localexpand_1"
}
node {
  name: "filter_localexpand_1/Assign"
  op: "AssignVariableOp"
  input: "filter_localexpand_1"
  input: "filter_localexpand_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "filter_localexpand_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "filter_localexpand_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_3"
  op: "Transpose"
  input: "strided_slice_9"
  input: "transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv2D_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "filter_localexpand_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_1"
  op: "Conv2D"
  input: "transpose_3"
  input: "Conv2D_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ExpandDims_1"
  op: "ExpandDims"
  input: "Conv2D_1"
  input: "ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MatMul_1"
  op: "BatchMatMulV2"
  input: "ExpandDims_1"
  input: "strided_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "Squeeze_1"
  op: "Squeeze"
  input: "MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 3
      }
    }
  }
}
node {
  name: "DepthToSpace_1"
  op: "DepthToSpace"
  input: "Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "block_size"
    value {
      i: 4
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "strided_slice_11/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_11/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_11/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_11"
  op: "StridedSlice"
  input: "L_in"
  input: "strided_slice_11/stack"
  input: "strided_slice_11/stack_1"
  input: "strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 13
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 16
    }
  }
}
node {
  name: "strided_slice_12/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_12/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_12/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_12"
  op: "StridedSlice"
  input: "transpose_1"
  input: "strided_slice_12/stack"
  input: "strided_slice_12/stack_1"
  input: "strided_slice_12/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 61
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 61
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "filter_localexpand_2/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_localexpand_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 25
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "filter_localexpand_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter_localexpand_2"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 25
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "filter_localexpand_2"
    }
  }
}
node {
  name: "filter_localexpand_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "filter_localexpand_2"
}
node {
  name: "filter_localexpand_2/Assign"
  op: "AssignVariableOp"
  input: "filter_localexpand_2"
  input: "filter_localexpand_2/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "filter_localexpand_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "filter_localexpand_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transpose_4/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_4"
  op: "Transpose"
  input: "strided_slice_11"
  input: "transpose_4/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv2D_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "filter_localexpand_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_2"
  op: "Conv2D"
  input: "transpose_4"
  input: "Conv2D_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ExpandDims_2"
  op: "ExpandDims"
  input: "Conv2D_2"
  input: "ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MatMul_2"
  op: "BatchMatMulV2"
  input: "ExpandDims_2"
  input: "strided_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "Squeeze_2"
  op: "Squeeze"
  input: "MatMul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 3
      }
    }
  }
}
node {
  name: "DepthToSpace_2"
  op: "DepthToSpace"
  input: "Squeeze_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "block_size"
    value {
      i: 4
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "concat_8/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concat_8"
  op: "ConcatV2"
  input: "DepthToSpace"
  input: "DepthToSpace_1"
  input: "DepthToSpace_2"
  input: "concat_8/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims_3"
  op: "ExpandDims"
  input: "concat_8"
  input: "ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Shape_1"
  op: "Shape"
  input: "add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_13/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_13/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_13/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_13"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_13/stack"
  input: "strided_slice_13/stack_1"
  input: "strided_slice_13/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_14/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_14/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_14/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_14"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_14/stack"
  input: "strided_slice_14/stack_1"
  input: "strided_slice_14/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "strided_slice_13"
  input: "strided_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_15/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_15/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_15/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_15"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_15/stack"
  input: "strided_slice_15/stack_1"
  input: "strided_slice_15/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_16/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_16/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "strided_slice_16/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_16"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_16/stack"
  input: "strided_slice_16/stack_1"
  input: "strided_slice_16/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_17/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "strided_slice_17/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "strided_slice_17/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_17"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_17/stack"
  input: "strided_slice_17/stack_1"
  input: "strided_slice_17/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Pack"
  input: "mul"
  input: "strided_slice_15"
  input: "strided_slice_16"
  input: "strided_slice_17"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "add_15"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DepthToSpace_3"
  op: "DepthToSpace"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "block_size"
    value {
      i: 4
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Shape_2"
  op: "Shape"
  input: "DepthToSpace_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_18/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_18/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_18/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_18"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_18/stack"
  input: "strided_slice_18/stack_1"
  input: "strided_slice_18/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_19/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_19/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_19/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_19"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_19/stack"
  input: "strided_slice_19/stack_1"
  input: "strided_slice_19/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_20/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_20/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_20/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_20"
  op: "StridedSlice"
  input: "Shape_2"
  input: "strided_slice_20/stack"
  input: "strided_slice_20/stack_1"
  input: "strided_slice_20/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_21/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_21/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_21/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_21"
  op: "StridedSlice"
  input: "Shape_2"
  input: "strided_slice_21/stack"
  input: "strided_slice_21/stack_1"
  input: "strided_slice_21/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_22/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_22/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "strided_slice_22/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_22"
  op: "StridedSlice"
  input: "Shape_2"
  input: "strided_slice_22/stack"
  input: "strided_slice_22/stack_1"
  input: "strided_slice_22/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Pack"
  input: "strided_slice_18"
  input: "strided_slice_19"
  input: "strided_slice_20"
  input: "strided_slice_21"
  input: "strided_slice_22"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "DepthToSpace_3"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "add_18"
  op: "AddV2"
  input: "ExpandDims_3"
  input: "Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "out_H/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "out_H/Minimum"
  op: "Minimum"
  input: "add_18"
  input: "out_H/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "out_H/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "out_H"
  op: "Maximum"
  input: "out_H/Minimum"
  input: "out_H/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "out_H"
  input: "H_out_true"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Abs"
  op: "Abs"
  input: "sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01
      }
    }
  }
}
node {
  name: "Minimum"
  op: "Minimum"
  input: "Abs"
  input: "Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_3"
  op: "Sub"
  input: "Abs"
  input: "Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "pow"
  op: "Pow"
  input: "Minimum"
  input: "pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "mul_1/x"
  input: "pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01
      }
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "mul_2/x"
  input: "sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_19"
  op: "AddV2"
  input: "mul_1"
  input: "mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "add_19"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "learning_rate"
    }
  }
}
node {
  name: "learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "learning_rate"
}
node {
  name: "learning_rate/Assign"
  op: "AssignVariableOp"
  input: "learning_rate"
  input: "learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9
      }
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "ReadVariableOp"
  input: "mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "learning_rate"
  input: "mul_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "learning_rate"
  input: "^AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape"
  op: "Shape"
  input: "add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_grad/Reshape"
  input: "gradients/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_1"
  op: "Shape"
  input: "add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_1"
  input: "gradients/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_2"
  input: "gradients/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Mean_grad/Prod_1"
  input: "gradients/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Mean_grad/Prod"
  input: "gradients/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_grad/Tile"
  input: "gradients/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/add_19_grad/Shape"
  op: "Shape"
  input: "mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_19_grad/Shape_1"
  op: "Shape"
  input: "mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_19_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_19_grad/Shape"
  input: "gradients/add_19_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_19_grad/Sum"
  op: "Sum"
  input: "gradients/Mean_grad/truediv"
  input: "gradients/add_19_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_19_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_19_grad/Sum"
  input: "gradients/add_19_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_19_grad/Sum_1"
  op: "Sum"
  input: "gradients/Mean_grad/truediv"
  input: "gradients/add_19_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_19_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_19_grad/Sum_1"
  input: "gradients/add_19_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_19_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_19_grad/Reshape"
  input: "^gradients/add_19_grad/Reshape_1"
}
node {
  name: "gradients/add_19_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_19_grad/Reshape"
  input: "^gradients/add_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_19_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_19_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_19_grad/Reshape_1"
  input: "^gradients/add_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_19_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Shape"
  op: "Shape"
  input: "mul_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/Shape_1"
  op: "Shape"
  input: "pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_1_grad/Shape"
  input: "gradients/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/add_19_grad/tuple/control_dependency"
  input: "pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/mul_1_grad/Mul"
  input: "gradients/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_1_grad/Sum"
  input: "gradients/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/Mul_1"
  op: "Mul"
  input: "mul_1/x"
  input: "gradients/add_19_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_1_grad/Mul_1"
  input: "gradients/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_1_grad/Sum_1"
  input: "gradients/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_1_grad/Reshape"
  input: "^gradients/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_1_grad/Reshape"
  input: "^gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_1_grad/Reshape_1"
  input: "^gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/Shape"
  op: "Shape"
  input: "mul_2/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_2_grad/Shape_1"
  op: "Shape"
  input: "sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_2_grad/Shape"
  input: "gradients/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/add_19_grad/tuple/control_dependency_1"
  input: "sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/mul_2_grad/Mul"
  input: "gradients/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_2_grad/Sum"
  input: "gradients/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_2_grad/Mul_1"
  op: "Mul"
  input: "mul_2/x"
  input: "gradients/add_19_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_2_grad/Mul_1"
  input: "gradients/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_2_grad/Sum_1"
  input: "gradients/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_2_grad/Reshape"
  input: "^gradients/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_2_grad/Reshape"
  input: "^gradients/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_2_grad/Reshape_1"
  input: "^gradients/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/pow_grad/Shape"
  op: "Shape"
  input: "Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/pow_grad/Shape_1"
  op: "Shape"
  input: "pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/pow_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/pow_grad/Shape"
  input: "gradients/pow_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/pow_grad/mul"
  op: "Mul"
  input: "gradients/mul_1_grad/tuple/control_dependency_1"
  input: "pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/pow_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/pow_grad/sub"
  op: "Sub"
  input: "pow/y"
  input: "gradients/pow_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/pow_grad/Pow"
  op: "Pow"
  input: "Minimum"
  input: "gradients/pow_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/pow_grad/mul_1"
  op: "Mul"
  input: "gradients/pow_grad/mul"
  input: "gradients/pow_grad/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/pow_grad/Sum"
  op: "Sum"
  input: "gradients/pow_grad/mul_1"
  input: "gradients/pow_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/pow_grad/Reshape"
  op: "Reshape"
  input: "gradients/pow_grad/Sum"
  input: "gradients/pow_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/pow_grad/Greater/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/pow_grad/Greater"
  op: "Greater"
  input: "Minimum"
  input: "gradients/pow_grad/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/pow_grad/ones_like/Shape"
  op: "Shape"
  input: "Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/pow_grad/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/pow_grad/ones_like"
  op: "Fill"
  input: "gradients/pow_grad/ones_like/Shape"
  input: "gradients/pow_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/pow_grad/Select"
  op: "Select"
  input: "gradients/pow_grad/Greater"
  input: "Minimum"
  input: "gradients/pow_grad/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/pow_grad/Log"
  op: "Log"
  input: "gradients/pow_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/pow_grad/zeros_like"
  op: "ZerosLike"
  input: "Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/pow_grad/Select_1"
  op: "Select"
  input: "gradients/pow_grad/Greater"
  input: "gradients/pow_grad/Log"
  input: "gradients/pow_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/pow_grad/mul_2"
  op: "Mul"
  input: "gradients/mul_1_grad/tuple/control_dependency_1"
  input: "pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/pow_grad/mul_3"
  op: "Mul"
  input: "gradients/pow_grad/mul_2"
  input: "gradients/pow_grad/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/pow_grad/Sum_1"
  op: "Sum"
  input: "gradients/pow_grad/mul_3"
  input: "gradients/pow_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/pow_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/pow_grad/Sum_1"
  input: "gradients/pow_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/pow_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/pow_grad/Reshape"
  input: "^gradients/pow_grad/Reshape_1"
}
node {
  name: "gradients/pow_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/pow_grad/Reshape"
  input: "^gradients/pow_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/pow_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/pow_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/pow_grad/Reshape_1"
  input: "^gradients/pow_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/pow_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/sub_3_grad/Shape"
  op: "Shape"
  input: "Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_3_grad/Shape_1"
  op: "Shape"
  input: "Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sub_3_grad/Shape"
  input: "gradients/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_3_grad/Sum"
  op: "Sum"
  input: "gradients/mul_2_grad/tuple/control_dependency_1"
  input: "gradients/sub_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_3_grad/Sum"
  input: "gradients/sub_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_3_grad/Neg"
  op: "Neg"
  input: "gradients/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sub_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/sub_3_grad/Neg"
  input: "gradients/sub_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sub_3_grad/Sum_1"
  input: "gradients/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sub_3_grad/Reshape"
  input: "^gradients/sub_3_grad/Reshape_1"
}
node {
  name: "gradients/sub_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sub_3_grad/Reshape"
  input: "^gradients/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/sub_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_3_grad/Reshape_1"
  input: "^gradients/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/pow_grad/tuple/control_dependency"
  input: "gradients/sub_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/pow_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Minimum_grad/Shape"
  op: "Shape"
  input: "Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/Minimum_grad/Shape_2"
  input: "gradients/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "Abs"
  input: "Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Minimum_grad/Shape"
  input: "gradients/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Minimum_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/Minimum_grad/LessEqual"
  input: "gradients/AddN"
  input: "gradients/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/Minimum_grad/SelectV2"
  input: "gradients/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/Minimum_grad/Sum"
  input: "gradients/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Minimum_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/Minimum_grad/LessEqual"
  input: "gradients/Minimum_grad/zeros"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/Minimum_grad/SelectV2_1"
  input: "gradients/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Minimum_grad/Sum_1"
  input: "gradients/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Minimum_grad/Reshape"
  input: "^gradients/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Minimum_grad/Reshape"
  input: "^gradients/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Minimum_grad/Reshape_1"
  input: "^gradients/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/sub_3_grad/tuple/control_dependency"
  input: "gradients/Minimum_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Abs_grad/Sign"
  op: "Sign"
  input: "sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Abs_grad/mul"
  op: "Mul"
  input: "gradients/AddN_1"
  input: "gradients/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sub_2_grad/Shape"
  op: "Shape"
  input: "out_H"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_2_grad/Shape_1"
  op: "Shape"
  input: "H_out_true"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sub_2_grad/Shape"
  input: "gradients/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_2_grad/Sum"
  op: "Sum"
  input: "gradients/Abs_grad/mul"
  input: "gradients/sub_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_2_grad/Sum"
  input: "gradients/sub_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_2_grad/Neg"
  op: "Neg"
  input: "gradients/Abs_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sub_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/sub_2_grad/Neg"
  input: "gradients/sub_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sub_2_grad/Sum_1"
  input: "gradients/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sub_2_grad/Reshape"
  input: "^gradients/sub_2_grad/Reshape_1"
}
node {
  name: "gradients/sub_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sub_2_grad/Reshape"
  input: "^gradients/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/sub_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_2_grad/Reshape_1"
  input: "^gradients/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/out_H_grad/Shape"
  op: "Shape"
  input: "out_H/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/out_H_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/out_H_grad/Shape_2"
  op: "Shape"
  input: "gradients/sub_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/out_H_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/out_H_grad/zeros"
  op: "Fill"
  input: "gradients/out_H_grad/Shape_2"
  input: "gradients/out_H_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/out_H_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "out_H/Minimum"
  input: "out_H/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/out_H_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/out_H_grad/Shape"
  input: "gradients/out_H_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/out_H_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/out_H_grad/GreaterEqual"
  input: "gradients/sub_2_grad/tuple/control_dependency"
  input: "gradients/out_H_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/out_H_grad/Sum"
  op: "Sum"
  input: "gradients/out_H_grad/SelectV2"
  input: "gradients/out_H_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/out_H_grad/Reshape"
  op: "Reshape"
  input: "gradients/out_H_grad/Sum"
  input: "gradients/out_H_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/out_H_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/out_H_grad/GreaterEqual"
  input: "gradients/out_H_grad/zeros"
  input: "gradients/sub_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/out_H_grad/Sum_1"
  op: "Sum"
  input: "gradients/out_H_grad/SelectV2_1"
  input: "gradients/out_H_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/out_H_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/out_H_grad/Sum_1"
  input: "gradients/out_H_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/out_H_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/out_H_grad/Reshape"
  input: "^gradients/out_H_grad/Reshape_1"
}
node {
  name: "gradients/out_H_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/out_H_grad/Reshape"
  input: "^gradients/out_H_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/out_H_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/out_H_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/out_H_grad/Reshape_1"
  input: "^gradients/out_H_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/out_H_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/Shape"
  op: "Shape"
  input: "add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/out_H_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/out_H/Minimum_grad/Shape_2"
  input: "gradients/out_H/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "add_18"
  input: "out_H/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/out_H/Minimum_grad/Shape"
  input: "gradients/out_H/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/out_H/Minimum_grad/LessEqual"
  input: "gradients/out_H_grad/tuple/control_dependency"
  input: "gradients/out_H/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/out_H/Minimum_grad/SelectV2"
  input: "gradients/out_H/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/out_H/Minimum_grad/Sum"
  input: "gradients/out_H/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/out_H/Minimum_grad/LessEqual"
  input: "gradients/out_H/Minimum_grad/zeros"
  input: "gradients/out_H_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/out_H/Minimum_grad/SelectV2_1"
  input: "gradients/out_H/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/out_H/Minimum_grad/Sum_1"
  input: "gradients/out_H/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/out_H/Minimum_grad/Reshape"
  input: "^gradients/out_H/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/out_H/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/out_H/Minimum_grad/Reshape"
  input: "^gradients/out_H/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/out_H/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/out_H/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/out_H/Minimum_grad/Reshape_1"
  input: "^gradients/out_H/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/out_H/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/add_18_grad/Shape"
  op: "Shape"
  input: "ExpandDims_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_18_grad/Shape_1"
  op: "Shape"
  input: "Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_18_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_18_grad/Shape"
  input: "gradients/add_18_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_18_grad/Sum"
  op: "Sum"
  input: "gradients/out_H/Minimum_grad/tuple/control_dependency"
  input: "gradients/add_18_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_18_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_18_grad/Sum"
  input: "gradients/add_18_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_18_grad/Sum_1"
  op: "Sum"
  input: "gradients/out_H/Minimum_grad/tuple/control_dependency"
  input: "gradients/add_18_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_18_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_18_grad/Sum_1"
  input: "gradients/add_18_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_18_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_18_grad/Reshape"
  input: "^gradients/add_18_grad/Reshape_1"
}
node {
  name: "gradients/add_18_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_18_grad/Reshape"
  input: "^gradients/add_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_18_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_18_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_18_grad/Reshape_1"
  input: "^gradients/add_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_18_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/ExpandDims_3_grad/Shape"
  op: "Shape"
  input: "concat_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ExpandDims_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_18_grad/tuple/control_dependency"
  input: "gradients/ExpandDims_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_2_grad/Shape"
  op: "Shape"
  input: "DepthToSpace_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_18_grad/tuple/control_dependency_1"
  input: "gradients/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_8_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/concat_8_grad/mod"
  op: "FloorMod"
  input: "concat_8/axis"
  input: "gradients/concat_8_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_8_grad/Shape"
  op: "Shape"
  input: "DepthToSpace"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_8_grad/ShapeN"
  op: "ShapeN"
  input: "DepthToSpace"
  input: "DepthToSpace_1"
  input: "DepthToSpace_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_8_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_8_grad/mod"
  input: "gradients/concat_8_grad/ShapeN"
  input: "gradients/concat_8_grad/ShapeN:1"
  input: "gradients/concat_8_grad/ShapeN:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
}
node {
  name: "gradients/concat_8_grad/Slice"
  op: "Slice"
  input: "gradients/ExpandDims_3_grad/Reshape"
  input: "gradients/concat_8_grad/ConcatOffset"
  input: "gradients/concat_8_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_8_grad/Slice_1"
  op: "Slice"
  input: "gradients/ExpandDims_3_grad/Reshape"
  input: "gradients/concat_8_grad/ConcatOffset:1"
  input: "gradients/concat_8_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_8_grad/Slice_2"
  op: "Slice"
  input: "gradients/ExpandDims_3_grad/Reshape"
  input: "gradients/concat_8_grad/ConcatOffset:2"
  input: "gradients/concat_8_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_8_grad/Slice"
  input: "^gradients/concat_8_grad/Slice_1"
  input: "^gradients/concat_8_grad/Slice_2"
}
node {
  name: "gradients/concat_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_8_grad/Slice"
  input: "^gradients/concat_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_8_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/concat_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_8_grad/Slice_1"
  input: "^gradients/concat_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_8_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/concat_8_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/concat_8_grad/Slice_2"
  input: "^gradients/concat_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_8_grad/Slice_2"
      }
    }
  }
}
node {
  name: "gradients/DepthToSpace_3_grad/SpaceToDepth"
  op: "SpaceToDepth"
  input: "gradients/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "block_size"
    value {
      i: 4
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/DepthToSpace_grad/SpaceToDepth"
  op: "SpaceToDepth"
  input: "gradients/concat_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "block_size"
    value {
      i: 4
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/DepthToSpace_1_grad/SpaceToDepth"
  op: "SpaceToDepth"
  input: "gradients/concat_8_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "block_size"
    value {
      i: 4
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/DepthToSpace_2_grad/SpaceToDepth"
  op: "SpaceToDepth"
  input: "gradients/concat_8_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "block_size"
    value {
      i: 4
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Shape"
  op: "Shape"
  input: "add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/DepthToSpace_3_grad/SpaceToDepth"
  input: "gradients/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Shape"
  op: "Shape"
  input: "MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/DepthToSpace_grad/SpaceToDepth"
  input: "gradients/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_1_grad/Shape"
  op: "Shape"
  input: "MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/DepthToSpace_1_grad/SpaceToDepth"
  input: "gradients/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_2_grad/Shape"
  op: "Shape"
  input: "MatMul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/DepthToSpace_2_grad/SpaceToDepth"
  input: "gradients/Squeeze_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_15_grad/Shape"
  op: "Shape"
  input: "Conv3D_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_15_grad/Shape_1"
  op: "Shape"
  input: "rconv2/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_15_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_15_grad/Shape"
  input: "gradients/add_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_15_grad/Sum"
  op: "Sum"
  input: "gradients/Reshape_1_grad/Reshape"
  input: "gradients/add_15_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_15_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_15_grad/Sum"
  input: "gradients/add_15_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_15_grad/Sum_1"
  op: "Sum"
  input: "gradients/Reshape_1_grad/Reshape"
  input: "gradients/add_15_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_15_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_15_grad/Sum_1"
  input: "gradients/add_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_15_grad/Reshape"
  input: "^gradients/add_15_grad/Reshape_1"
}
node {
  name: "gradients/add_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_15_grad/Reshape"
  input: "^gradients/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_15_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_15_grad/Reshape_1"
  input: "^gradients/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_15_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/Squeeze_grad/Reshape"
  input: "strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "ExpandDims"
  input: "gradients/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_grad/Shape"
  op: "Shape"
  input: "ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_grad/Shape_1"
  op: "Shape"
  input: "strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/MatMul_grad/Shape"
  input: "gradients/MatMul_grad/strided_slice/stack"
  input: "gradients/MatMul_grad/strided_slice/stack_1"
  input: "gradients/MatMul_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/MatMul_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/MatMul_grad/Shape_1"
  input: "gradients/MatMul_grad/strided_slice_1/stack"
  input: "gradients/MatMul_grad/strided_slice_1/stack_1"
  input: "gradients/MatMul_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/MatMul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/MatMul_grad/strided_slice"
  input: "gradients/MatMul_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_grad/Sum"
  op: "Sum"
  input: "gradients/MatMul_grad/MatMul"
  input: "gradients/MatMul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_grad/Reshape"
  op: "Reshape"
  input: "gradients/MatMul_grad/Sum"
  input: "gradients/MatMul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_grad/Sum_1"
  op: "Sum"
  input: "gradients/MatMul_grad/MatMul_1"
  input: "gradients/MatMul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/MatMul_grad/Sum_1"
  input: "gradients/MatMul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_grad/Reshape"
  input: "^gradients/MatMul_grad/Reshape_1"
}
node {
  name: "gradients/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_grad/Reshape"
  input: "^gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_grad/Reshape_1"
  input: "^gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/Squeeze_1_grad/Reshape"
  input: "strided_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "ExpandDims_1"
  input: "gradients/Squeeze_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/Shape"
  op: "Shape"
  input: "ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/Shape_1"
  op: "Shape"
  input: "strided_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/MatMul_1_grad/Shape"
  input: "gradients/MatMul_1_grad/strided_slice/stack"
  input: "gradients/MatMul_1_grad/strided_slice/stack_1"
  input: "gradients/MatMul_1_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/MatMul_1_grad/Shape_1"
  input: "gradients/MatMul_1_grad/strided_slice_1/stack"
  input: "gradients/MatMul_1_grad/strided_slice_1/stack_1"
  input: "gradients/MatMul_1_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/MatMul_1_grad/strided_slice"
  input: "gradients/MatMul_1_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/Sum"
  op: "Sum"
  input: "gradients/MatMul_1_grad/MatMul"
  input: "gradients/MatMul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/MatMul_1_grad/Sum"
  input: "gradients/MatMul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/MatMul_1_grad/MatMul_1"
  input: "gradients/MatMul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/MatMul_1_grad/Sum_1"
  input: "gradients/MatMul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_1_grad/Reshape"
  input: "^gradients/MatMul_1_grad/Reshape_1"
}
node {
  name: "gradients/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_1_grad/Reshape"
  input: "^gradients/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_1_grad/Reshape_1"
  input: "^gradients/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/MatMul"
  op: "BatchMatMulV2"
  input: "gradients/Squeeze_2_grad/Reshape"
  input: "strided_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/MatMul_1"
  op: "BatchMatMulV2"
  input: "ExpandDims_2"
  input: "gradients/Squeeze_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/Shape"
  op: "Shape"
  input: "ExpandDims_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/Shape_1"
  op: "Shape"
  input: "strided_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/MatMul_2_grad/Shape"
  input: "gradients/MatMul_2_grad/strided_slice/stack"
  input: "gradients/MatMul_2_grad/strided_slice/stack_1"
  input: "gradients/MatMul_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/MatMul_2_grad/Shape_1"
  input: "gradients/MatMul_2_grad/strided_slice_1/stack"
  input: "gradients/MatMul_2_grad/strided_slice_1/stack_1"
  input: "gradients/MatMul_2_grad/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/MatMul_2_grad/strided_slice"
  input: "gradients/MatMul_2_grad/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/Sum"
  op: "Sum"
  input: "gradients/MatMul_2_grad/MatMul"
  input: "gradients/MatMul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/MatMul_2_grad/Sum"
  input: "gradients/MatMul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/MatMul_2_grad/MatMul_1"
  input: "gradients/MatMul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/MatMul_2_grad/Sum_1"
  input: "gradients/MatMul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_2_grad/Reshape"
  input: "^gradients/MatMul_2_grad/Reshape_1"
}
node {
  name: "gradients/MatMul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_2_grad/Reshape"
  input: "^gradients/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_2_grad/Reshape_1"
  input: "^gradients/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_15_grad/Shape"
  op: "Shape"
  input: "Relu_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_15_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_15_grad/Shape"
  input: "rconv2/W/read"
  input: "gradients/add_15_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_15_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_15_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Relu_14"
  input: "gradients/Conv3D_15_grad/Shape_1"
  input: "gradients/add_15_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_15_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_15_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_15_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_15_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_15_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_15_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_8_grad/Shape"
  op: "Shape"
  input: "transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_8_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_8_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_8_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_8_grad/Shape"
  input: "gradients/strided_slice_8_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_8_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_8_grad/StridedSliceGrad/strides"
  input: "gradients/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 61
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 61
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/strided_slice_10_grad/Shape"
  op: "Shape"
  input: "transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_10_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_10_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_10_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_10_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_10_grad/Shape"
  input: "gradients/strided_slice_10_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_10_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_10_grad/StridedSliceGrad/strides"
  input: "gradients/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 61
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 61
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/strided_slice_12_grad/Shape"
  op: "Shape"
  input: "transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_12_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_12_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_12_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_12_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_12_grad/Shape"
  input: "gradients/strided_slice_12_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_12_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_12_grad/StridedSliceGrad/strides"
  input: "gradients/MatMul_2_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 61
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 61
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/Relu_14_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv3D_15_grad/tuple/control_dependency"
  input: "Relu_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/strided_slice_10_grad/StridedSliceGrad"
  input: "gradients/strided_slice_12_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/strided_slice_8_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "concat_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/AddN_2"
  input: "gradients/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_14_grad/Shape"
  op: "Shape"
  input: "Conv3D_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_14_grad/Shape_1"
  op: "Shape"
  input: "rconv1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_14_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_14_grad/Shape"
  input: "gradients/add_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_14_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_14_grad/ReluGrad"
  input: "gradients/add_14_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_14_grad/Sum"
  input: "gradients/add_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_14_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_14_grad/ReluGrad"
  input: "gradients/add_14_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_14_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_14_grad/Sum_1"
  input: "gradients/add_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_14_grad/Reshape"
  input: "^gradients/add_14_grad/Reshape_1"
}
node {
  name: "gradients/add_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_14_grad/Reshape"
  input: "^gradients/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_14_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_14_grad/Reshape_1"
  input: "^gradients/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_14_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Softmax_grad/mul"
  op: "Mul"
  input: "gradients/transpose_1_grad/transpose"
  input: "Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients/Softmax_grad/mul"
  input: "gradients/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Softmax_grad/sub"
  op: "Sub"
  input: "gradients/transpose_1_grad/transpose"
  input: "gradients/Softmax_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients/Softmax_grad/sub"
  input: "Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Conv3D_14_grad/Shape"
  op: "Shape"
  input: "Relu_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_14_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_14_grad/Shape"
  input: "rconv1/W/read"
  input: "gradients/add_14_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_14_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_14_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Relu_13"
  input: "gradients/Conv3D_14_grad/Shape_1"
  input: "gradients/add_14_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_14_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_14_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_14_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_14_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_14_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_14_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "concat_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/Softmax_grad/mul_1"
  input: "gradients/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_grad/Shape"
  op: "Shape"
  input: "add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/transpose_grad/transpose"
  input: "gradients/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_17_grad/Shape"
  op: "Shape"
  input: "Conv3D_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_17_grad/Shape_1"
  op: "Shape"
  input: "fconv2/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_17_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_17_grad/Shape"
  input: "gradients/add_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_17_grad/Sum"
  op: "Sum"
  input: "gradients/Reshape_grad/Reshape"
  input: "gradients/add_17_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_17_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_17_grad/Sum"
  input: "gradients/add_17_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_17_grad/Sum_1"
  op: "Sum"
  input: "gradients/Reshape_grad/Reshape"
  input: "gradients/add_17_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_17_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_17_grad/Sum_1"
  input: "gradients/add_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_17_grad/Reshape"
  input: "^gradients/add_17_grad/Reshape_1"
}
node {
  name: "gradients/add_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_17_grad/Reshape"
  input: "^gradients/add_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_17_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_17_grad/Reshape_1"
  input: "^gradients/add_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_17_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_17_grad/Shape"
  op: "Shape"
  input: "Relu_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_17_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_17_grad/Shape"
  input: "fconv2/W/read"
  input: "gradients/add_17_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_17_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000\220\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_17_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Relu_15"
  input: "gradients/Conv3D_17_grad/Shape_1"
  input: "gradients/add_17_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_17_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_17_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_17_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_17_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_17_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_17_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Relu_15_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv3D_17_grad/tuple/control_dependency"
  input: "Relu_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/add_16_grad/Shape"
  op: "Shape"
  input: "Conv3D_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_16_grad/Shape_1"
  op: "Shape"
  input: "fconv1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_16_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_16_grad/Shape"
  input: "gradients/add_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_16_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_15_grad/ReluGrad"
  input: "gradients/add_16_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_16_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_16_grad/Sum"
  input: "gradients/add_16_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_16_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_15_grad/ReluGrad"
  input: "gradients/add_16_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_16_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_16_grad/Sum_1"
  input: "gradients/add_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_16_grad/Reshape"
  input: "^gradients/add_16_grad/Reshape_1"
}
node {
  name: "gradients/add_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_16_grad/Reshape"
  input: "^gradients/add_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_16_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_16_grad/Reshape_1"
  input: "^gradients/add_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_16_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_16_grad/Shape"
  op: "Shape"
  input: "Relu_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_16_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_16_grad/Shape"
  input: "fconv1/W/read"
  input: "gradients/add_16_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_16_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_16_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Relu_13"
  input: "gradients/Conv3D_16_grad/Shape_1"
  input: "gradients/add_16_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_16_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_16_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_16_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_16_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_16_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_16_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/Conv3D_14_grad/tuple/control_dependency"
  input: "gradients/Conv3D_16_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_14_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Relu_13_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_3"
  input: "Relu_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/add_13_grad/Shape"
  op: "Shape"
  input: "Conv3D_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_13_grad/Shape_1"
  op: "Shape"
  input: "conv2/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_13_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_13_grad/Shape"
  input: "gradients/add_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_13_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_13_grad/ReluGrad"
  input: "gradients/add_13_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_13_grad/Sum"
  input: "gradients/add_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_13_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_13_grad/ReluGrad"
  input: "gradients/add_13_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_13_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_13_grad/Sum_1"
  input: "gradients/add_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_13_grad/Reshape"
  input: "^gradients/add_13_grad/Reshape_1"
}
node {
  name: "gradients/add_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_13_grad/Reshape"
  input: "^gradients/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_13_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_13_grad/Reshape_1"
  input: "^gradients/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_13_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_13_grad/Shape"
  op: "Shape"
  input: "Pad_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_13_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_13_grad/Shape"
  input: "conv2/W/read"
  input: "gradients/add_13_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_13_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_13_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Pad_7"
  input: "gradients/Conv3D_13_grad/Shape_1"
  input: "gradients/add_13_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_13_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_13_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_13_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_13_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_13_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_13_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Pad_7_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/Pad_7_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Pad_7_grad/stack"
  op: "Pack"
  input: "gradients/Pad_7_grad/Rank"
  input: "gradients/Pad_7_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Pad_7_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Pad_7_grad/Slice"
  op: "Slice"
  input: "Pad_7/paddings"
  input: "gradients/Pad_7_grad/Slice/begin"
  input: "gradients/Pad_7_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_7_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Pad_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/Pad_7_grad/Slice"
  input: "gradients/Pad_7_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_7_grad/Shape"
  op: "Shape"
  input: "Relu_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_7_grad/Slice_1"
  op: "Slice"
  input: "gradients/Conv3D_13_grad/tuple/control_dependency"
  input: "gradients/Pad_7_grad/Reshape"
  input: "gradients/Pad_7_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Relu_12_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Pad_7_grad/Slice_1"
  input: "Relu_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_1_grad/Shape"
  op: "Shape"
  input: "batchnorm_12/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_12/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_12/add_1_grad/Shape"
  input: "gradients/batchnorm_12/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_12_grad/ReluGrad"
  input: "gradients/batchnorm_12/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_12/add_1_grad/Sum"
  input: "gradients/batchnorm_12/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_12_grad/ReluGrad"
  input: "gradients/batchnorm_12/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_12/add_1_grad/Sum_1"
  input: "gradients/batchnorm_12/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_12/add_1_grad/Reshape"
  input: "^gradients/batchnorm_12/add_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_12/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_12/add_1_grad/Reshape"
  input: "^gradients/batchnorm_12/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_12/add_1_grad/Reshape_1"
  input: "^gradients/batchnorm_12/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_1_grad/Shape"
  op: "Shape"
  input: "concat_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_12/mul_1_grad/Shape"
  input: "gradients/batchnorm_12/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_12/add_1_grad/tuple/control_dependency"
  input: "batchnorm_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_12/mul_1_grad/Mul"
  input: "gradients/batchnorm_12/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_12/mul_1_grad/Sum"
  input: "gradients/batchnorm_12/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_1_grad/Mul_1"
  op: "Mul"
  input: "concat_5"
  input: "gradients/batchnorm_12/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/batchnorm_12/mul_1_grad/Mul_1"
  input: "gradients/batchnorm_12/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_12/mul_1_grad/Sum_1"
  input: "gradients/batchnorm_12/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_12/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_12/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_12/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_12/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_12/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_12/mul_1_grad/Reshape_1"
  input: "^gradients/batchnorm_12/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/sub_grad/Neg"
  op: "Neg"
  input: "gradients/batchnorm_12/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_12/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_12/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_12/sub_grad/Neg"
}
node {
  name: "gradients/batchnorm_12/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_12/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_12/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_12/sub_grad/Neg"
  input: "^gradients/batchnorm_12/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_12/sub_grad/tuple/control_dependency_1"
  input: "batchnorm_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/batchnorm_12/sub_grad/tuple/control_dependency_1"
  input: "fbn1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_12/mul_2_grad/Mul"
  input: "^gradients/batchnorm_12/mul_2_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_12/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_12/mul_2_grad/Mul"
  input: "^gradients/batchnorm_12/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_12/mul_2_grad/Mul_1"
  input: "^gradients/batchnorm_12/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_12/mul_2_grad/tuple/control_dependency"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fbn1/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/fbn1/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fbn1/cond/Merge_grad/cond_grad"
  input: "^gradients/fbn1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fbn1/cond/Merge_grad/cond_grad:1"
  input: "^gradients/fbn1/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/batchnorm_12/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/batchnorm_12/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_4"
  input: "fbn1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_4"
  input: "batchnorm_12/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_12/mul_grad/Mul"
  input: "^gradients/batchnorm_12/mul_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_12/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_12/mul_grad/Mul"
  input: "^gradients/batchnorm_12/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_12/mul_grad/Mul_1"
  input: "^gradients/batchnorm_12/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batchnorm_12/Rsqrt"
  input: "gradients/batchnorm_12/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/fbn1/cond/Merge_grad/tuple/control_dependency_1"
  input: "gradients/fbn1/cond/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_12/add_grad/BroadcastGradientArgs/s0"
  input: "gradients/batchnorm_12/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_12/Rsqrt_grad/RsqrtGrad"
  input: "gradients/batchnorm_12/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_12/add_grad/Sum"
  input: "gradients/batchnorm_12/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_12/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_12/add_grad/Reshape"
}
node {
  name: "gradients/batchnorm_12/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_12/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_12/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_12/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_12/add_grad/Reshape"
  input: "^gradients/batchnorm_12/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_12/add_grad/tuple/control_dependency"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fbn1/cond/Merge_1_grad/cond_grad"
}
node {
  name: "gradients/fbn1/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fbn1/cond/Merge_1_grad/cond_grad"
  input: "^gradients/fbn1/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fbn1/cond/Merge_1_grad/cond_grad:1"
  input: "^gradients/fbn1/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/fbn1/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/fbn1/cond/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/variance_grad/Shape"
  op: "Shape"
  input: "fbn1/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/variance_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/fbn1/cond/moments/Squeeze_1_grad/Reshape"
  input: "gradients/fbn1/cond/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/variance_grad/Shape_1"
  op: "Shape"
  input: "fbn1/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/variance_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/fbn1/cond/moments/variance_grad/Shape_1"
  input: "gradients/fbn1/cond/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/fbn1/cond/moments/variance_grad/Shape_2"
  input: "gradients/fbn1/cond/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/fbn1/cond/moments/variance_grad/Prod_1"
  input: "gradients/fbn1/cond/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fbn1/cond/moments/variance_grad/Prod"
  input: "gradients/fbn1/cond/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/fbn1/cond/moments/variance_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/fbn1/cond/moments/variance_grad/BroadcastTo"
  input: "gradients/fbn1/cond/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/fbn1/cond/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/scalar"
  input: "gradients/fbn1/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fbn1/cond/moments/mean/Switch:1"
  input: "fbn1/cond/moments/StopGradient"
  input: "^gradients/fbn1/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/Mul"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "fbn1/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "fbn1/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/Shape"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/Sum"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fbn1/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fbn1/cond/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/fbn1/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fbn1/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/fbn1/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fbn1/cond/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean_grad/Shape"
  op: "Shape"
  input: "fbn1/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/fbn1/cond/moments/Squeeze_grad/Reshape"
  input: "gradients/fbn1/cond/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean_grad/Shape_1"
  op: "Shape"
  input: "fbn1/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/fbn1/cond/moments/mean_grad/Shape_1"
  input: "gradients/fbn1/cond/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/fbn1/cond/moments/mean_grad/Shape_2"
  input: "gradients/fbn1/cond/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/fbn1/cond/moments/mean_grad/Prod_1"
  input: "gradients/fbn1/cond/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/fbn1/cond/moments/mean_grad/Prod"
  input: "gradients/fbn1/cond/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/fbn1/cond/moments/mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/fbn1/cond/moments/mean_grad/BroadcastTo"
  input: "gradients/fbn1/cond/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/fbn1/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/fbn1/cond/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fbn1/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "concat_5"
  input: "fbn1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity"
  op: "Identity"
  input: "gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_1"
  op: "Shape"
  input: "gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros/Const"
  op: "Const"
  input: "^gradients/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros"
  op: "Fill"
  input: "gradients/Shape_1"
  input: "gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/fbn1/cond/moments/mean/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros"
  input: "gradients/AddN_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/batchnorm_12/mul_1_grad/tuple/control_dependency"
  input: "gradients/fbn1/cond/moments/mean/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_12/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/concat_5_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/concat_5_grad/mod"
  op: "FloorMod"
  input: "concat_5/axis"
  input: "gradients/concat_5_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_5_grad/Shape"
  op: "Shape"
  input: "strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_5_grad/ShapeN"
  op: "ShapeN"
  input: "strided_slice_2"
  input: "add_12"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_5_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_5_grad/mod"
  input: "gradients/concat_5_grad/ShapeN"
  input: "gradients/concat_5_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_5_grad/Slice"
  op: "Slice"
  input: "gradients/AddN_6"
  input: "gradients/concat_5_grad/ConcatOffset"
  input: "gradients/concat_5_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_5_grad/Slice_1"
  op: "Slice"
  input: "gradients/AddN_6"
  input: "gradients/concat_5_grad/ConcatOffset:1"
  input: "gradients/concat_5_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_5_grad/Slice"
  input: "^gradients/concat_5_grad/Slice_1"
}
node {
  name: "gradients/concat_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_5_grad/Slice"
  input: "^gradients/concat_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_5_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/concat_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_5_grad/Slice_1"
  input: "^gradients/concat_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_5_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_2_grad/Shape"
  op: "Shape"
  input: "concat_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_2_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_2_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_2_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_2_grad/Shape"
  input: "gradients/strided_slice_2_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_2_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_2_grad/StridedSliceGrad/strides"
  input: "gradients/concat_5_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/add_12_grad/Shape"
  op: "Shape"
  input: "Conv3D_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_12_grad/Shape_1"
  op: "Shape"
  input: "Rconv6b/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_12_grad/Shape"
  input: "gradients/add_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_12_grad/Sum"
  op: "Sum"
  input: "gradients/concat_5_grad/tuple/control_dependency_1"
  input: "gradients/add_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_12_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_12_grad/Sum"
  input: "gradients/add_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_12_grad/Sum_1"
  op: "Sum"
  input: "gradients/concat_5_grad/tuple/control_dependency_1"
  input: "gradients/add_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_12_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_12_grad/Sum_1"
  input: "gradients/add_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_12_grad/Reshape"
  input: "^gradients/add_12_grad/Reshape_1"
}
node {
  name: "gradients/add_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_12_grad/Reshape"
  input: "^gradients/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_12_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_12_grad/Reshape_1"
  input: "^gradients/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_12_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_12_grad/Shape"
  op: "Shape"
  input: "Pad_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_12_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_12_grad/Shape"
  input: "Rconv6b/W/read"
  input: "gradients/add_12_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_12_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\340\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_12_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Pad_6"
  input: "gradients/Conv3D_12_grad/Shape_1"
  input: "gradients/add_12_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_12_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_12_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_12_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_12_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_12_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_12_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Pad_6_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/Pad_6_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Pad_6_grad/stack"
  op: "Pack"
  input: "gradients/Pad_6_grad/Rank"
  input: "gradients/Pad_6_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Pad_6_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Pad_6_grad/Slice"
  op: "Slice"
  input: "Pad_6/paddings"
  input: "gradients/Pad_6_grad/Slice/begin"
  input: "gradients/Pad_6_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_6_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Pad_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/Pad_6_grad/Slice"
  input: "gradients/Pad_6_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_6_grad/Shape"
  op: "Shape"
  input: "Relu_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_6_grad/Slice_1"
  op: "Slice"
  input: "gradients/Conv3D_12_grad/tuple/control_dependency"
  input: "gradients/Pad_6_grad/Reshape"
  input: "gradients/Pad_6_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Relu_11_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Pad_6_grad/Slice_1"
  input: "Relu_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_1_grad/Shape"
  op: "Shape"
  input: "batchnorm_11/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_11/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_11/add_1_grad/Shape"
  input: "gradients/batchnorm_11/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_11_grad/ReluGrad"
  input: "gradients/batchnorm_11/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_11/add_1_grad/Sum"
  input: "gradients/batchnorm_11/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_11_grad/ReluGrad"
  input: "gradients/batchnorm_11/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_11/add_1_grad/Sum_1"
  input: "gradients/batchnorm_11/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_11/add_1_grad/Reshape"
  input: "^gradients/batchnorm_11/add_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_11/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_11/add_1_grad/Reshape"
  input: "^gradients/batchnorm_11/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_11/add_1_grad/Reshape_1"
  input: "^gradients/batchnorm_11/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_1_grad/Shape"
  op: "Shape"
  input: "add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_11/mul_1_grad/Shape"
  input: "gradients/batchnorm_11/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_11/add_1_grad/tuple/control_dependency"
  input: "batchnorm_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_11/mul_1_grad/Mul"
  input: "gradients/batchnorm_11/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_11/mul_1_grad/Sum"
  input: "gradients/batchnorm_11/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_1_grad/Mul_1"
  op: "Mul"
  input: "add_11"
  input: "gradients/batchnorm_11/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/batchnorm_11/mul_1_grad/Mul_1"
  input: "gradients/batchnorm_11/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_11/mul_1_grad/Sum_1"
  input: "gradients/batchnorm_11/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_11/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_11/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_11/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_11/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_11/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_11/mul_1_grad/Reshape_1"
  input: "^gradients/batchnorm_11/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/sub_grad/Neg"
  op: "Neg"
  input: "gradients/batchnorm_11/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_11/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_11/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_11/sub_grad/Neg"
}
node {
  name: "gradients/batchnorm_11/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_11/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_11/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_11/sub_grad/Neg"
  input: "^gradients/batchnorm_11/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_11/sub_grad/tuple/control_dependency_1"
  input: "batchnorm_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/batchnorm_11/sub_grad/tuple/control_dependency_1"
  input: "Rbn6b/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_11/mul_2_grad/Mul"
  input: "^gradients/batchnorm_11/mul_2_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_11/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_11/mul_2_grad/Mul"
  input: "^gradients/batchnorm_11/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_11/mul_2_grad/Mul_1"
  input: "^gradients/batchnorm_11/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_11/mul_2_grad/tuple/control_dependency"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn6b/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/Rbn6b/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn6b/cond/Merge_grad/cond_grad"
  input: "^gradients/Rbn6b/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn6b/cond/Merge_grad/cond_grad:1"
  input: "^gradients/Rbn6b/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/batchnorm_11/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/batchnorm_11/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_7"
  input: "Rbn6b/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_7"
  input: "batchnorm_11/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_11/mul_grad/Mul"
  input: "^gradients/batchnorm_11/mul_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_11/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_11/mul_grad/Mul"
  input: "^gradients/batchnorm_11/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_11/mul_grad/Mul_1"
  input: "^gradients/batchnorm_11/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batchnorm_11/Rsqrt"
  input: "gradients/batchnorm_11/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\340\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn6b/cond/Merge_grad/tuple/control_dependency_1"
  input: "gradients/Rbn6b/cond/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 224
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_11/add_grad/BroadcastGradientArgs/s0"
  input: "gradients/batchnorm_11/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_11/Rsqrt_grad/RsqrtGrad"
  input: "gradients/batchnorm_11/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_11/add_grad/Sum"
  input: "gradients/batchnorm_11/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_11/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_11/add_grad/Reshape"
}
node {
  name: "gradients/batchnorm_11/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_11/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_11/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_11/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_11/add_grad/Reshape"
  input: "^gradients/batchnorm_11/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_11/add_grad/tuple/control_dependency"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn6b/cond/Merge_1_grad/cond_grad"
}
node {
  name: "gradients/Rbn6b/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn6b/cond/Merge_1_grad/cond_grad"
  input: "^gradients/Rbn6b/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn6b/cond/Merge_1_grad/cond_grad:1"
  input: "^gradients/Rbn6b/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\340\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn6b/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/Rbn6b/cond/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/variance_grad/Shape"
  op: "Shape"
  input: "Rbn6b/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/variance_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn6b/cond/moments/Squeeze_1_grad/Reshape"
  input: "gradients/Rbn6b/cond/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/variance_grad/Shape_1"
  op: "Shape"
  input: "Rbn6b/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/variance_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\340\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn6b/cond/moments/variance_grad/Shape_1"
  input: "gradients/Rbn6b/cond/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn6b/cond/moments/variance_grad/Shape_2"
  input: "gradients/Rbn6b/cond/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn6b/cond/moments/variance_grad/Prod_1"
  input: "gradients/Rbn6b/cond/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn6b/cond/moments/variance_grad/Prod"
  input: "gradients/Rbn6b/cond/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn6b/cond/moments/variance_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn6b/cond/moments/variance_grad/BroadcastTo"
  input: "gradients/Rbn6b/cond/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Rbn6b/cond/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/scalar"
  input: "gradients/Rbn6b/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Rbn6b/cond/moments/mean/Switch:1"
  input: "Rbn6b/cond/moments/StopGradient"
  input: "^gradients/Rbn6b/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Mul"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Rbn6b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "Rbn6b/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Shape"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Sum"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn6b/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn6b/cond/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/Rbn6b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn6b/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn6b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn6b/cond/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean_grad/Shape"
  op: "Shape"
  input: "Rbn6b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn6b/cond/moments/Squeeze_grad/Reshape"
  input: "gradients/Rbn6b/cond/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean_grad/Shape_1"
  op: "Shape"
  input: "Rbn6b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\340\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn6b/cond/moments/mean_grad/Shape_1"
  input: "gradients/Rbn6b/cond/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn6b/cond/moments/mean_grad/Shape_2"
  input: "gradients/Rbn6b/cond/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn6b/cond/moments/mean_grad/Prod_1"
  input: "gradients/Rbn6b/cond/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn6b/cond/moments/mean_grad/Prod"
  input: "gradients/Rbn6b/cond/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn6b/cond/moments/mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn6b/cond/moments/mean_grad/BroadcastTo"
  input: "gradients/Rbn6b/cond/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/Rbn6b/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/Rbn6b/cond/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn6b/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "add_11"
  input: "Rbn6b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_1"
  op: "Identity"
  input: "gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_2"
  op: "Shape"
  input: "gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_1/Const"
  op: "Const"
  input: "^gradients/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_1"
  op: "Fill"
  input: "gradients/Shape_2"
  input: "gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6b/cond/moments/mean/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_1"
  input: "gradients/AddN_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/batchnorm_11/mul_1_grad/tuple/control_dependency"
  input: "gradients/Rbn6b/cond/moments/mean/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_11/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_11_grad/Shape"
  op: "Shape"
  input: "Conv3D_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_11_grad/Shape_1"
  op: "Shape"
  input: "Rconv6a/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_11_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_11_grad/Shape"
  input: "gradients/add_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_11_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_9"
  input: "gradients/add_11_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_11_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_11_grad/Sum"
  input: "gradients/add_11_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_11_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_9"
  input: "gradients/add_11_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_11_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_11_grad/Sum_1"
  input: "gradients/add_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_11_grad/Reshape"
  input: "^gradients/add_11_grad/Reshape_1"
}
node {
  name: "gradients/add_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_11_grad/Reshape"
  input: "^gradients/add_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_11_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_11_grad/Reshape_1"
  input: "^gradients/add_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_11_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_11_grad/Shape"
  op: "Shape"
  input: "Relu_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_11_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_11_grad/Shape"
  input: "Rconv6a/W/read"
  input: "gradients/add_11_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_11_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\340\000\000\000\340\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_11_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Relu_10"
  input: "gradients/Conv3D_11_grad/Shape_1"
  input: "gradients/add_11_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_11_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_11_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_11_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_11_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_11_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_11_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Relu_10_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv3D_11_grad/tuple/control_dependency"
  input: "Relu_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_1_grad/Shape"
  op: "Shape"
  input: "batchnorm_10/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_10/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_10/add_1_grad/Shape"
  input: "gradients/batchnorm_10/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_10_grad/ReluGrad"
  input: "gradients/batchnorm_10/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_10/add_1_grad/Sum"
  input: "gradients/batchnorm_10/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_10_grad/ReluGrad"
  input: "gradients/batchnorm_10/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_10/add_1_grad/Sum_1"
  input: "gradients/batchnorm_10/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_10/add_1_grad/Reshape"
  input: "^gradients/batchnorm_10/add_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_10/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_10/add_1_grad/Reshape"
  input: "^gradients/batchnorm_10/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_10/add_1_grad/Reshape_1"
  input: "^gradients/batchnorm_10/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_1_grad/Shape"
  op: "Shape"
  input: "concat_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_10/mul_1_grad/Shape"
  input: "gradients/batchnorm_10/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_10/add_1_grad/tuple/control_dependency"
  input: "batchnorm_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_10/mul_1_grad/Mul"
  input: "gradients/batchnorm_10/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_10/mul_1_grad/Sum"
  input: "gradients/batchnorm_10/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_1_grad/Mul_1"
  op: "Mul"
  input: "concat_4"
  input: "gradients/batchnorm_10/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/batchnorm_10/mul_1_grad/Mul_1"
  input: "gradients/batchnorm_10/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_10/mul_1_grad/Sum_1"
  input: "gradients/batchnorm_10/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_10/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_10/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_10/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_10/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_10/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_10/mul_1_grad/Reshape_1"
  input: "^gradients/batchnorm_10/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_10/sub_grad/Neg"
  op: "Neg"
  input: "gradients/batchnorm_10/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_10/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_10/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_10/sub_grad/Neg"
}
node {
  name: "gradients/batchnorm_10/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_10/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_10/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_10/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_10/sub_grad/Neg"
  input: "^gradients/batchnorm_10/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_10/sub_grad/tuple/control_dependency_1"
  input: "batchnorm_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/batchnorm_10/sub_grad/tuple/control_dependency_1"
  input: "Rbn6a/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_10/mul_2_grad/Mul"
  input: "^gradients/batchnorm_10/mul_2_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_10/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_10/mul_2_grad/Mul"
  input: "^gradients/batchnorm_10/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_10/mul_2_grad/Mul_1"
  input: "^gradients/batchnorm_10/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_10/mul_2_grad/tuple/control_dependency"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn6a/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/Rbn6a/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn6a/cond/Merge_grad/cond_grad"
  input: "^gradients/Rbn6a/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn6a/cond/Merge_grad/cond_grad:1"
  input: "^gradients/Rbn6a/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/batchnorm_10/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/batchnorm_10/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_10"
  input: "Rbn6a/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_10"
  input: "batchnorm_10/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_10/mul_grad/Mul"
  input: "^gradients/batchnorm_10/mul_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_10/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_10/mul_grad/Mul"
  input: "^gradients/batchnorm_10/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_10/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_10/mul_grad/Mul_1"
  input: "^gradients/batchnorm_10/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_10/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batchnorm_10/Rsqrt"
  input: "gradients/batchnorm_10/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\340\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn6a/cond/Merge_grad/tuple/control_dependency_1"
  input: "gradients/Rbn6a/cond/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_10/Rsqrt_grad/RsqrtGrad"
  input: "gradients/batchnorm_10/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_10/add_grad/Sum"
  input: "gradients/batchnorm_10/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_10/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_10/add_grad/Reshape"
}
node {
  name: "gradients/batchnorm_10/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_10/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_10/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_10/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_10/add_grad/Reshape"
  input: "^gradients/batchnorm_10/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_10/add_grad/tuple/control_dependency"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn6a/cond/Merge_1_grad/cond_grad"
}
node {
  name: "gradients/Rbn6a/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn6a/cond/Merge_1_grad/cond_grad"
  input: "^gradients/Rbn6a/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn6a/cond/Merge_1_grad/cond_grad:1"
  input: "^gradients/Rbn6a/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_10/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\340\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn6a/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/Rbn6a/cond/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/variance_grad/Shape"
  op: "Shape"
  input: "Rbn6a/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/variance_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn6a/cond/moments/Squeeze_1_grad/Reshape"
  input: "gradients/Rbn6a/cond/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/variance_grad/Shape_1"
  op: "Shape"
  input: "Rbn6a/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/variance_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\340\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn6a/cond/moments/variance_grad/Shape_1"
  input: "gradients/Rbn6a/cond/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn6a/cond/moments/variance_grad/Shape_2"
  input: "gradients/Rbn6a/cond/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn6a/cond/moments/variance_grad/Prod_1"
  input: "gradients/Rbn6a/cond/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn6a/cond/moments/variance_grad/Prod"
  input: "gradients/Rbn6a/cond/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn6a/cond/moments/variance_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn6a/cond/moments/variance_grad/BroadcastTo"
  input: "gradients/Rbn6a/cond/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Rbn6a/cond/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/scalar"
  input: "gradients/Rbn6a/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Rbn6a/cond/moments/mean/Switch:1"
  input: "Rbn6a/cond/moments/StopGradient"
  input: "^gradients/Rbn6a/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Mul"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Rbn6a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "Rbn6a/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Shape"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Sum"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn6a/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn6a/cond/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/Rbn6a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn6a/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn6a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn6a/cond/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean_grad/Shape"
  op: "Shape"
  input: "Rbn6a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn6a/cond/moments/Squeeze_grad/Reshape"
  input: "gradients/Rbn6a/cond/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean_grad/Shape_1"
  op: "Shape"
  input: "Rbn6a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\340\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn6a/cond/moments/mean_grad/Shape_1"
  input: "gradients/Rbn6a/cond/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn6a/cond/moments/mean_grad/Shape_2"
  input: "gradients/Rbn6a/cond/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn6a/cond/moments/mean_grad/Prod_1"
  input: "gradients/Rbn6a/cond/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn6a/cond/moments/mean_grad/Prod"
  input: "gradients/Rbn6a/cond/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn6a/cond/moments/mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn6a/cond/moments/mean_grad/BroadcastTo"
  input: "gradients/Rbn6a/cond/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/Rbn6a/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/Rbn6a/cond/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn6a/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Switch_2"
  op: "Switch"
  input: "concat_4"
  input: "Rbn6a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_2"
  op: "Identity"
  input: "gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_3"
  op: "Shape"
  input: "gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_2/Const"
  op: "Const"
  input: "^gradients/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_2"
  op: "Fill"
  input: "gradients/Shape_3"
  input: "gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn6a/cond/moments/mean/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_2"
  input: "gradients/AddN_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/batchnorm_10/mul_1_grad/tuple/control_dependency"
  input: "gradients/Rbn6a/cond/moments/mean/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/strided_slice_2_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/concat_4_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/concat_4_grad/mod"
  op: "FloorMod"
  input: "concat_4/axis"
  input: "gradients/concat_4_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_4_grad/Shape"
  op: "Shape"
  input: "strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_4_grad/ShapeN"
  op: "ShapeN"
  input: "strided_slice_1"
  input: "add_10"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_4_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_4_grad/mod"
  input: "gradients/concat_4_grad/ShapeN"
  input: "gradients/concat_4_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_4_grad/Slice"
  op: "Slice"
  input: "gradients/AddN_12"
  input: "gradients/concat_4_grad/ConcatOffset"
  input: "gradients/concat_4_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_4_grad/Slice_1"
  op: "Slice"
  input: "gradients/AddN_12"
  input: "gradients/concat_4_grad/ConcatOffset:1"
  input: "gradients/concat_4_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_4_grad/Slice"
  input: "^gradients/concat_4_grad/Slice_1"
}
node {
  name: "gradients/concat_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_4_grad/Slice"
  input: "^gradients/concat_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_4_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/concat_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_4_grad/Slice_1"
  input: "^gradients/concat_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_4_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_1_grad/Shape"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad/strides"
  input: "gradients/concat_4_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/add_10_grad/Shape"
  op: "Shape"
  input: "Conv3D_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_10_grad/Shape_1"
  op: "Shape"
  input: "Rconv5b/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_10_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_10_grad/Shape"
  input: "gradients/add_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_10_grad/Sum"
  op: "Sum"
  input: "gradients/concat_4_grad/tuple/control_dependency_1"
  input: "gradients/add_10_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_10_grad/Sum"
  input: "gradients/add_10_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_10_grad/Sum_1"
  op: "Sum"
  input: "gradients/concat_4_grad/tuple/control_dependency_1"
  input: "gradients/add_10_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_10_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_10_grad/Sum_1"
  input: "gradients/add_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_10_grad/Reshape"
  input: "^gradients/add_10_grad/Reshape_1"
}
node {
  name: "gradients/add_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_10_grad/Reshape"
  input: "^gradients/add_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_10_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_10_grad/Reshape_1"
  input: "^gradients/add_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_10_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_10_grad/Shape"
  op: "Shape"
  input: "Pad_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_10_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_10_grad/Shape"
  input: "Rconv5b/W/read"
  input: "gradients/add_10_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_10_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_10_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Pad_5"
  input: "gradients/Conv3D_10_grad/Shape_1"
  input: "gradients/add_10_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_10_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_10_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_10_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_10_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_10_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_10_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Pad_5_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/Pad_5_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Pad_5_grad/stack"
  op: "Pack"
  input: "gradients/Pad_5_grad/Rank"
  input: "gradients/Pad_5_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Pad_5_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Pad_5_grad/Slice"
  op: "Slice"
  input: "Pad_5/paddings"
  input: "gradients/Pad_5_grad/Slice/begin"
  input: "gradients/Pad_5_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_5_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Pad_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/Pad_5_grad/Slice"
  input: "gradients/Pad_5_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_5_grad/Shape"
  op: "Shape"
  input: "Relu_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_5_grad/Slice_1"
  op: "Slice"
  input: "gradients/Conv3D_10_grad/tuple/control_dependency"
  input: "gradients/Pad_5_grad/Reshape"
  input: "gradients/Pad_5_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Relu_9_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Pad_5_grad/Slice_1"
  input: "Relu_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_1_grad/Shape"
  op: "Shape"
  input: "batchnorm_9/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_9/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_9/add_1_grad/Shape"
  input: "gradients/batchnorm_9/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_9_grad/ReluGrad"
  input: "gradients/batchnorm_9/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_9/add_1_grad/Sum"
  input: "gradients/batchnorm_9/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_9_grad/ReluGrad"
  input: "gradients/batchnorm_9/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_9/add_1_grad/Sum_1"
  input: "gradients/batchnorm_9/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_9/add_1_grad/Reshape"
  input: "^gradients/batchnorm_9/add_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_9/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_9/add_1_grad/Reshape"
  input: "^gradients/batchnorm_9/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_9/add_1_grad/Reshape_1"
  input: "^gradients/batchnorm_9/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_1_grad/Shape"
  op: "Shape"
  input: "add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_9/mul_1_grad/Shape"
  input: "gradients/batchnorm_9/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_9/add_1_grad/tuple/control_dependency"
  input: "batchnorm_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_9/mul_1_grad/Mul"
  input: "gradients/batchnorm_9/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_9/mul_1_grad/Sum"
  input: "gradients/batchnorm_9/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_1_grad/Mul_1"
  op: "Mul"
  input: "add_9"
  input: "gradients/batchnorm_9/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/batchnorm_9/mul_1_grad/Mul_1"
  input: "gradients/batchnorm_9/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_9/mul_1_grad/Sum_1"
  input: "gradients/batchnorm_9/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_9/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_9/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_9/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_9/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_9/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_9/mul_1_grad/Reshape_1"
  input: "^gradients/batchnorm_9/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/sub_grad/Neg"
  op: "Neg"
  input: "gradients/batchnorm_9/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_9/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_9/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_9/sub_grad/Neg"
}
node {
  name: "gradients/batchnorm_9/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_9/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_9/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_9/sub_grad/Neg"
  input: "^gradients/batchnorm_9/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_9/sub_grad/tuple/control_dependency_1"
  input: "batchnorm_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/batchnorm_9/sub_grad/tuple/control_dependency_1"
  input: "Rbn5b/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_9/mul_2_grad/Mul"
  input: "^gradients/batchnorm_9/mul_2_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_9/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_9/mul_2_grad/Mul"
  input: "^gradients/batchnorm_9/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_9/mul_2_grad/Mul_1"
  input: "^gradients/batchnorm_9/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_9/mul_2_grad/tuple/control_dependency"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn5b/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/Rbn5b/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn5b/cond/Merge_grad/cond_grad"
  input: "^gradients/Rbn5b/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn5b/cond/Merge_grad/cond_grad:1"
  input: "^gradients/Rbn5b/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/batchnorm_9/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/batchnorm_9/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_13"
  input: "Rbn5b/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_13"
  input: "batchnorm_9/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_9/mul_grad/Mul"
  input: "^gradients/batchnorm_9/mul_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_9/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_9/mul_grad/Mul"
  input: "^gradients/batchnorm_9/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_9/mul_grad/Mul_1"
  input: "^gradients/batchnorm_9/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batchnorm_9/Rsqrt"
  input: "gradients/batchnorm_9/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn5b/cond/Merge_grad/tuple/control_dependency_1"
  input: "gradients/Rbn5b/cond/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_9/add_grad/BroadcastGradientArgs/s0"
  input: "gradients/batchnorm_9/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_9/Rsqrt_grad/RsqrtGrad"
  input: "gradients/batchnorm_9/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_9/add_grad/Sum"
  input: "gradients/batchnorm_9/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_9/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_9/add_grad/Reshape"
}
node {
  name: "gradients/batchnorm_9/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_9/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_9/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_9/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_9/add_grad/Reshape"
  input: "^gradients/batchnorm_9/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_9/add_grad/tuple/control_dependency"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn5b/cond/Merge_1_grad/cond_grad"
}
node {
  name: "gradients/Rbn5b/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn5b/cond/Merge_1_grad/cond_grad"
  input: "^gradients/Rbn5b/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn5b/cond/Merge_1_grad/cond_grad:1"
  input: "^gradients/Rbn5b/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn5b/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/Rbn5b/cond/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/variance_grad/Shape"
  op: "Shape"
  input: "Rbn5b/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/variance_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn5b/cond/moments/Squeeze_1_grad/Reshape"
  input: "gradients/Rbn5b/cond/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/variance_grad/Shape_1"
  op: "Shape"
  input: "Rbn5b/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/variance_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn5b/cond/moments/variance_grad/Shape_1"
  input: "gradients/Rbn5b/cond/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn5b/cond/moments/variance_grad/Shape_2"
  input: "gradients/Rbn5b/cond/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn5b/cond/moments/variance_grad/Prod_1"
  input: "gradients/Rbn5b/cond/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn5b/cond/moments/variance_grad/Prod"
  input: "gradients/Rbn5b/cond/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn5b/cond/moments/variance_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn5b/cond/moments/variance_grad/BroadcastTo"
  input: "gradients/Rbn5b/cond/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Rbn5b/cond/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/scalar"
  input: "gradients/Rbn5b/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Rbn5b/cond/moments/mean/Switch:1"
  input: "Rbn5b/cond/moments/StopGradient"
  input: "^gradients/Rbn5b/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Mul"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Rbn5b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "Rbn5b/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Shape"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Sum"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn5b/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn5b/cond/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/Rbn5b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn5b/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn5b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn5b/cond/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean_grad/Shape"
  op: "Shape"
  input: "Rbn5b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn5b/cond/moments/Squeeze_grad/Reshape"
  input: "gradients/Rbn5b/cond/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean_grad/Shape_1"
  op: "Shape"
  input: "Rbn5b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn5b/cond/moments/mean_grad/Shape_1"
  input: "gradients/Rbn5b/cond/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn5b/cond/moments/mean_grad/Shape_2"
  input: "gradients/Rbn5b/cond/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn5b/cond/moments/mean_grad/Prod_1"
  input: "gradients/Rbn5b/cond/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn5b/cond/moments/mean_grad/Prod"
  input: "gradients/Rbn5b/cond/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn5b/cond/moments/mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn5b/cond/moments/mean_grad/BroadcastTo"
  input: "gradients/Rbn5b/cond/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/Rbn5b/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/Rbn5b/cond/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn5b/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Switch_3"
  op: "Switch"
  input: "add_9"
  input: "Rbn5b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_3"
  op: "Identity"
  input: "gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_4"
  op: "Shape"
  input: "gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_3/Const"
  op: "Const"
  input: "^gradients/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_3"
  op: "Fill"
  input: "gradients/Shape_4"
  input: "gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5b/cond/moments/mean/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_3"
  input: "gradients/AddN_14"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/batchnorm_9/mul_1_grad/tuple/control_dependency"
  input: "gradients/Rbn5b/cond/moments/mean/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_9/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_9_grad/Shape"
  op: "Shape"
  input: "Conv3D_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_9_grad/Shape_1"
  op: "Shape"
  input: "Rconv5a/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_9_grad/Shape"
  input: "gradients/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_9_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_15"
  input: "gradients/add_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_9_grad/Sum"
  input: "gradients/add_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_15"
  input: "gradients/add_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_9_grad/Sum_1"
  input: "gradients/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_9_grad/Reshape"
  input: "^gradients/add_9_grad/Reshape_1"
}
node {
  name: "gradients/add_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_9_grad/Reshape"
  input: "^gradients/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_9_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_9_grad/Reshape_1"
  input: "^gradients/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_9_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_9_grad/Shape"
  op: "Shape"
  input: "Relu_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_9_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_9_grad/Shape"
  input: "Rconv5a/W/read"
  input: "gradients/add_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_9_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_9_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Relu_8"
  input: "gradients/Conv3D_9_grad/Shape_1"
  input: "gradients/add_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_9_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_9_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_9_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_9_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_9_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_9_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Relu_8_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv3D_9_grad/tuple/control_dependency"
  input: "Relu_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_1_grad/Shape"
  op: "Shape"
  input: "batchnorm_8/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_8/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_8/add_1_grad/Shape"
  input: "gradients/batchnorm_8/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_8_grad/ReluGrad"
  input: "gradients/batchnorm_8/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_8/add_1_grad/Sum"
  input: "gradients/batchnorm_8/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_8_grad/ReluGrad"
  input: "gradients/batchnorm_8/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_8/add_1_grad/Sum_1"
  input: "gradients/batchnorm_8/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_8/add_1_grad/Reshape"
  input: "^gradients/batchnorm_8/add_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_8/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_8/add_1_grad/Reshape"
  input: "^gradients/batchnorm_8/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_8/add_1_grad/Reshape_1"
  input: "^gradients/batchnorm_8/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_1_grad/Shape"
  op: "Shape"
  input: "concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_8/mul_1_grad/Shape"
  input: "gradients/batchnorm_8/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_8/add_1_grad/tuple/control_dependency"
  input: "batchnorm_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_8/mul_1_grad/Mul"
  input: "gradients/batchnorm_8/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_8/mul_1_grad/Sum"
  input: "gradients/batchnorm_8/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_1_grad/Mul_1"
  op: "Mul"
  input: "concat_3"
  input: "gradients/batchnorm_8/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/batchnorm_8/mul_1_grad/Mul_1"
  input: "gradients/batchnorm_8/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_8/mul_1_grad/Sum_1"
  input: "gradients/batchnorm_8/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_8/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_8/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_8/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_8/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_8/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_8/mul_1_grad/Reshape_1"
  input: "^gradients/batchnorm_8/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_8/sub_grad/Neg"
  op: "Neg"
  input: "gradients/batchnorm_8/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_8/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_8/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_8/sub_grad/Neg"
}
node {
  name: "gradients/batchnorm_8/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_8/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_8/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_8/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_8/sub_grad/Neg"
  input: "^gradients/batchnorm_8/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_8/sub_grad/tuple/control_dependency_1"
  input: "batchnorm_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/batchnorm_8/sub_grad/tuple/control_dependency_1"
  input: "Rbn5a/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_8/mul_2_grad/Mul"
  input: "^gradients/batchnorm_8/mul_2_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_8/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_8/mul_2_grad/Mul"
  input: "^gradients/batchnorm_8/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_8/mul_2_grad/Mul_1"
  input: "^gradients/batchnorm_8/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_8/mul_2_grad/tuple/control_dependency"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn5a/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/Rbn5a/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn5a/cond/Merge_grad/cond_grad"
  input: "^gradients/Rbn5a/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn5a/cond/Merge_grad/cond_grad:1"
  input: "^gradients/Rbn5a/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/batchnorm_8/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/batchnorm_8/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_16"
  input: "Rbn5a/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_16"
  input: "batchnorm_8/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_8/mul_grad/Mul"
  input: "^gradients/batchnorm_8/mul_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_8/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_8/mul_grad/Mul"
  input: "^gradients/batchnorm_8/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_8/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_8/mul_grad/Mul_1"
  input: "^gradients/batchnorm_8/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_8/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batchnorm_8/Rsqrt"
  input: "gradients/batchnorm_8/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn5a/cond/Merge_grad/tuple/control_dependency_1"
  input: "gradients/Rbn5a/cond/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_8/Rsqrt_grad/RsqrtGrad"
  input: "gradients/batchnorm_8/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_8/add_grad/Sum"
  input: "gradients/batchnorm_8/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_8/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_8/add_grad/Reshape"
}
node {
  name: "gradients/batchnorm_8/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_8/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_8/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_8/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_8/add_grad/Reshape"
  input: "^gradients/batchnorm_8/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_8/add_grad/tuple/control_dependency"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn5a/cond/Merge_1_grad/cond_grad"
}
node {
  name: "gradients/Rbn5a/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn5a/cond/Merge_1_grad/cond_grad"
  input: "^gradients/Rbn5a/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn5a/cond/Merge_1_grad/cond_grad:1"
  input: "^gradients/Rbn5a/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_8/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn5a/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/Rbn5a/cond/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/variance_grad/Shape"
  op: "Shape"
  input: "Rbn5a/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/variance_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn5a/cond/moments/Squeeze_1_grad/Reshape"
  input: "gradients/Rbn5a/cond/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/variance_grad/Shape_1"
  op: "Shape"
  input: "Rbn5a/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/variance_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn5a/cond/moments/variance_grad/Shape_1"
  input: "gradients/Rbn5a/cond/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn5a/cond/moments/variance_grad/Shape_2"
  input: "gradients/Rbn5a/cond/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn5a/cond/moments/variance_grad/Prod_1"
  input: "gradients/Rbn5a/cond/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn5a/cond/moments/variance_grad/Prod"
  input: "gradients/Rbn5a/cond/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn5a/cond/moments/variance_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn5a/cond/moments/variance_grad/BroadcastTo"
  input: "gradients/Rbn5a/cond/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Rbn5a/cond/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/scalar"
  input: "gradients/Rbn5a/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Rbn5a/cond/moments/mean/Switch:1"
  input: "Rbn5a/cond/moments/StopGradient"
  input: "^gradients/Rbn5a/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Mul"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Rbn5a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "Rbn5a/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Shape"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Sum"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn5a/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn5a/cond/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/Rbn5a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn5a/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn5a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn5a/cond/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean_grad/Shape"
  op: "Shape"
  input: "Rbn5a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn5a/cond/moments/Squeeze_grad/Reshape"
  input: "gradients/Rbn5a/cond/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean_grad/Shape_1"
  op: "Shape"
  input: "Rbn5a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn5a/cond/moments/mean_grad/Shape_1"
  input: "gradients/Rbn5a/cond/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn5a/cond/moments/mean_grad/Shape_2"
  input: "gradients/Rbn5a/cond/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn5a/cond/moments/mean_grad/Prod_1"
  input: "gradients/Rbn5a/cond/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn5a/cond/moments/mean_grad/Prod"
  input: "gradients/Rbn5a/cond/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn5a/cond/moments/mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn5a/cond/moments/mean_grad/BroadcastTo"
  input: "gradients/Rbn5a/cond/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/Rbn5a/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/Rbn5a/cond/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn5a/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Switch_4"
  op: "Switch"
  input: "concat_3"
  input: "Rbn5a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_4"
  op: "Identity"
  input: "gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_5"
  op: "Shape"
  input: "gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_4/Const"
  op: "Const"
  input: "^gradients/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_4"
  op: "Fill"
  input: "gradients/Shape_5"
  input: "gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn5a/cond/moments/mean/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_4"
  input: "gradients/AddN_17"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/batchnorm_8/mul_1_grad/tuple/control_dependency"
  input: "gradients/Rbn5a/cond/moments/mean/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/strided_slice_1_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/mod"
  op: "FloorMod"
  input: "concat_3/axis"
  input: "gradients/concat_3_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_3_grad/Shape"
  op: "Shape"
  input: "strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_3_grad/ShapeN"
  op: "ShapeN"
  input: "strided_slice"
  input: "add_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_3_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_3_grad/mod"
  input: "gradients/concat_3_grad/ShapeN"
  input: "gradients/concat_3_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_3_grad/Slice"
  op: "Slice"
  input: "gradients/AddN_18"
  input: "gradients/concat_3_grad/ConcatOffset"
  input: "gradients/concat_3_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_3_grad/Slice_1"
  op: "Slice"
  input: "gradients/AddN_18"
  input: "gradients/concat_3_grad/ConcatOffset:1"
  input: "gradients/concat_3_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_3_grad/Slice"
  input: "^gradients/concat_3_grad/Slice_1"
}
node {
  name: "gradients/concat_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_3_grad/Slice"
  input: "^gradients/concat_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_3_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_3_grad/Slice_1"
  input: "^gradients/concat_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_3_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_grad/Shape"
  op: "Shape"
  input: "concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_grad/Shape"
  input: "gradients/strided_slice_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_grad/StridedSliceGrad/strides"
  input: "gradients/concat_3_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/add_8_grad/Shape"
  op: "Shape"
  input: "Conv3D_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_8_grad/Shape_1"
  op: "Shape"
  input: "Rconv4b/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_8_grad/Shape"
  input: "gradients/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_8_grad/Sum"
  op: "Sum"
  input: "gradients/concat_3_grad/tuple/control_dependency_1"
  input: "gradients/add_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_8_grad/Sum"
  input: "gradients/add_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/concat_3_grad/tuple/control_dependency_1"
  input: "gradients/add_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_8_grad/Sum_1"
  input: "gradients/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_8_grad/Reshape"
  input: "^gradients/add_8_grad/Reshape_1"
}
node {
  name: "gradients/add_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_8_grad/Reshape"
  input: "^gradients/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_8_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_8_grad/Reshape_1"
  input: "^gradients/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_8_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_8_grad/Shape"
  op: "Shape"
  input: "Pad_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_8_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_8_grad/Shape"
  input: "Rconv4b/W/read"
  input: "gradients/add_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_8_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\240\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_8_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Pad_4"
  input: "gradients/Conv3D_8_grad/Shape_1"
  input: "gradients/add_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_8_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_8_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_8_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_8_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_8_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_8_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Pad_4_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/Pad_4_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Pad_4_grad/stack"
  op: "Pack"
  input: "gradients/Pad_4_grad/Rank"
  input: "gradients/Pad_4_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Pad_4_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Pad_4_grad/Slice"
  op: "Slice"
  input: "Pad_4/paddings"
  input: "gradients/Pad_4_grad/Slice/begin"
  input: "gradients/Pad_4_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_4_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Pad_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/Pad_4_grad/Slice"
  input: "gradients/Pad_4_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_4_grad/Shape"
  op: "Shape"
  input: "Relu_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_4_grad/Slice_1"
  op: "Slice"
  input: "gradients/Conv3D_8_grad/tuple/control_dependency"
  input: "gradients/Pad_4_grad/Reshape"
  input: "gradients/Pad_4_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Relu_7_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Pad_4_grad/Slice_1"
  input: "Relu_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_1_grad/Shape"
  op: "Shape"
  input: "batchnorm_7/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_7/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_7/add_1_grad/Shape"
  input: "gradients/batchnorm_7/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_7_grad/ReluGrad"
  input: "gradients/batchnorm_7/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_7/add_1_grad/Sum"
  input: "gradients/batchnorm_7/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_7_grad/ReluGrad"
  input: "gradients/batchnorm_7/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_7/add_1_grad/Sum_1"
  input: "gradients/batchnorm_7/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_7/add_1_grad/Reshape"
  input: "^gradients/batchnorm_7/add_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_7/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_7/add_1_grad/Reshape"
  input: "^gradients/batchnorm_7/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_7/add_1_grad/Reshape_1"
  input: "^gradients/batchnorm_7/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_1_grad/Shape"
  op: "Shape"
  input: "add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_7/mul_1_grad/Shape"
  input: "gradients/batchnorm_7/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_7/add_1_grad/tuple/control_dependency"
  input: "batchnorm_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_7/mul_1_grad/Mul"
  input: "gradients/batchnorm_7/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_7/mul_1_grad/Sum"
  input: "gradients/batchnorm_7/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_1_grad/Mul_1"
  op: "Mul"
  input: "add_7"
  input: "gradients/batchnorm_7/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/batchnorm_7/mul_1_grad/Mul_1"
  input: "gradients/batchnorm_7/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_7/mul_1_grad/Sum_1"
  input: "gradients/batchnorm_7/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_7/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_7/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_7/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_7/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_7/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_7/mul_1_grad/Reshape_1"
  input: "^gradients/batchnorm_7/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/sub_grad/Neg"
  op: "Neg"
  input: "gradients/batchnorm_7/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_7/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_7/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_7/sub_grad/Neg"
}
node {
  name: "gradients/batchnorm_7/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_7/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_7/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_7/sub_grad/Neg"
  input: "^gradients/batchnorm_7/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_7/sub_grad/tuple/control_dependency_1"
  input: "batchnorm_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/batchnorm_7/sub_grad/tuple/control_dependency_1"
  input: "Rbn4b/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_7/mul_2_grad/Mul"
  input: "^gradients/batchnorm_7/mul_2_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_7/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_7/mul_2_grad/Mul"
  input: "^gradients/batchnorm_7/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_7/mul_2_grad/Mul_1"
  input: "^gradients/batchnorm_7/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_7/mul_2_grad/tuple/control_dependency"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn4b/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/Rbn4b/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn4b/cond/Merge_grad/cond_grad"
  input: "^gradients/Rbn4b/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn4b/cond/Merge_grad/cond_grad:1"
  input: "^gradients/Rbn4b/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/batchnorm_7/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/batchnorm_7/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_19"
  input: "Rbn4b/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_19"
  input: "batchnorm_7/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_7/mul_grad/Mul"
  input: "^gradients/batchnorm_7/mul_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_7/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_7/mul_grad/Mul"
  input: "^gradients/batchnorm_7/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_7/mul_grad/Mul_1"
  input: "^gradients/batchnorm_7/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batchnorm_7/Rsqrt"
  input: "gradients/batchnorm_7/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn4b/cond/Merge_grad/tuple/control_dependency_1"
  input: "gradients/Rbn4b/cond/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_7/add_grad/BroadcastGradientArgs/s0"
  input: "gradients/batchnorm_7/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_7/Rsqrt_grad/RsqrtGrad"
  input: "gradients/batchnorm_7/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_7/add_grad/Sum"
  input: "gradients/batchnorm_7/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_7/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_7/add_grad/Reshape"
}
node {
  name: "gradients/batchnorm_7/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_7/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_7/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_7/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_7/add_grad/Reshape"
  input: "^gradients/batchnorm_7/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_7/add_grad/tuple/control_dependency"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn4b/cond/Merge_1_grad/cond_grad"
}
node {
  name: "gradients/Rbn4b/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn4b/cond/Merge_1_grad/cond_grad"
  input: "^gradients/Rbn4b/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn4b/cond/Merge_1_grad/cond_grad:1"
  input: "^gradients/Rbn4b/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn4b/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/Rbn4b/cond/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/variance_grad/Shape"
  op: "Shape"
  input: "Rbn4b/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/variance_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn4b/cond/moments/Squeeze_1_grad/Reshape"
  input: "gradients/Rbn4b/cond/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/variance_grad/Shape_1"
  op: "Shape"
  input: "Rbn4b/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/variance_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn4b/cond/moments/variance_grad/Shape_1"
  input: "gradients/Rbn4b/cond/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn4b/cond/moments/variance_grad/Shape_2"
  input: "gradients/Rbn4b/cond/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn4b/cond/moments/variance_grad/Prod_1"
  input: "gradients/Rbn4b/cond/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn4b/cond/moments/variance_grad/Prod"
  input: "gradients/Rbn4b/cond/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn4b/cond/moments/variance_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn4b/cond/moments/variance_grad/BroadcastTo"
  input: "gradients/Rbn4b/cond/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Rbn4b/cond/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/scalar"
  input: "gradients/Rbn4b/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Rbn4b/cond/moments/mean/Switch:1"
  input: "Rbn4b/cond/moments/StopGradient"
  input: "^gradients/Rbn4b/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Mul"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Rbn4b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "Rbn4b/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Shape"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Sum"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn4b/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn4b/cond/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/Rbn4b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn4b/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn4b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn4b/cond/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean_grad/Shape"
  op: "Shape"
  input: "Rbn4b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn4b/cond/moments/Squeeze_grad/Reshape"
  input: "gradients/Rbn4b/cond/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean_grad/Shape_1"
  op: "Shape"
  input: "Rbn4b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn4b/cond/moments/mean_grad/Shape_1"
  input: "gradients/Rbn4b/cond/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn4b/cond/moments/mean_grad/Shape_2"
  input: "gradients/Rbn4b/cond/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn4b/cond/moments/mean_grad/Prod_1"
  input: "gradients/Rbn4b/cond/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn4b/cond/moments/mean_grad/Prod"
  input: "gradients/Rbn4b/cond/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn4b/cond/moments/mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn4b/cond/moments/mean_grad/BroadcastTo"
  input: "gradients/Rbn4b/cond/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/Rbn4b/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/Rbn4b/cond/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn4b/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Switch_5"
  op: "Switch"
  input: "add_7"
  input: "Rbn4b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_5"
  op: "Identity"
  input: "gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_6"
  op: "Shape"
  input: "gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_5/Const"
  op: "Const"
  input: "^gradients/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_5"
  op: "Fill"
  input: "gradients/Shape_6"
  input: "gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4b/cond/moments/mean/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_5"
  input: "gradients/AddN_20"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/batchnorm_7/mul_1_grad/tuple/control_dependency"
  input: "gradients/Rbn4b/cond/moments/mean/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_7/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_7_grad/Shape"
  op: "Shape"
  input: "Conv3D_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_7_grad/Shape_1"
  op: "Shape"
  input: "Rconv4a/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_7_grad/Shape"
  input: "gradients/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_7_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_21"
  input: "gradients/add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_7_grad/Sum"
  input: "gradients/add_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_21"
  input: "gradients/add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_7_grad/Sum_1"
  input: "gradients/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_7_grad/Reshape"
  input: "^gradients/add_7_grad/Reshape_1"
}
node {
  name: "gradients/add_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_7_grad/Reshape"
  input: "^gradients/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_7_grad/Reshape_1"
  input: "^gradients/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_7_grad/Shape"
  op: "Shape"
  input: "Relu_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_7_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_7_grad/Shape"
  input: "Rconv4a/W/read"
  input: "gradients/add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_7_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\240\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_7_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Relu_6"
  input: "gradients/Conv3D_7_grad/Shape_1"
  input: "gradients/add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_7_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_7_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_7_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_7_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_7_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_7_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Relu_6_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv3D_7_grad/tuple/control_dependency"
  input: "Relu_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_1_grad/Shape"
  op: "Shape"
  input: "batchnorm_6/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_6/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_6/add_1_grad/Shape"
  input: "gradients/batchnorm_6/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_6_grad/ReluGrad"
  input: "gradients/batchnorm_6/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_6/add_1_grad/Sum"
  input: "gradients/batchnorm_6/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_6_grad/ReluGrad"
  input: "gradients/batchnorm_6/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_6/add_1_grad/Sum_1"
  input: "gradients/batchnorm_6/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_6/add_1_grad/Reshape"
  input: "^gradients/batchnorm_6/add_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_6/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_6/add_1_grad/Reshape"
  input: "^gradients/batchnorm_6/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_6/add_1_grad/Reshape_1"
  input: "^gradients/batchnorm_6/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_1_grad/Shape"
  op: "Shape"
  input: "concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_6/mul_1_grad/Shape"
  input: "gradients/batchnorm_6/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_6/add_1_grad/tuple/control_dependency"
  input: "batchnorm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_6/mul_1_grad/Mul"
  input: "gradients/batchnorm_6/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_6/mul_1_grad/Sum"
  input: "gradients/batchnorm_6/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_1_grad/Mul_1"
  op: "Mul"
  input: "concat_2"
  input: "gradients/batchnorm_6/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/batchnorm_6/mul_1_grad/Mul_1"
  input: "gradients/batchnorm_6/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_6/mul_1_grad/Sum_1"
  input: "gradients/batchnorm_6/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_6/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_6/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_6/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_6/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_6/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_6/mul_1_grad/Reshape_1"
  input: "^gradients/batchnorm_6/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_6/sub_grad/Neg"
  op: "Neg"
  input: "gradients/batchnorm_6/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_6/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_6/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_6/sub_grad/Neg"
}
node {
  name: "gradients/batchnorm_6/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_6/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_6/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_6/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_6/sub_grad/Neg"
  input: "^gradients/batchnorm_6/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_6/sub_grad/tuple/control_dependency_1"
  input: "batchnorm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/batchnorm_6/sub_grad/tuple/control_dependency_1"
  input: "Rbn4a/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_6/mul_2_grad/Mul"
  input: "^gradients/batchnorm_6/mul_2_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_6/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_6/mul_2_grad/Mul"
  input: "^gradients/batchnorm_6/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_6/mul_2_grad/Mul_1"
  input: "^gradients/batchnorm_6/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_6/mul_2_grad/tuple/control_dependency"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn4a/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/Rbn4a/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn4a/cond/Merge_grad/cond_grad"
  input: "^gradients/Rbn4a/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn4a/cond/Merge_grad/cond_grad:1"
  input: "^gradients/Rbn4a/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/batchnorm_6/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/batchnorm_6/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_22"
  input: "Rbn4a/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_22"
  input: "batchnorm_6/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_6/mul_grad/Mul"
  input: "^gradients/batchnorm_6/mul_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_6/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_6/mul_grad/Mul"
  input: "^gradients/batchnorm_6/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_6/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_6/mul_grad/Mul_1"
  input: "^gradients/batchnorm_6/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_6/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batchnorm_6/Rsqrt"
  input: "gradients/batchnorm_6/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn4a/cond/Merge_grad/tuple/control_dependency_1"
  input: "gradients/Rbn4a/cond/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_6/Rsqrt_grad/RsqrtGrad"
  input: "gradients/batchnorm_6/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_6/add_grad/Sum"
  input: "gradients/batchnorm_6/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_6/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_6/add_grad/Reshape"
}
node {
  name: "gradients/batchnorm_6/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_6/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_6/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_6/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_6/add_grad/Reshape"
  input: "^gradients/batchnorm_6/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_6/add_grad/tuple/control_dependency"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn4a/cond/Merge_1_grad/cond_grad"
}
node {
  name: "gradients/Rbn4a/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn4a/cond/Merge_1_grad/cond_grad"
  input: "^gradients/Rbn4a/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn4a/cond/Merge_1_grad/cond_grad:1"
  input: "^gradients/Rbn4a/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_6/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn4a/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/Rbn4a/cond/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/variance_grad/Shape"
  op: "Shape"
  input: "Rbn4a/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/variance_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn4a/cond/moments/Squeeze_1_grad/Reshape"
  input: "gradients/Rbn4a/cond/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/variance_grad/Shape_1"
  op: "Shape"
  input: "Rbn4a/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/variance_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn4a/cond/moments/variance_grad/Shape_1"
  input: "gradients/Rbn4a/cond/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn4a/cond/moments/variance_grad/Shape_2"
  input: "gradients/Rbn4a/cond/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn4a/cond/moments/variance_grad/Prod_1"
  input: "gradients/Rbn4a/cond/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn4a/cond/moments/variance_grad/Prod"
  input: "gradients/Rbn4a/cond/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn4a/cond/moments/variance_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn4a/cond/moments/variance_grad/BroadcastTo"
  input: "gradients/Rbn4a/cond/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Rbn4a/cond/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/scalar"
  input: "gradients/Rbn4a/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Rbn4a/cond/moments/mean/Switch:1"
  input: "Rbn4a/cond/moments/StopGradient"
  input: "^gradients/Rbn4a/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Mul"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Rbn4a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "Rbn4a/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Shape"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Sum"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn4a/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn4a/cond/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/Rbn4a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn4a/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn4a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn4a/cond/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean_grad/Shape"
  op: "Shape"
  input: "Rbn4a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn4a/cond/moments/Squeeze_grad/Reshape"
  input: "gradients/Rbn4a/cond/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean_grad/Shape_1"
  op: "Shape"
  input: "Rbn4a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn4a/cond/moments/mean_grad/Shape_1"
  input: "gradients/Rbn4a/cond/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn4a/cond/moments/mean_grad/Shape_2"
  input: "gradients/Rbn4a/cond/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn4a/cond/moments/mean_grad/Prod_1"
  input: "gradients/Rbn4a/cond/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn4a/cond/moments/mean_grad/Prod"
  input: "gradients/Rbn4a/cond/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn4a/cond/moments/mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn4a/cond/moments/mean_grad/BroadcastTo"
  input: "gradients/Rbn4a/cond/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/Rbn4a/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/Rbn4a/cond/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn4a/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Switch_6"
  op: "Switch"
  input: "concat_2"
  input: "Rbn4a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_6"
  op: "Identity"
  input: "gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_7"
  op: "Shape"
  input: "gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_6/Const"
  op: "Const"
  input: "^gradients/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_6"
  op: "Fill"
  input: "gradients/Shape_7"
  input: "gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn4a/cond/moments/mean/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_6"
  input: "gradients/AddN_23"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/strided_slice_grad/StridedSliceGrad"
  input: "gradients/batchnorm_6/mul_1_grad/tuple/control_dependency"
  input: "gradients/Rbn4a/cond/moments/mean/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/mod"
  op: "FloorMod"
  input: "concat_2/axis"
  input: "gradients/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_2_grad/Shape"
  op: "Shape"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_2_grad/ShapeN"
  op: "ShapeN"
  input: "concat_1"
  input: "add_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_2_grad/mod"
  input: "gradients/concat_2_grad/ShapeN"
  input: "gradients/concat_2_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_2_grad/Slice"
  op: "Slice"
  input: "gradients/AddN_24"
  input: "gradients/concat_2_grad/ConcatOffset"
  input: "gradients/concat_2_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/AddN_24"
  input: "gradients/concat_2_grad/ConcatOffset:1"
  input: "gradients/concat_2_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_2_grad/Slice"
  input: "^gradients/concat_2_grad/Slice_1"
}
node {
  name: "gradients/concat_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_2_grad/Slice"
  input: "^gradients/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_2_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_2_grad/Slice_1"
  input: "^gradients/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_2_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/add_6_grad/Shape"
  op: "Shape"
  input: "Conv3D_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_6_grad/Shape_1"
  op: "Shape"
  input: "Rconv3b/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_6_grad/Shape"
  input: "gradients/add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_6_grad/Sum"
  op: "Sum"
  input: "gradients/concat_2_grad/tuple/control_dependency_1"
  input: "gradients/add_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_6_grad/Sum"
  input: "gradients/add_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/concat_2_grad/tuple/control_dependency_1"
  input: "gradients/add_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_6_grad/Sum_1"
  input: "gradients/add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_6_grad/Reshape"
  input: "^gradients/add_6_grad/Reshape_1"
}
node {
  name: "gradients/add_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_6_grad/Reshape"
  input: "^gradients/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_6_grad/Reshape_1"
  input: "^gradients/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_6_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_6_grad/Shape"
  op: "Shape"
  input: "Pad_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_6_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_6_grad/Shape"
  input: "Rconv3b/W/read"
  input: "gradients/add_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_6_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Pad_3"
  input: "gradients/Conv3D_6_grad/Shape_1"
  input: "gradients/add_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_6_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_6_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_6_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_6_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_6_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_6_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/Pad_3_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Pad_3_grad/stack"
  op: "Pack"
  input: "gradients/Pad_3_grad/Rank"
  input: "gradients/Pad_3_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Slice"
  op: "Slice"
  input: "Pad_3/paddings"
  input: "gradients/Pad_3_grad/Slice/begin"
  input: "gradients/Pad_3_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/Pad_3_grad/Slice"
  input: "gradients/Pad_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Shape"
  op: "Shape"
  input: "Relu_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Slice_1"
  op: "Slice"
  input: "gradients/Conv3D_6_grad/tuple/control_dependency"
  input: "gradients/Pad_3_grad/Reshape"
  input: "gradients/Pad_3_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Relu_5_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Pad_3_grad/Slice_1"
  input: "Relu_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_1_grad/Shape"
  op: "Shape"
  input: "batchnorm_5/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_5/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_5/add_1_grad/Shape"
  input: "gradients/batchnorm_5/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_5_grad/ReluGrad"
  input: "gradients/batchnorm_5/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_5/add_1_grad/Sum"
  input: "gradients/batchnorm_5/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_5_grad/ReluGrad"
  input: "gradients/batchnorm_5/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_5/add_1_grad/Sum_1"
  input: "gradients/batchnorm_5/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_5/add_1_grad/Reshape"
  input: "^gradients/batchnorm_5/add_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_5/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_5/add_1_grad/Reshape"
  input: "^gradients/batchnorm_5/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_5/add_1_grad/Reshape_1"
  input: "^gradients/batchnorm_5/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_1_grad/Shape"
  op: "Shape"
  input: "add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_5/mul_1_grad/Shape"
  input: "gradients/batchnorm_5/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_5/add_1_grad/tuple/control_dependency"
  input: "batchnorm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_5/mul_1_grad/Mul"
  input: "gradients/batchnorm_5/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_5/mul_1_grad/Sum"
  input: "gradients/batchnorm_5/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_1_grad/Mul_1"
  op: "Mul"
  input: "add_5"
  input: "gradients/batchnorm_5/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/batchnorm_5/mul_1_grad/Mul_1"
  input: "gradients/batchnorm_5/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_5/mul_1_grad/Sum_1"
  input: "gradients/batchnorm_5/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_5/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_5/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_5/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_5/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_5/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_5/mul_1_grad/Reshape_1"
  input: "^gradients/batchnorm_5/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/sub_grad/Neg"
  op: "Neg"
  input: "gradients/batchnorm_5/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_5/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_5/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_5/sub_grad/Neg"
}
node {
  name: "gradients/batchnorm_5/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_5/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_5/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_5/sub_grad/Neg"
  input: "^gradients/batchnorm_5/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_5/sub_grad/tuple/control_dependency_1"
  input: "batchnorm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/batchnorm_5/sub_grad/tuple/control_dependency_1"
  input: "Rbn3b/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_5/mul_2_grad/Mul"
  input: "^gradients/batchnorm_5/mul_2_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_5/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_5/mul_2_grad/Mul"
  input: "^gradients/batchnorm_5/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_5/mul_2_grad/Mul_1"
  input: "^gradients/batchnorm_5/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_5/mul_2_grad/tuple/control_dependency"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn3b/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/Rbn3b/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn3b/cond/Merge_grad/cond_grad"
  input: "^gradients/Rbn3b/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn3b/cond/Merge_grad/cond_grad:1"
  input: "^gradients/Rbn3b/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/batchnorm_5/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/batchnorm_5/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_25"
  input: "Rbn3b/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_25"
  input: "batchnorm_5/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_5/mul_grad/Mul"
  input: "^gradients/batchnorm_5/mul_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_5/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_5/mul_grad/Mul"
  input: "^gradients/batchnorm_5/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_5/mul_grad/Mul_1"
  input: "^gradients/batchnorm_5/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batchnorm_5/Rsqrt"
  input: "gradients/batchnorm_5/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn3b/cond/Merge_grad/tuple/control_dependency_1"
  input: "gradients/Rbn3b/cond/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_5/add_grad/BroadcastGradientArgs/s0"
  input: "gradients/batchnorm_5/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_5/Rsqrt_grad/RsqrtGrad"
  input: "gradients/batchnorm_5/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_5/add_grad/Sum"
  input: "gradients/batchnorm_5/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_5/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_5/add_grad/Reshape"
}
node {
  name: "gradients/batchnorm_5/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_5/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_5/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_5/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_5/add_grad/Reshape"
  input: "^gradients/batchnorm_5/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_5/add_grad/tuple/control_dependency"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn3b/cond/Merge_1_grad/cond_grad"
}
node {
  name: "gradients/Rbn3b/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn3b/cond/Merge_1_grad/cond_grad"
  input: "^gradients/Rbn3b/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn3b/cond/Merge_1_grad/cond_grad:1"
  input: "^gradients/Rbn3b/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn3b/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/Rbn3b/cond/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/variance_grad/Shape"
  op: "Shape"
  input: "Rbn3b/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/variance_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn3b/cond/moments/Squeeze_1_grad/Reshape"
  input: "gradients/Rbn3b/cond/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/variance_grad/Shape_1"
  op: "Shape"
  input: "Rbn3b/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/variance_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn3b/cond/moments/variance_grad/Shape_1"
  input: "gradients/Rbn3b/cond/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn3b/cond/moments/variance_grad/Shape_2"
  input: "gradients/Rbn3b/cond/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn3b/cond/moments/variance_grad/Prod_1"
  input: "gradients/Rbn3b/cond/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn3b/cond/moments/variance_grad/Prod"
  input: "gradients/Rbn3b/cond/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn3b/cond/moments/variance_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn3b/cond/moments/variance_grad/BroadcastTo"
  input: "gradients/Rbn3b/cond/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Rbn3b/cond/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/scalar"
  input: "gradients/Rbn3b/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Rbn3b/cond/moments/mean/Switch:1"
  input: "Rbn3b/cond/moments/StopGradient"
  input: "^gradients/Rbn3b/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Mul"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Rbn3b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "Rbn3b/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Shape"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Sum"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn3b/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn3b/cond/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/Rbn3b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn3b/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn3b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn3b/cond/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean_grad/Shape"
  op: "Shape"
  input: "Rbn3b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn3b/cond/moments/Squeeze_grad/Reshape"
  input: "gradients/Rbn3b/cond/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean_grad/Shape_1"
  op: "Shape"
  input: "Rbn3b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn3b/cond/moments/mean_grad/Shape_1"
  input: "gradients/Rbn3b/cond/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn3b/cond/moments/mean_grad/Shape_2"
  input: "gradients/Rbn3b/cond/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn3b/cond/moments/mean_grad/Prod_1"
  input: "gradients/Rbn3b/cond/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn3b/cond/moments/mean_grad/Prod"
  input: "gradients/Rbn3b/cond/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn3b/cond/moments/mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn3b/cond/moments/mean_grad/BroadcastTo"
  input: "gradients/Rbn3b/cond/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/Rbn3b/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/Rbn3b/cond/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn3b/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Switch_7"
  op: "Switch"
  input: "add_5"
  input: "Rbn3b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_7"
  op: "Identity"
  input: "gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_8"
  op: "Shape"
  input: "gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_7/Const"
  op: "Const"
  input: "^gradients/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_7"
  op: "Fill"
  input: "gradients/Shape_8"
  input: "gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3b/cond/moments/mean/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_7"
  input: "gradients/AddN_26"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/batchnorm_5/mul_1_grad/tuple/control_dependency"
  input: "gradients/Rbn3b/cond/moments/mean/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_5/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_5_grad/Shape"
  op: "Shape"
  input: "Conv3D_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_5_grad/Shape_1"
  op: "Shape"
  input: "Rconv3a/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_5_grad/Shape"
  input: "gradients/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_27"
  input: "gradients/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_5_grad/Sum"
  input: "gradients/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_27"
  input: "gradients/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_5_grad/Sum_1"
  input: "gradients/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_5_grad/Reshape"
  input: "^gradients/add_5_grad/Reshape_1"
}
node {
  name: "gradients/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_5_grad/Reshape"
  input: "^gradients/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_5_grad/Reshape_1"
  input: "^gradients/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_5_grad/Shape"
  op: "Shape"
  input: "Relu_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_5_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_5_grad/Shape"
  input: "Rconv3a/W/read"
  input: "gradients/add_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_5_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_5_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Relu_4"
  input: "gradients/Conv3D_5_grad/Shape_1"
  input: "gradients/add_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_5_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_5_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_5_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_5_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_5_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_5_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Relu_4_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv3D_5_grad/tuple/control_dependency"
  input: "Relu_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_1_grad/Shape"
  op: "Shape"
  input: "batchnorm_4/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_4/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_4/add_1_grad/Shape"
  input: "gradients/batchnorm_4/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_4_grad/ReluGrad"
  input: "gradients/batchnorm_4/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_4/add_1_grad/Sum"
  input: "gradients/batchnorm_4/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_4_grad/ReluGrad"
  input: "gradients/batchnorm_4/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_4/add_1_grad/Sum_1"
  input: "gradients/batchnorm_4/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_4/add_1_grad/Reshape"
  input: "^gradients/batchnorm_4/add_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_4/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_4/add_1_grad/Reshape"
  input: "^gradients/batchnorm_4/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_4/add_1_grad/Reshape_1"
  input: "^gradients/batchnorm_4/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_1_grad/Shape"
  op: "Shape"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_4/mul_1_grad/Shape"
  input: "gradients/batchnorm_4/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_4/add_1_grad/tuple/control_dependency"
  input: "batchnorm_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_4/mul_1_grad/Mul"
  input: "gradients/batchnorm_4/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_4/mul_1_grad/Sum"
  input: "gradients/batchnorm_4/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_1_grad/Mul_1"
  op: "Mul"
  input: "concat_1"
  input: "gradients/batchnorm_4/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/batchnorm_4/mul_1_grad/Mul_1"
  input: "gradients/batchnorm_4/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_4/mul_1_grad/Sum_1"
  input: "gradients/batchnorm_4/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_4/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_4/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_4/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_4/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_4/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_4/mul_1_grad/Reshape_1"
  input: "^gradients/batchnorm_4/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_4/sub_grad/Neg"
  op: "Neg"
  input: "gradients/batchnorm_4/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_4/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_4/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_4/sub_grad/Neg"
}
node {
  name: "gradients/batchnorm_4/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_4/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_4/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_4/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_4/sub_grad/Neg"
  input: "^gradients/batchnorm_4/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_4/sub_grad/tuple/control_dependency_1"
  input: "batchnorm_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/batchnorm_4/sub_grad/tuple/control_dependency_1"
  input: "Rbn3a/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_4/mul_2_grad/Mul"
  input: "^gradients/batchnorm_4/mul_2_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_4/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_4/mul_2_grad/Mul"
  input: "^gradients/batchnorm_4/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_4/mul_2_grad/Mul_1"
  input: "^gradients/batchnorm_4/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_4/mul_2_grad/tuple/control_dependency"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn3a/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/Rbn3a/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn3a/cond/Merge_grad/cond_grad"
  input: "^gradients/Rbn3a/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn3a/cond/Merge_grad/cond_grad:1"
  input: "^gradients/Rbn3a/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/batchnorm_4/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/batchnorm_4/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_28"
  input: "Rbn3a/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_28"
  input: "batchnorm_4/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_4/mul_grad/Mul"
  input: "^gradients/batchnorm_4/mul_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_4/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_4/mul_grad/Mul"
  input: "^gradients/batchnorm_4/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_4/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_4/mul_grad/Mul_1"
  input: "^gradients/batchnorm_4/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_4/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batchnorm_4/Rsqrt"
  input: "gradients/batchnorm_4/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn3a/cond/Merge_grad/tuple/control_dependency_1"
  input: "gradients/Rbn3a/cond/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_4/Rsqrt_grad/RsqrtGrad"
  input: "gradients/batchnorm_4/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_4/add_grad/Sum"
  input: "gradients/batchnorm_4/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_4/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_4/add_grad/Reshape"
}
node {
  name: "gradients/batchnorm_4/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_4/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_4/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_4/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_4/add_grad/Reshape"
  input: "^gradients/batchnorm_4/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_4/add_grad/tuple/control_dependency"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn3a/cond/Merge_1_grad/cond_grad"
}
node {
  name: "gradients/Rbn3a/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn3a/cond/Merge_1_grad/cond_grad"
  input: "^gradients/Rbn3a/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn3a/cond/Merge_1_grad/cond_grad:1"
  input: "^gradients/Rbn3a/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_4/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn3a/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/Rbn3a/cond/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/variance_grad/Shape"
  op: "Shape"
  input: "Rbn3a/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/variance_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn3a/cond/moments/Squeeze_1_grad/Reshape"
  input: "gradients/Rbn3a/cond/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/variance_grad/Shape_1"
  op: "Shape"
  input: "Rbn3a/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/variance_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn3a/cond/moments/variance_grad/Shape_1"
  input: "gradients/Rbn3a/cond/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn3a/cond/moments/variance_grad/Shape_2"
  input: "gradients/Rbn3a/cond/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn3a/cond/moments/variance_grad/Prod_1"
  input: "gradients/Rbn3a/cond/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn3a/cond/moments/variance_grad/Prod"
  input: "gradients/Rbn3a/cond/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn3a/cond/moments/variance_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn3a/cond/moments/variance_grad/BroadcastTo"
  input: "gradients/Rbn3a/cond/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Rbn3a/cond/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/scalar"
  input: "gradients/Rbn3a/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Rbn3a/cond/moments/mean/Switch:1"
  input: "Rbn3a/cond/moments/StopGradient"
  input: "^gradients/Rbn3a/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Mul"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Rbn3a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "Rbn3a/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Shape"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Sum"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn3a/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn3a/cond/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/Rbn3a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn3a/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn3a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn3a/cond/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean_grad/Shape"
  op: "Shape"
  input: "Rbn3a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn3a/cond/moments/Squeeze_grad/Reshape"
  input: "gradients/Rbn3a/cond/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean_grad/Shape_1"
  op: "Shape"
  input: "Rbn3a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn3a/cond/moments/mean_grad/Shape_1"
  input: "gradients/Rbn3a/cond/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn3a/cond/moments/mean_grad/Shape_2"
  input: "gradients/Rbn3a/cond/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn3a/cond/moments/mean_grad/Prod_1"
  input: "gradients/Rbn3a/cond/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn3a/cond/moments/mean_grad/Prod"
  input: "gradients/Rbn3a/cond/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn3a/cond/moments/mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn3a/cond/moments/mean_grad/BroadcastTo"
  input: "gradients/Rbn3a/cond/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/Rbn3a/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/Rbn3a/cond/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn3a/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Switch_8"
  op: "Switch"
  input: "concat_1"
  input: "Rbn3a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_8"
  op: "Identity"
  input: "gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_9"
  op: "Shape"
  input: "gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_8/Const"
  op: "Const"
  input: "^gradients/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_8"
  op: "Fill"
  input: "gradients/Shape_9"
  input: "gradients/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn3a/cond/moments/mean/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_8"
  input: "gradients/AddN_29"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/concat_2_grad/tuple/control_dependency"
  input: "gradients/batchnorm_4/mul_1_grad/tuple/control_dependency"
  input: "gradients/Rbn3a/cond/moments/mean/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_2_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/mod"
  op: "FloorMod"
  input: "concat_1/axis"
  input: "gradients/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_1_grad/Shape"
  op: "Shape"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "concat"
  input: "add_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_1_grad/mod"
  input: "gradients/concat_1_grad/ShapeN"
  input: "gradients/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/AddN_30"
  input: "gradients/concat_1_grad/ConcatOffset"
  input: "gradients/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/AddN_30"
  input: "gradients/concat_1_grad/ConcatOffset:1"
  input: "gradients/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_1_grad/Slice"
  input: "^gradients/concat_1_grad/Slice_1"
}
node {
  name: "gradients/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_1_grad/Slice"
  input: "^gradients/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_1_grad/Slice_1"
  input: "^gradients/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_1_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/add_4_grad/Shape"
  op: "Shape"
  input: "Conv3D_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_4_grad/Shape_1"
  op: "Shape"
  input: "Rconv2b/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_4_grad/Shape"
  input: "gradients/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/concat_1_grad/tuple/control_dependency_1"
  input: "gradients/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_4_grad/Sum"
  input: "gradients/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/concat_1_grad/tuple/control_dependency_1"
  input: "gradients/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_4_grad/Sum_1"
  input: "gradients/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_4_grad/Reshape"
  input: "^gradients/add_4_grad/Reshape_1"
}
node {
  name: "gradients/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_4_grad/Reshape"
  input: "^gradients/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_4_grad/Reshape_1"
  input: "^gradients/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_4_grad/Shape"
  op: "Shape"
  input: "Pad_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_4_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_4_grad/Shape"
  input: "Rconv2b/W/read"
  input: "gradients/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_4_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Pad_2"
  input: "gradients/Conv3D_4_grad/Shape_1"
  input: "gradients/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_4_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_4_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_4_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_4_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_4_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_4_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/Pad_2_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Pad_2_grad/stack"
  op: "Pack"
  input: "gradients/Pad_2_grad/Rank"
  input: "gradients/Pad_2_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Slice"
  op: "Slice"
  input: "Pad_2/paddings"
  input: "gradients/Pad_2_grad/Slice/begin"
  input: "gradients/Pad_2_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/Pad_2_grad/Slice"
  input: "gradients/Pad_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Shape"
  op: "Shape"
  input: "Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/Conv3D_4_grad/tuple/control_dependency"
  input: "gradients/Pad_2_grad/Reshape"
  input: "gradients/Pad_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Pad_2_grad/Slice_1"
  input: "Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_1_grad/Shape"
  op: "Shape"
  input: "batchnorm_3/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_3/add_1_grad/Shape"
  input: "gradients/batchnorm_3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_3_grad/ReluGrad"
  input: "gradients/batchnorm_3/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_3/add_1_grad/Sum"
  input: "gradients/batchnorm_3/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_3_grad/ReluGrad"
  input: "gradients/batchnorm_3/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_3/add_1_grad/Sum_1"
  input: "gradients/batchnorm_3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_3/add_1_grad/Reshape"
  input: "^gradients/batchnorm_3/add_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_3/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_3/add_1_grad/Reshape"
  input: "^gradients/batchnorm_3/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_3/add_1_grad/Reshape_1"
  input: "^gradients/batchnorm_3/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_1_grad/Shape"
  op: "Shape"
  input: "add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_3/mul_1_grad/Shape"
  input: "gradients/batchnorm_3/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_3/add_1_grad/tuple/control_dependency"
  input: "batchnorm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_3/mul_1_grad/Mul"
  input: "gradients/batchnorm_3/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_3/mul_1_grad/Sum"
  input: "gradients/batchnorm_3/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_1_grad/Mul_1"
  op: "Mul"
  input: "add_3"
  input: "gradients/batchnorm_3/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/batchnorm_3/mul_1_grad/Mul_1"
  input: "gradients/batchnorm_3/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_3/mul_1_grad/Sum_1"
  input: "gradients/batchnorm_3/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_3/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_3/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_3/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_3/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_3/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_3/mul_1_grad/Reshape_1"
  input: "^gradients/batchnorm_3/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/sub_grad/Neg"
  op: "Neg"
  input: "gradients/batchnorm_3/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_3/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_3/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_3/sub_grad/Neg"
}
node {
  name: "gradients/batchnorm_3/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_3/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_3/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_3/sub_grad/Neg"
  input: "^gradients/batchnorm_3/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_3/sub_grad/tuple/control_dependency_1"
  input: "batchnorm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/batchnorm_3/sub_grad/tuple/control_dependency_1"
  input: "Rbn2b/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_3/mul_2_grad/Mul"
  input: "^gradients/batchnorm_3/mul_2_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_3/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_3/mul_2_grad/Mul"
  input: "^gradients/batchnorm_3/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_3/mul_2_grad/Mul_1"
  input: "^gradients/batchnorm_3/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_3/mul_2_grad/tuple/control_dependency"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn2b/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/Rbn2b/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn2b/cond/Merge_grad/cond_grad"
  input: "^gradients/Rbn2b/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn2b/cond/Merge_grad/cond_grad:1"
  input: "^gradients/Rbn2b/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/batchnorm_3/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/batchnorm_3/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_31"
  input: "Rbn2b/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_31"
  input: "batchnorm_3/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_3/mul_grad/Mul"
  input: "^gradients/batchnorm_3/mul_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_3/mul_grad/Mul"
  input: "^gradients/batchnorm_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_3/mul_grad/Mul_1"
  input: "^gradients/batchnorm_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batchnorm_3/Rsqrt"
  input: "gradients/batchnorm_3/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn2b/cond/Merge_grad/tuple/control_dependency_1"
  input: "gradients/Rbn2b/cond/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_3/add_grad/BroadcastGradientArgs/s0"
  input: "gradients/batchnorm_3/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_3/Rsqrt_grad/RsqrtGrad"
  input: "gradients/batchnorm_3/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_3/add_grad/Sum"
  input: "gradients/batchnorm_3/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_3/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_3/add_grad/Reshape"
}
node {
  name: "gradients/batchnorm_3/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_3/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_3/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_3/add_grad/Reshape"
  input: "^gradients/batchnorm_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_3/add_grad/tuple/control_dependency"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn2b/cond/Merge_1_grad/cond_grad"
}
node {
  name: "gradients/Rbn2b/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn2b/cond/Merge_1_grad/cond_grad"
  input: "^gradients/Rbn2b/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn2b/cond/Merge_1_grad/cond_grad:1"
  input: "^gradients/Rbn2b/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn2b/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/Rbn2b/cond/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/variance_grad/Shape"
  op: "Shape"
  input: "Rbn2b/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/variance_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn2b/cond/moments/Squeeze_1_grad/Reshape"
  input: "gradients/Rbn2b/cond/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/variance_grad/Shape_1"
  op: "Shape"
  input: "Rbn2b/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/variance_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn2b/cond/moments/variance_grad/Shape_1"
  input: "gradients/Rbn2b/cond/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn2b/cond/moments/variance_grad/Shape_2"
  input: "gradients/Rbn2b/cond/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn2b/cond/moments/variance_grad/Prod_1"
  input: "gradients/Rbn2b/cond/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn2b/cond/moments/variance_grad/Prod"
  input: "gradients/Rbn2b/cond/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn2b/cond/moments/variance_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn2b/cond/moments/variance_grad/BroadcastTo"
  input: "gradients/Rbn2b/cond/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Rbn2b/cond/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/scalar"
  input: "gradients/Rbn2b/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Rbn2b/cond/moments/mean/Switch:1"
  input: "Rbn2b/cond/moments/StopGradient"
  input: "^gradients/Rbn2b/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Mul"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Rbn2b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "Rbn2b/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Shape"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Sum"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn2b/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn2b/cond/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/Rbn2b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn2b/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn2b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn2b/cond/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean_grad/Shape"
  op: "Shape"
  input: "Rbn2b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn2b/cond/moments/Squeeze_grad/Reshape"
  input: "gradients/Rbn2b/cond/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean_grad/Shape_1"
  op: "Shape"
  input: "Rbn2b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn2b/cond/moments/mean_grad/Shape_1"
  input: "gradients/Rbn2b/cond/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn2b/cond/moments/mean_grad/Shape_2"
  input: "gradients/Rbn2b/cond/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn2b/cond/moments/mean_grad/Prod_1"
  input: "gradients/Rbn2b/cond/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn2b/cond/moments/mean_grad/Prod"
  input: "gradients/Rbn2b/cond/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn2b/cond/moments/mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn2b/cond/moments/mean_grad/BroadcastTo"
  input: "gradients/Rbn2b/cond/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/Rbn2b/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/Rbn2b/cond/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn2b/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Switch_9"
  op: "Switch"
  input: "add_3"
  input: "Rbn2b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_9"
  op: "Identity"
  input: "gradients/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_10"
  op: "Shape"
  input: "gradients/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_9/Const"
  op: "Const"
  input: "^gradients/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_9"
  op: "Fill"
  input: "gradients/Shape_10"
  input: "gradients/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2b/cond/moments/mean/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_9"
  input: "gradients/AddN_32"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_33"
  op: "AddN"
  input: "gradients/batchnorm_3/mul_1_grad/tuple/control_dependency"
  input: "gradients/Rbn2b/cond/moments/mean/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_3/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/Shape"
  op: "Shape"
  input: "Conv3D_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_3_grad/Shape_1"
  op: "Shape"
  input: "Rconv2a/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_3_grad/Shape"
  input: "gradients/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_33"
  input: "gradients/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_3_grad/Sum"
  input: "gradients/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_33"
  input: "gradients/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_3_grad/Sum_1"
  input: "gradients/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_3_grad/Reshape"
  input: "^gradients/add_3_grad/Reshape_1"
}
node {
  name: "gradients/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_3_grad/Reshape"
  input: "^gradients/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_3_grad/Reshape_1"
  input: "^gradients/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_3_grad/Shape"
  op: "Shape"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_3_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_3_grad/Shape"
  input: "Rconv2a/W/read"
  input: "gradients/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_3_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Relu_2"
  input: "gradients/Conv3D_3_grad/Shape_1"
  input: "gradients/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_3_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_3_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_3_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_3_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_3_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_3_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv3D_3_grad/tuple/control_dependency"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_1_grad/Shape"
  op: "Shape"
  input: "batchnorm_2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_2/add_1_grad/Shape"
  input: "gradients/batchnorm_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_2_grad/ReluGrad"
  input: "gradients/batchnorm_2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_2/add_1_grad/Sum"
  input: "gradients/batchnorm_2/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_2_grad/ReluGrad"
  input: "gradients/batchnorm_2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_2/add_1_grad/Sum_1"
  input: "gradients/batchnorm_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_2/add_1_grad/Reshape"
  input: "^gradients/batchnorm_2/add_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_2/add_1_grad/Reshape"
  input: "^gradients/batchnorm_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_2/add_1_grad/Reshape_1"
  input: "^gradients/batchnorm_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_1_grad/Shape"
  op: "Shape"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_2/mul_1_grad/Shape"
  input: "gradients/batchnorm_2/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_2/add_1_grad/tuple/control_dependency"
  input: "batchnorm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_2/mul_1_grad/Mul"
  input: "gradients/batchnorm_2/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_2/mul_1_grad/Sum"
  input: "gradients/batchnorm_2/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_1_grad/Mul_1"
  op: "Mul"
  input: "concat"
  input: "gradients/batchnorm_2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/batchnorm_2/mul_1_grad/Mul_1"
  input: "gradients/batchnorm_2/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_2/mul_1_grad/Sum_1"
  input: "gradients/batchnorm_2/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_2/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_2/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_2/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_2/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_2/mul_1_grad/Reshape_1"
  input: "^gradients/batchnorm_2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_2/sub_grad/Neg"
  op: "Neg"
  input: "gradients/batchnorm_2/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_2/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_2/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_2/sub_grad/Neg"
}
node {
  name: "gradients/batchnorm_2/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_2/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_2/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_2/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_2/sub_grad/Neg"
  input: "^gradients/batchnorm_2/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_2/sub_grad/tuple/control_dependency_1"
  input: "batchnorm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/batchnorm_2/sub_grad/tuple/control_dependency_1"
  input: "Rbn2a/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_2/mul_2_grad/Mul"
  input: "^gradients/batchnorm_2/mul_2_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_2/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_2/mul_2_grad/Mul"
  input: "^gradients/batchnorm_2/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_2/mul_2_grad/Mul_1"
  input: "^gradients/batchnorm_2/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_2/mul_2_grad/tuple/control_dependency"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn2a/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/Rbn2a/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn2a/cond/Merge_grad/cond_grad"
  input: "^gradients/Rbn2a/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn2a/cond/Merge_grad/cond_grad:1"
  input: "^gradients/Rbn2a/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_34"
  op: "AddN"
  input: "gradients/batchnorm_2/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/batchnorm_2/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_34"
  input: "Rbn2a/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_34"
  input: "batchnorm_2/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_2/mul_grad/Mul"
  input: "^gradients/batchnorm_2/mul_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_2/mul_grad/Mul"
  input: "^gradients/batchnorm_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_2/mul_grad/Mul_1"
  input: "^gradients/batchnorm_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_2/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batchnorm_2/Rsqrt"
  input: "gradients/batchnorm_2/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn2a/cond/Merge_grad/tuple/control_dependency_1"
  input: "gradients/Rbn2a/cond/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_2/Rsqrt_grad/RsqrtGrad"
  input: "gradients/batchnorm_2/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_2/add_grad/Sum"
  input: "gradients/batchnorm_2/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_2/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_2/add_grad/Reshape"
}
node {
  name: "gradients/batchnorm_2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_2/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_2/add_grad/Reshape"
  input: "^gradients/batchnorm_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_2/add_grad/tuple/control_dependency"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn2a/cond/Merge_1_grad/cond_grad"
}
node {
  name: "gradients/Rbn2a/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn2a/cond/Merge_1_grad/cond_grad"
  input: "^gradients/Rbn2a/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn2a/cond/Merge_1_grad/cond_grad:1"
  input: "^gradients/Rbn2a/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_2/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn2a/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/Rbn2a/cond/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/variance_grad/Shape"
  op: "Shape"
  input: "Rbn2a/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/variance_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn2a/cond/moments/Squeeze_1_grad/Reshape"
  input: "gradients/Rbn2a/cond/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/variance_grad/Shape_1"
  op: "Shape"
  input: "Rbn2a/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/variance_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn2a/cond/moments/variance_grad/Shape_1"
  input: "gradients/Rbn2a/cond/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn2a/cond/moments/variance_grad/Shape_2"
  input: "gradients/Rbn2a/cond/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn2a/cond/moments/variance_grad/Prod_1"
  input: "gradients/Rbn2a/cond/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn2a/cond/moments/variance_grad/Prod"
  input: "gradients/Rbn2a/cond/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn2a/cond/moments/variance_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn2a/cond/moments/variance_grad/BroadcastTo"
  input: "gradients/Rbn2a/cond/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Rbn2a/cond/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/scalar"
  input: "gradients/Rbn2a/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Rbn2a/cond/moments/mean/Switch:1"
  input: "Rbn2a/cond/moments/StopGradient"
  input: "^gradients/Rbn2a/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Mul"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Rbn2a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "Rbn2a/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Shape"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Sum"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn2a/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn2a/cond/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/Rbn2a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn2a/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn2a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn2a/cond/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean_grad/Shape"
  op: "Shape"
  input: "Rbn2a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn2a/cond/moments/Squeeze_grad/Reshape"
  input: "gradients/Rbn2a/cond/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean_grad/Shape_1"
  op: "Shape"
  input: "Rbn2a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn2a/cond/moments/mean_grad/Shape_1"
  input: "gradients/Rbn2a/cond/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn2a/cond/moments/mean_grad/Shape_2"
  input: "gradients/Rbn2a/cond/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn2a/cond/moments/mean_grad/Prod_1"
  input: "gradients/Rbn2a/cond/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn2a/cond/moments/mean_grad/Prod"
  input: "gradients/Rbn2a/cond/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn2a/cond/moments/mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn2a/cond/moments/mean_grad/BroadcastTo"
  input: "gradients/Rbn2a/cond/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_35"
  op: "AddN"
  input: "gradients/Rbn2a/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/Rbn2a/cond/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn2a/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Switch_10"
  op: "Switch"
  input: "concat"
  input: "Rbn2a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_10"
  op: "Identity"
  input: "gradients/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_11"
  op: "Shape"
  input: "gradients/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_10/Const"
  op: "Const"
  input: "^gradients/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_10"
  op: "Fill"
  input: "gradients/Shape_11"
  input: "gradients/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn2a/cond/moments/mean/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_10"
  input: "gradients/AddN_35"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_36"
  op: "AddN"
  input: "gradients/concat_1_grad/tuple/control_dependency"
  input: "gradients/batchnorm_2/mul_1_grad/tuple/control_dependency"
  input: "gradients/Rbn2a/cond/moments/mean/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/concat_grad/mod"
  op: "FloorMod"
  input: "concat/axis"
  input: "gradients/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/Shape"
  op: "Shape"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/ShapeN"
  op: "ShapeN"
  input: "add"
  input: "add_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_grad/mod"
  input: "gradients/concat_grad/ShapeN"
  input: "gradients/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_grad/Slice"
  op: "Slice"
  input: "gradients/AddN_36"
  input: "gradients/concat_grad/ConcatOffset"
  input: "gradients/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/AddN_36"
  input: "gradients/concat_grad/ConcatOffset:1"
  input: "gradients/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_grad/Slice"
  input: "^gradients/concat_grad/Slice_1"
}
node {
  name: "gradients/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_grad/Slice"
  input: "^gradients/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_grad/Slice_1"
  input: "^gradients/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/Shape"
  op: "Shape"
  input: "Conv3D_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_2_grad/Shape_1"
  op: "Shape"
  input: "Rconv1b/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_2_grad/Shape"
  input: "gradients/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/concat_grad/tuple/control_dependency_1"
  input: "gradients/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_2_grad/Sum"
  input: "gradients/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/concat_grad/tuple/control_dependency_1"
  input: "gradients/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_2_grad/Sum_1"
  input: "gradients/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_2_grad/Reshape"
  input: "^gradients/add_2_grad/Reshape_1"
}
node {
  name: "gradients/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_2_grad/Reshape"
  input: "^gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_2_grad/Reshape_1"
  input: "^gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_2_grad/Shape"
  op: "Shape"
  input: "Pad_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_2_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_2_grad/Shape"
  input: "Rconv1b/W/read"
  input: "gradients/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_2_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Pad_1"
  input: "gradients/Conv3D_2_grad/Shape_1"
  input: "gradients/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_2_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_2_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_2_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_2_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_2_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_2_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/Pad_1_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Pad_1_grad/stack"
  op: "Pack"
  input: "gradients/Pad_1_grad/Rank"
  input: "gradients/Pad_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Slice"
  op: "Slice"
  input: "Pad_1/paddings"
  input: "gradients/Pad_1_grad/Slice/begin"
  input: "gradients/Pad_1_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Pad_1_grad/Slice"
  input: "gradients/Pad_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Shape"
  op: "Shape"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/Conv3D_2_grad/tuple/control_dependency"
  input: "gradients/Pad_1_grad/Reshape"
  input: "gradients/Pad_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Pad_1_grad/Slice_1"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_1_grad/Shape"
  op: "Shape"
  input: "batchnorm_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_1/add_1_grad/Shape"
  input: "gradients/batchnorm_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_1_grad/ReluGrad"
  input: "gradients/batchnorm_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_1/add_1_grad/Sum"
  input: "gradients/batchnorm_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_1_grad/ReluGrad"
  input: "gradients/batchnorm_1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_1/add_1_grad/Sum_1"
  input: "gradients/batchnorm_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_1/add_1_grad/Reshape"
  input: "^gradients/batchnorm_1/add_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_1/add_1_grad/Reshape"
  input: "^gradients/batchnorm_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_1/add_1_grad/Reshape_1"
  input: "^gradients/batchnorm_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_1_grad/Shape"
  op: "Shape"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_1/mul_1_grad/Shape"
  input: "gradients/batchnorm_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_1/add_1_grad/tuple/control_dependency"
  input: "batchnorm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_1/mul_1_grad/Mul"
  input: "gradients/batchnorm_1/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_1/mul_1_grad/Sum"
  input: "gradients/batchnorm_1/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "add_1"
  input: "gradients/batchnorm_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/batchnorm_1/mul_1_grad/Mul_1"
  input: "gradients/batchnorm_1/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm_1/mul_1_grad/Sum_1"
  input: "gradients/batchnorm_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_1/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_1/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm_1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_1/mul_1_grad/Reshape"
  input: "^gradients/batchnorm_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_1/mul_1_grad/Reshape_1"
  input: "^gradients/batchnorm_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_1/sub_grad/Neg"
}
node {
  name: "gradients/batchnorm_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_1/sub_grad/Neg"
  input: "^gradients/batchnorm_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm_1/sub_grad/tuple/control_dependency_1"
  input: "batchnorm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/batchnorm_1/sub_grad/tuple/control_dependency_1"
  input: "Rbn1b/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_1/mul_2_grad/Mul"
  input: "^gradients/batchnorm_1/mul_2_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_1/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_1/mul_2_grad/Mul"
  input: "^gradients/batchnorm_1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_1/mul_2_grad/Mul_1"
  input: "^gradients/batchnorm_1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_1/mul_2_grad/tuple/control_dependency"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn1b/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/Rbn1b/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn1b/cond/Merge_grad/cond_grad"
  input: "^gradients/Rbn1b/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn1b/cond/Merge_grad/cond_grad:1"
  input: "^gradients/Rbn1b/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_37"
  op: "AddN"
  input: "gradients/batchnorm_1/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/batchnorm_1/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_37"
  input: "Rbn1b/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_37"
  input: "batchnorm_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_1/mul_grad/Mul"
  input: "^gradients/batchnorm_1/mul_grad/Mul_1"
}
node {
  name: "gradients/batchnorm_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_1/mul_grad/Mul"
  input: "^gradients/batchnorm_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_1/mul_grad/Mul_1"
  input: "^gradients/batchnorm_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batchnorm_1/Rsqrt"
  input: "gradients/batchnorm_1/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn1b/cond/Merge_grad/tuple/control_dependency_1"
  input: "gradients/Rbn1b/cond/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm_1/add_grad/BroadcastGradientArgs/s0"
  input: "gradients/batchnorm_1/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "gradients/batchnorm_1/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm_1/add_grad/Sum"
  input: "gradients/batchnorm_1/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_1/add_grad/Reshape"
}
node {
  name: "gradients/batchnorm_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/batchnorm_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm_1/add_grad/Reshape"
  input: "^gradients/batchnorm_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm_1/add_grad/tuple/control_dependency"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn1b/cond/Merge_1_grad/cond_grad"
}
node {
  name: "gradients/Rbn1b/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn1b/cond/Merge_1_grad/cond_grad"
  input: "^gradients/Rbn1b/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn1b/cond/Merge_1_grad/cond_grad:1"
  input: "^gradients/Rbn1b/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn1b/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/Rbn1b/cond/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/variance_grad/Shape"
  op: "Shape"
  input: "Rbn1b/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/variance_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn1b/cond/moments/Squeeze_1_grad/Reshape"
  input: "gradients/Rbn1b/cond/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/variance_grad/Shape_1"
  op: "Shape"
  input: "Rbn1b/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/variance_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn1b/cond/moments/variance_grad/Shape_1"
  input: "gradients/Rbn1b/cond/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn1b/cond/moments/variance_grad/Shape_2"
  input: "gradients/Rbn1b/cond/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn1b/cond/moments/variance_grad/Prod_1"
  input: "gradients/Rbn1b/cond/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn1b/cond/moments/variance_grad/Prod"
  input: "gradients/Rbn1b/cond/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn1b/cond/moments/variance_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn1b/cond/moments/variance_grad/BroadcastTo"
  input: "gradients/Rbn1b/cond/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Rbn1b/cond/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/scalar"
  input: "gradients/Rbn1b/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Rbn1b/cond/moments/mean/Switch:1"
  input: "Rbn1b/cond/moments/StopGradient"
  input: "^gradients/Rbn1b/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Mul"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Rbn1b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "Rbn1b/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Shape"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Sum"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn1b/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn1b/cond/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/Rbn1b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn1b/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn1b/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn1b/cond/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean_grad/Shape"
  op: "Shape"
  input: "Rbn1b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn1b/cond/moments/Squeeze_grad/Reshape"
  input: "gradients/Rbn1b/cond/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean_grad/Shape_1"
  op: "Shape"
  input: "Rbn1b/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn1b/cond/moments/mean_grad/Shape_1"
  input: "gradients/Rbn1b/cond/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn1b/cond/moments/mean_grad/Shape_2"
  input: "gradients/Rbn1b/cond/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn1b/cond/moments/mean_grad/Prod_1"
  input: "gradients/Rbn1b/cond/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn1b/cond/moments/mean_grad/Prod"
  input: "gradients/Rbn1b/cond/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn1b/cond/moments/mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn1b/cond/moments/mean_grad/BroadcastTo"
  input: "gradients/Rbn1b/cond/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_38"
  op: "AddN"
  input: "gradients/Rbn1b/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/Rbn1b/cond/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn1b/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Switch_11"
  op: "Switch"
  input: "add_1"
  input: "Rbn1b/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_11"
  op: "Identity"
  input: "gradients/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_12"
  op: "Shape"
  input: "gradients/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_11/Const"
  op: "Const"
  input: "^gradients/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_11"
  op: "Fill"
  input: "gradients/Shape_12"
  input: "gradients/zeros_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1b/cond/moments/mean/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_11"
  input: "gradients/AddN_38"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_39"
  op: "AddN"
  input: "gradients/batchnorm_1/mul_1_grad/tuple/control_dependency"
  input: "gradients/Rbn1b/cond/moments/mean/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm_1/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/Shape"
  op: "Shape"
  input: "Conv3D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_1_grad/Shape_1"
  op: "Shape"
  input: "Rconv1a/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_1_grad/Shape"
  input: "gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_39"
  input: "gradients/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_1_grad/Sum"
  input: "gradients/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_39"
  input: "gradients/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_1_grad/Sum_1"
  input: "gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_1_grad/Reshape"
  input: "^gradients/add_1_grad/Reshape_1"
}
node {
  name: "gradients/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_1_grad/Reshape"
  input: "^gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_1_grad/Reshape_1"
  input: "^gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_1_grad/Shape"
  op: "Shape"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_1_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_1_grad/Shape"
  input: "Rconv1a/W/read"
  input: "gradients/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_1_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Relu"
  input: "gradients/Conv3D_1_grad/Shape_1"
  input: "gradients/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_1_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_1_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_1_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_1_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_1_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_1_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "gradients/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv3D_1_grad/tuple/control_dependency"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm/add_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm/add_1_grad/Shape"
  input: "gradients/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_grad/ReluGrad"
  input: "gradients/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm/add_1_grad/Sum"
  input: "gradients/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_grad/ReluGrad"
  input: "gradients/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm/add_1_grad/Sum_1"
  input: "gradients/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm/add_1_grad/Reshape"
  input: "^gradients/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm/add_1_grad/Reshape"
  input: "^gradients/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm/mul_1_grad/Shape_1"
  op: "Shape"
  input: "batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/batchnorm/mul_1_grad/Shape"
  input: "gradients/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm/add_1_grad/tuple/control_dependency"
  input: "batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm/mul_1_grad/Mul"
  input: "gradients/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm/mul_1_grad/Sum"
  input: "gradients/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "add"
  input: "gradients/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm/sub_grad/Neg"
  input: "^gradients/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "Rbn1a/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm/mul_2_grad/Mul"
  input: "^gradients/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "gradients/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm/mul_2_grad/Mul"
  input: "^gradients/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn1a/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/Rbn1a/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn1a/cond/Merge_grad/cond_grad"
  input: "^gradients/Rbn1a/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn1a/cond/Merge_grad/cond_grad:1"
  input: "^gradients/Rbn1a/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_40"
  op: "AddN"
  input: "gradients/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_40"
  input: "Rbn1a/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_40"
  input: "batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm/mul_grad/Mul"
  input: "^gradients/batchnorm/mul_grad/Mul_1"
}
node {
  name: "gradients/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm/mul_grad/Mul"
  input: "^gradients/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm/mul_grad/Mul_1"
  input: "^gradients/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batchnorm/Rsqrt"
  input: "gradients/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn1a/cond/Merge_grad/tuple/control_dependency_1"
  input: "gradients/Rbn1a/cond/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/batchnorm/add_grad/Sum"
  input: "gradients/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm/add_grad/Reshape"
}
node {
  name: "gradients/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^gradients/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batchnorm/add_grad/Reshape"
  input: "^gradients/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "gradients/batchnorm/add_grad/tuple/control_dependency"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn1a/cond/Merge_1_grad/cond_grad"
}
node {
  name: "gradients/Rbn1a/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn1a/cond/Merge_1_grad/cond_grad"
  input: "^gradients/Rbn1a/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn1a/cond/Merge_1_grad/cond_grad:1"
  input: "^gradients/Rbn1a/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batchnorm/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn1a/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/Rbn1a/cond/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/variance_grad/Shape"
  op: "Shape"
  input: "Rbn1a/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/variance_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn1a/cond/moments/Squeeze_1_grad/Reshape"
  input: "gradients/Rbn1a/cond/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/variance_grad/Shape_1"
  op: "Shape"
  input: "Rbn1a/cond/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/variance_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn1a/cond/moments/variance_grad/Shape_1"
  input: "gradients/Rbn1a/cond/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn1a/cond/moments/variance_grad/Shape_2"
  input: "gradients/Rbn1a/cond/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn1a/cond/moments/variance_grad/Prod_1"
  input: "gradients/Rbn1a/cond/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn1a/cond/moments/variance_grad/Prod"
  input: "gradients/Rbn1a/cond/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn1a/cond/moments/variance_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn1a/cond/moments/variance_grad/BroadcastTo"
  input: "gradients/Rbn1a/cond/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/Rbn1a/cond/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/scalar"
  input: "gradients/Rbn1a/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Rbn1a/cond/moments/mean/Switch:1"
  input: "Rbn1a/cond/moments/StopGradient"
  input: "^gradients/Rbn1a/cond/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Mul"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Rbn1a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "Rbn1a/cond/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Shape"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Sum"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/mul_1"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Rbn1a/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn1a/cond/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/Rbn1a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn1a/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/Neg"
  input: "^gradients/Rbn1a/cond/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn1a/cond/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean_grad/Shape"
  op: "Shape"
  input: "Rbn1a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients/Rbn1a/cond/moments/Squeeze_grad/Reshape"
  input: "gradients/Rbn1a/cond/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean_grad/Shape_1"
  op: "Shape"
  input: "Rbn1a/cond/moments/mean/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/Rbn1a/cond/moments/mean_grad/Shape_1"
  input: "gradients/Rbn1a/cond/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Rbn1a/cond/moments/mean_grad/Shape_2"
  input: "gradients/Rbn1a/cond/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Rbn1a/cond/moments/mean_grad/Prod_1"
  input: "gradients/Rbn1a/cond/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Rbn1a/cond/moments/mean_grad/Prod"
  input: "gradients/Rbn1a/cond/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/Rbn1a/cond/moments/mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Rbn1a/cond/moments/mean_grad/BroadcastTo"
  input: "gradients/Rbn1a/cond/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_41"
  op: "AddN"
  input: "gradients/Rbn1a/cond/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/Rbn1a/cond/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Rbn1a/cond/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/Switch_12"
  op: "Switch"
  input: "add"
  input: "Rbn1a/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Identity_12"
  op: "Identity"
  input: "gradients/Switch_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_13"
  op: "Shape"
  input: "gradients/Switch_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_12/Const"
  op: "Const"
  input: "^gradients/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_12"
  op: "Fill"
  input: "gradients/Shape_13"
  input: "gradients/zeros_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Rbn1a/cond/moments/mean/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/zeros_12"
  input: "gradients/AddN_41"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_42"
  op: "AddN"
  input: "gradients/concat_grad/tuple/control_dependency"
  input: "gradients/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/Rbn1a/cond/moments/mean/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/add_grad/Shape"
  op: "Shape"
  input: "Conv3D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Shape_1"
  op: "Shape"
  input: "conv1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_grad/Shape"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_42"
  input: "gradients/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_grad/Sum"
  input: "gradients/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_42"
  input: "gradients/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_grad/Sum_1"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_grad/Reshape"
  input: "^gradients/add_grad/Reshape_1"
}
node {
  name: "gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_grad/Reshape"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_grad/Reshape_1"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_grad/Shape"
  op: "Shape"
  input: "Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv3D_grad/Conv3DBackpropInputV2"
  op: "Conv3DBackpropInputV2"
  input: "gradients/Conv3D_grad/Shape"
  input: "conv1/W/read"
  input: "gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_grad/Conv3DBackpropFilterV2"
  op: "Conv3DBackpropFilterV2"
  input: "Pad"
  input: "gradients/Conv3D_grad/Shape_1"
  input: "gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Conv3D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv3D_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_grad/Conv3DBackpropInputV2"
}
node {
  name: "gradients/Conv3D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv3D_grad/Conv3DBackpropInputV2"
  input: "^gradients/Conv3D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_grad/Conv3DBackpropInputV2"
      }
    }
  }
}
node {
  name: "gradients/Conv3D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv3D_grad/Conv3DBackpropFilterV2"
  input: "^gradients/Conv3D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv3D_grad/Conv3DBackpropFilterV2"
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
}
node {
  name: "conv1/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv1/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv1/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/W/Adam/Assign"
  op: "Assign"
  input: "conv1/W/Adam"
  input: "conv1/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/W/Adam/read"
  op: "Identity"
  input: "conv1/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
}
node {
  name: "conv1/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv1/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv1/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/W/Adam_1/Assign"
  op: "Assign"
  input: "conv1/W/Adam_1"
  input: "conv1/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/W/Adam_1/read"
  op: "Identity"
  input: "conv1/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
}
node {
  name: "conv1/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/b/Adam/Assign"
  op: "Assign"
  input: "conv1/b/Adam"
  input: "conv1/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/b/Adam/read"
  op: "Identity"
  input: "conv1/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
}
node {
  name: "conv1/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/b/Adam_1/Assign"
  op: "Assign"
  input: "conv1/b/Adam_1"
  input: "conv1/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/b/Adam_1/read"
  op: "Identity"
  input: "conv1/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
}
node {
  name: "Rbn1a/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1a/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1a/beta/Adam/Assign"
  op: "Assign"
  input: "Rbn1a/beta/Adam"
  input: "Rbn1a/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/beta/Adam/read"
  op: "Identity"
  input: "Rbn1a/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
}
node {
  name: "Rbn1a/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1a/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1a/beta/Adam_1/Assign"
  op: "Assign"
  input: "Rbn1a/beta/Adam_1"
  input: "Rbn1a/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/beta/Adam_1/read"
  op: "Identity"
  input: "Rbn1a/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
}
node {
  name: "Rbn1a/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1a/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1a/gamma/Adam/Assign"
  op: "Assign"
  input: "Rbn1a/gamma/Adam"
  input: "Rbn1a/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/gamma/Adam/read"
  op: "Identity"
  input: "Rbn1a/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
}
node {
  name: "Rbn1a/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1a/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1a/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Rbn1a/gamma/Adam_1"
  input: "Rbn1a/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1a/gamma/Adam_1/read"
  op: "Identity"
  input: "Rbn1a/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
}
node {
  name: "Rconv1a/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv1a/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv1a/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "Rconv1a/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "Rconv1a/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv1a/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv1a/W/Adam/Assign"
  op: "Assign"
  input: "Rconv1a/W/Adam"
  input: "Rconv1a/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv1a/W/Adam/read"
  op: "Identity"
  input: "Rconv1a/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
}
node {
  name: "Rconv1a/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv1a/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv1a/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Rconv1a/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Rconv1a/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv1a/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv1a/W/Adam_1/Assign"
  op: "Assign"
  input: "Rconv1a/W/Adam_1"
  input: "Rconv1a/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv1a/W/Adam_1/read"
  op: "Identity"
  input: "Rconv1a/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
}
node {
  name: "Rconv1a/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv1a/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv1a/b/Adam/Assign"
  op: "Assign"
  input: "Rconv1a/b/Adam"
  input: "Rconv1a/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv1a/b/Adam/read"
  op: "Identity"
  input: "Rconv1a/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
}
node {
  name: "Rconv1a/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv1a/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv1a/b/Adam_1/Assign"
  op: "Assign"
  input: "Rconv1a/b/Adam_1"
  input: "Rconv1a/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv1a/b/Adam_1/read"
  op: "Identity"
  input: "Rconv1a/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
}
node {
  name: "Rbn1b/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1b/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1b/beta/Adam/Assign"
  op: "Assign"
  input: "Rbn1b/beta/Adam"
  input: "Rbn1b/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/beta/Adam/read"
  op: "Identity"
  input: "Rbn1b/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
}
node {
  name: "Rbn1b/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1b/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1b/beta/Adam_1/Assign"
  op: "Assign"
  input: "Rbn1b/beta/Adam_1"
  input: "Rbn1b/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/beta/Adam_1/read"
  op: "Identity"
  input: "Rbn1b/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
}
node {
  name: "Rbn1b/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1b/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1b/gamma/Adam/Assign"
  op: "Assign"
  input: "Rbn1b/gamma/Adam"
  input: "Rbn1b/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/gamma/Adam/read"
  op: "Identity"
  input: "Rbn1b/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
}
node {
  name: "Rbn1b/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn1b/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn1b/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Rbn1b/gamma/Adam_1"
  input: "Rbn1b/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn1b/gamma/Adam_1/read"
  op: "Identity"
  input: "Rbn1b/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
}
node {
  name: "Rconv1b/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv1b/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv1b/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "Rconv1b/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "Rconv1b/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv1b/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv1b/W/Adam/Assign"
  op: "Assign"
  input: "Rconv1b/W/Adam"
  input: "Rconv1b/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv1b/W/Adam/read"
  op: "Identity"
  input: "Rconv1b/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
}
node {
  name: "Rconv1b/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv1b/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv1b/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Rconv1b/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Rconv1b/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv1b/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv1b/W/Adam_1/Assign"
  op: "Assign"
  input: "Rconv1b/W/Adam_1"
  input: "Rconv1b/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv1b/W/Adam_1/read"
  op: "Identity"
  input: "Rconv1b/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
}
node {
  name: "Rconv1b/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv1b/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv1b/b/Adam/Assign"
  op: "Assign"
  input: "Rconv1b/b/Adam"
  input: "Rconv1b/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv1b/b/Adam/read"
  op: "Identity"
  input: "Rconv1b/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
}
node {
  name: "Rconv1b/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv1b/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv1b/b/Adam_1/Assign"
  op: "Assign"
  input: "Rconv1b/b/Adam_1"
  input: "Rconv1b/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv1b/b/Adam_1/read"
  op: "Identity"
  input: "Rconv1b/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
}
node {
  name: "Rbn2a/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2a/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2a/beta/Adam/Assign"
  op: "Assign"
  input: "Rbn2a/beta/Adam"
  input: "Rbn2a/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/beta/Adam/read"
  op: "Identity"
  input: "Rbn2a/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
}
node {
  name: "Rbn2a/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2a/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2a/beta/Adam_1/Assign"
  op: "Assign"
  input: "Rbn2a/beta/Adam_1"
  input: "Rbn2a/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/beta/Adam_1/read"
  op: "Identity"
  input: "Rbn2a/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
}
node {
  name: "Rbn2a/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2a/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2a/gamma/Adam/Assign"
  op: "Assign"
  input: "Rbn2a/gamma/Adam"
  input: "Rbn2a/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/gamma/Adam/read"
  op: "Identity"
  input: "Rbn2a/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
}
node {
  name: "Rbn2a/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2a/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2a/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Rbn2a/gamma/Adam_1"
  input: "Rbn2a/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2a/gamma/Adam_1/read"
  op: "Identity"
  input: "Rbn2a/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
}
node {
  name: "Rconv2a/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv2a/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv2a/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "Rconv2a/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "Rconv2a/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv2a/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv2a/W/Adam/Assign"
  op: "Assign"
  input: "Rconv2a/W/Adam"
  input: "Rconv2a/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv2a/W/Adam/read"
  op: "Identity"
  input: "Rconv2a/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
}
node {
  name: "Rconv2a/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv2a/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv2a/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Rconv2a/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Rconv2a/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv2a/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv2a/W/Adam_1/Assign"
  op: "Assign"
  input: "Rconv2a/W/Adam_1"
  input: "Rconv2a/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv2a/W/Adam_1/read"
  op: "Identity"
  input: "Rconv2a/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
}
node {
  name: "Rconv2a/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv2a/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv2a/b/Adam/Assign"
  op: "Assign"
  input: "Rconv2a/b/Adam"
  input: "Rconv2a/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv2a/b/Adam/read"
  op: "Identity"
  input: "Rconv2a/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
}
node {
  name: "Rconv2a/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv2a/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv2a/b/Adam_1/Assign"
  op: "Assign"
  input: "Rconv2a/b/Adam_1"
  input: "Rconv2a/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv2a/b/Adam_1/read"
  op: "Identity"
  input: "Rconv2a/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
}
node {
  name: "Rbn2b/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2b/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2b/beta/Adam/Assign"
  op: "Assign"
  input: "Rbn2b/beta/Adam"
  input: "Rbn2b/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/beta/Adam/read"
  op: "Identity"
  input: "Rbn2b/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
}
node {
  name: "Rbn2b/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2b/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2b/beta/Adam_1/Assign"
  op: "Assign"
  input: "Rbn2b/beta/Adam_1"
  input: "Rbn2b/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/beta/Adam_1/read"
  op: "Identity"
  input: "Rbn2b/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
}
node {
  name: "Rbn2b/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2b/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2b/gamma/Adam/Assign"
  op: "Assign"
  input: "Rbn2b/gamma/Adam"
  input: "Rbn2b/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/gamma/Adam/read"
  op: "Identity"
  input: "Rbn2b/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
}
node {
  name: "Rbn2b/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn2b/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn2b/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Rbn2b/gamma/Adam_1"
  input: "Rbn2b/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn2b/gamma/Adam_1/read"
  op: "Identity"
  input: "Rbn2b/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
}
node {
  name: "Rconv2b/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv2b/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv2b/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "Rconv2b/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "Rconv2b/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv2b/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv2b/W/Adam/Assign"
  op: "Assign"
  input: "Rconv2b/W/Adam"
  input: "Rconv2b/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv2b/W/Adam/read"
  op: "Identity"
  input: "Rconv2b/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
}
node {
  name: "Rconv2b/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv2b/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv2b/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Rconv2b/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Rconv2b/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv2b/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv2b/W/Adam_1/Assign"
  op: "Assign"
  input: "Rconv2b/W/Adam_1"
  input: "Rconv2b/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv2b/W/Adam_1/read"
  op: "Identity"
  input: "Rconv2b/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
}
node {
  name: "Rconv2b/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv2b/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv2b/b/Adam/Assign"
  op: "Assign"
  input: "Rconv2b/b/Adam"
  input: "Rconv2b/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv2b/b/Adam/read"
  op: "Identity"
  input: "Rconv2b/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
}
node {
  name: "Rconv2b/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv2b/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv2b/b/Adam_1/Assign"
  op: "Assign"
  input: "Rconv2b/b/Adam_1"
  input: "Rconv2b/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv2b/b/Adam_1/read"
  op: "Identity"
  input: "Rconv2b/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
}
node {
  name: "Rbn3a/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3a/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3a/beta/Adam/Assign"
  op: "Assign"
  input: "Rbn3a/beta/Adam"
  input: "Rbn3a/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/beta/Adam/read"
  op: "Identity"
  input: "Rbn3a/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
}
node {
  name: "Rbn3a/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3a/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3a/beta/Adam_1/Assign"
  op: "Assign"
  input: "Rbn3a/beta/Adam_1"
  input: "Rbn3a/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/beta/Adam_1/read"
  op: "Identity"
  input: "Rbn3a/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
}
node {
  name: "Rbn3a/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3a/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3a/gamma/Adam/Assign"
  op: "Assign"
  input: "Rbn3a/gamma/Adam"
  input: "Rbn3a/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/gamma/Adam/read"
  op: "Identity"
  input: "Rbn3a/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
}
node {
  name: "Rbn3a/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3a/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3a/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Rbn3a/gamma/Adam_1"
  input: "Rbn3a/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3a/gamma/Adam_1/read"
  op: "Identity"
  input: "Rbn3a/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
}
node {
  name: "Rconv3a/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv3a/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv3a/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "Rconv3a/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "Rconv3a/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv3a/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv3a/W/Adam/Assign"
  op: "Assign"
  input: "Rconv3a/W/Adam"
  input: "Rconv3a/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv3a/W/Adam/read"
  op: "Identity"
  input: "Rconv3a/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
}
node {
  name: "Rconv3a/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv3a/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv3a/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Rconv3a/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Rconv3a/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv3a/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv3a/W/Adam_1/Assign"
  op: "Assign"
  input: "Rconv3a/W/Adam_1"
  input: "Rconv3a/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv3a/W/Adam_1/read"
  op: "Identity"
  input: "Rconv3a/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
}
node {
  name: "Rconv3a/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv3a/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv3a/b/Adam/Assign"
  op: "Assign"
  input: "Rconv3a/b/Adam"
  input: "Rconv3a/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv3a/b/Adam/read"
  op: "Identity"
  input: "Rconv3a/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
}
node {
  name: "Rconv3a/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv3a/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv3a/b/Adam_1/Assign"
  op: "Assign"
  input: "Rconv3a/b/Adam_1"
  input: "Rconv3a/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv3a/b/Adam_1/read"
  op: "Identity"
  input: "Rconv3a/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
}
node {
  name: "Rbn3b/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3b/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3b/beta/Adam/Assign"
  op: "Assign"
  input: "Rbn3b/beta/Adam"
  input: "Rbn3b/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/beta/Adam/read"
  op: "Identity"
  input: "Rbn3b/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
}
node {
  name: "Rbn3b/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3b/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3b/beta/Adam_1/Assign"
  op: "Assign"
  input: "Rbn3b/beta/Adam_1"
  input: "Rbn3b/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/beta/Adam_1/read"
  op: "Identity"
  input: "Rbn3b/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
}
node {
  name: "Rbn3b/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3b/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3b/gamma/Adam/Assign"
  op: "Assign"
  input: "Rbn3b/gamma/Adam"
  input: "Rbn3b/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/gamma/Adam/read"
  op: "Identity"
  input: "Rbn3b/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
}
node {
  name: "Rbn3b/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn3b/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn3b/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Rbn3b/gamma/Adam_1"
  input: "Rbn3b/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn3b/gamma/Adam_1/read"
  op: "Identity"
  input: "Rbn3b/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
}
node {
  name: "Rconv3b/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv3b/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv3b/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "Rconv3b/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "Rconv3b/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv3b/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv3b/W/Adam/Assign"
  op: "Assign"
  input: "Rconv3b/W/Adam"
  input: "Rconv3b/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv3b/W/Adam/read"
  op: "Identity"
  input: "Rconv3b/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
}
node {
  name: "Rconv3b/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv3b/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv3b/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Rconv3b/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Rconv3b/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv3b/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv3b/W/Adam_1/Assign"
  op: "Assign"
  input: "Rconv3b/W/Adam_1"
  input: "Rconv3b/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv3b/W/Adam_1/read"
  op: "Identity"
  input: "Rconv3b/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
}
node {
  name: "Rconv3b/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv3b/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv3b/b/Adam/Assign"
  op: "Assign"
  input: "Rconv3b/b/Adam"
  input: "Rconv3b/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv3b/b/Adam/read"
  op: "Identity"
  input: "Rconv3b/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
}
node {
  name: "Rconv3b/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv3b/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv3b/b/Adam_1/Assign"
  op: "Assign"
  input: "Rconv3b/b/Adam_1"
  input: "Rconv3b/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv3b/b/Adam_1/read"
  op: "Identity"
  input: "Rconv3b/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
}
node {
  name: "Rbn4a/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4a/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4a/beta/Adam/Assign"
  op: "Assign"
  input: "Rbn4a/beta/Adam"
  input: "Rbn4a/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/beta/Adam/read"
  op: "Identity"
  input: "Rbn4a/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
}
node {
  name: "Rbn4a/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4a/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4a/beta/Adam_1/Assign"
  op: "Assign"
  input: "Rbn4a/beta/Adam_1"
  input: "Rbn4a/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/beta/Adam_1/read"
  op: "Identity"
  input: "Rbn4a/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
}
node {
  name: "Rbn4a/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4a/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4a/gamma/Adam/Assign"
  op: "Assign"
  input: "Rbn4a/gamma/Adam"
  input: "Rbn4a/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/gamma/Adam/read"
  op: "Identity"
  input: "Rbn4a/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
}
node {
  name: "Rbn4a/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4a/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4a/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Rbn4a/gamma/Adam_1"
  input: "Rbn4a/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4a/gamma/Adam_1/read"
  op: "Identity"
  input: "Rbn4a/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
}
node {
  name: "Rconv4a/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\240\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv4a/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv4a/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "Rconv4a/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "Rconv4a/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv4a/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv4a/W/Adam/Assign"
  op: "Assign"
  input: "Rconv4a/W/Adam"
  input: "Rconv4a/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv4a/W/Adam/read"
  op: "Identity"
  input: "Rconv4a/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
}
node {
  name: "Rconv4a/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\240\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv4a/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv4a/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Rconv4a/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Rconv4a/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv4a/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv4a/W/Adam_1/Assign"
  op: "Assign"
  input: "Rconv4a/W/Adam_1"
  input: "Rconv4a/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv4a/W/Adam_1/read"
  op: "Identity"
  input: "Rconv4a/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
}
node {
  name: "Rconv4a/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv4a/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv4a/b/Adam/Assign"
  op: "Assign"
  input: "Rconv4a/b/Adam"
  input: "Rconv4a/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv4a/b/Adam/read"
  op: "Identity"
  input: "Rconv4a/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
}
node {
  name: "Rconv4a/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv4a/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv4a/b/Adam_1/Assign"
  op: "Assign"
  input: "Rconv4a/b/Adam_1"
  input: "Rconv4a/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv4a/b/Adam_1/read"
  op: "Identity"
  input: "Rconv4a/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
}
node {
  name: "Rbn4b/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4b/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4b/beta/Adam/Assign"
  op: "Assign"
  input: "Rbn4b/beta/Adam"
  input: "Rbn4b/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/beta/Adam/read"
  op: "Identity"
  input: "Rbn4b/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
}
node {
  name: "Rbn4b/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4b/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4b/beta/Adam_1/Assign"
  op: "Assign"
  input: "Rbn4b/beta/Adam_1"
  input: "Rbn4b/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/beta/Adam_1/read"
  op: "Identity"
  input: "Rbn4b/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
}
node {
  name: "Rbn4b/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4b/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4b/gamma/Adam/Assign"
  op: "Assign"
  input: "Rbn4b/gamma/Adam"
  input: "Rbn4b/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/gamma/Adam/read"
  op: "Identity"
  input: "Rbn4b/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
}
node {
  name: "Rbn4b/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn4b/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn4b/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Rbn4b/gamma/Adam_1"
  input: "Rbn4b/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn4b/gamma/Adam_1/read"
  op: "Identity"
  input: "Rbn4b/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
}
node {
  name: "Rconv4b/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\240\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv4b/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv4b/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "Rconv4b/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "Rconv4b/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv4b/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 160
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv4b/W/Adam/Assign"
  op: "Assign"
  input: "Rconv4b/W/Adam"
  input: "Rconv4b/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv4b/W/Adam/read"
  op: "Identity"
  input: "Rconv4b/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
}
node {
  name: "Rconv4b/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\240\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv4b/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv4b/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Rconv4b/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Rconv4b/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv4b/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 160
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv4b/W/Adam_1/Assign"
  op: "Assign"
  input: "Rconv4b/W/Adam_1"
  input: "Rconv4b/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv4b/W/Adam_1/read"
  op: "Identity"
  input: "Rconv4b/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
}
node {
  name: "Rconv4b/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv4b/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv4b/b/Adam/Assign"
  op: "Assign"
  input: "Rconv4b/b/Adam"
  input: "Rconv4b/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv4b/b/Adam/read"
  op: "Identity"
  input: "Rconv4b/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
}
node {
  name: "Rconv4b/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv4b/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv4b/b/Adam_1/Assign"
  op: "Assign"
  input: "Rconv4b/b/Adam_1"
  input: "Rconv4b/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv4b/b/Adam_1/read"
  op: "Identity"
  input: "Rconv4b/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
}
node {
  name: "Rbn5a/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5a/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5a/beta/Adam/Assign"
  op: "Assign"
  input: "Rbn5a/beta/Adam"
  input: "Rbn5a/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/beta/Adam/read"
  op: "Identity"
  input: "Rbn5a/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
}
node {
  name: "Rbn5a/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5a/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5a/beta/Adam_1/Assign"
  op: "Assign"
  input: "Rbn5a/beta/Adam_1"
  input: "Rbn5a/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/beta/Adam_1/read"
  op: "Identity"
  input: "Rbn5a/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
}
node {
  name: "Rbn5a/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5a/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5a/gamma/Adam/Assign"
  op: "Assign"
  input: "Rbn5a/gamma/Adam"
  input: "Rbn5a/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/gamma/Adam/read"
  op: "Identity"
  input: "Rbn5a/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
}
node {
  name: "Rbn5a/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5a/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5a/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Rbn5a/gamma/Adam_1"
  input: "Rbn5a/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5a/gamma/Adam_1/read"
  op: "Identity"
  input: "Rbn5a/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
}
node {
  name: "Rconv5a/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv5a/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv5a/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "Rconv5a/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "Rconv5a/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv5a/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv5a/W/Adam/Assign"
  op: "Assign"
  input: "Rconv5a/W/Adam"
  input: "Rconv5a/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv5a/W/Adam/read"
  op: "Identity"
  input: "Rconv5a/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
}
node {
  name: "Rconv5a/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv5a/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv5a/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Rconv5a/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Rconv5a/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv5a/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv5a/W/Adam_1/Assign"
  op: "Assign"
  input: "Rconv5a/W/Adam_1"
  input: "Rconv5a/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv5a/W/Adam_1/read"
  op: "Identity"
  input: "Rconv5a/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
}
node {
  name: "Rconv5a/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv5a/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv5a/b/Adam/Assign"
  op: "Assign"
  input: "Rconv5a/b/Adam"
  input: "Rconv5a/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv5a/b/Adam/read"
  op: "Identity"
  input: "Rconv5a/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
}
node {
  name: "Rconv5a/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv5a/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv5a/b/Adam_1/Assign"
  op: "Assign"
  input: "Rconv5a/b/Adam_1"
  input: "Rconv5a/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv5a/b/Adam_1/read"
  op: "Identity"
  input: "Rconv5a/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
}
node {
  name: "Rbn5b/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5b/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5b/beta/Adam/Assign"
  op: "Assign"
  input: "Rbn5b/beta/Adam"
  input: "Rbn5b/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/beta/Adam/read"
  op: "Identity"
  input: "Rbn5b/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
}
node {
  name: "Rbn5b/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5b/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5b/beta/Adam_1/Assign"
  op: "Assign"
  input: "Rbn5b/beta/Adam_1"
  input: "Rbn5b/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/beta/Adam_1/read"
  op: "Identity"
  input: "Rbn5b/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
}
node {
  name: "Rbn5b/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5b/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5b/gamma/Adam/Assign"
  op: "Assign"
  input: "Rbn5b/gamma/Adam"
  input: "Rbn5b/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/gamma/Adam/read"
  op: "Identity"
  input: "Rbn5b/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
}
node {
  name: "Rbn5b/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn5b/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn5b/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Rbn5b/gamma/Adam_1"
  input: "Rbn5b/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn5b/gamma/Adam_1/read"
  op: "Identity"
  input: "Rbn5b/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
}
node {
  name: "Rconv5b/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv5b/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv5b/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "Rconv5b/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "Rconv5b/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv5b/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv5b/W/Adam/Assign"
  op: "Assign"
  input: "Rconv5b/W/Adam"
  input: "Rconv5b/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv5b/W/Adam/read"
  op: "Identity"
  input: "Rconv5b/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
}
node {
  name: "Rconv5b/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv5b/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv5b/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Rconv5b/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Rconv5b/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv5b/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv5b/W/Adam_1/Assign"
  op: "Assign"
  input: "Rconv5b/W/Adam_1"
  input: "Rconv5b/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv5b/W/Adam_1/read"
  op: "Identity"
  input: "Rconv5b/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
}
node {
  name: "Rconv5b/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv5b/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv5b/b/Adam/Assign"
  op: "Assign"
  input: "Rconv5b/b/Adam"
  input: "Rconv5b/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv5b/b/Adam/read"
  op: "Identity"
  input: "Rconv5b/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
}
node {
  name: "Rconv5b/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv5b/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv5b/b/Adam_1/Assign"
  op: "Assign"
  input: "Rconv5b/b/Adam_1"
  input: "Rconv5b/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv5b/b/Adam_1/read"
  op: "Identity"
  input: "Rconv5b/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
}
node {
  name: "Rbn6a/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6a/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6a/beta/Adam/Assign"
  op: "Assign"
  input: "Rbn6a/beta/Adam"
  input: "Rbn6a/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/beta/Adam/read"
  op: "Identity"
  input: "Rbn6a/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
}
node {
  name: "Rbn6a/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6a/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6a/beta/Adam_1/Assign"
  op: "Assign"
  input: "Rbn6a/beta/Adam_1"
  input: "Rbn6a/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/beta/Adam_1/read"
  op: "Identity"
  input: "Rbn6a/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
}
node {
  name: "Rbn6a/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6a/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6a/gamma/Adam/Assign"
  op: "Assign"
  input: "Rbn6a/gamma/Adam"
  input: "Rbn6a/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/gamma/Adam/read"
  op: "Identity"
  input: "Rbn6a/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
}
node {
  name: "Rbn6a/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6a/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6a/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Rbn6a/gamma/Adam_1"
  input: "Rbn6a/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6a/gamma/Adam_1/read"
  op: "Identity"
  input: "Rbn6a/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
}
node {
  name: "Rconv6a/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\340\000\000\000\340\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv6a/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv6a/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "Rconv6a/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "Rconv6a/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv6a/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv6a/W/Adam/Assign"
  op: "Assign"
  input: "Rconv6a/W/Adam"
  input: "Rconv6a/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv6a/W/Adam/read"
  op: "Identity"
  input: "Rconv6a/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
}
node {
  name: "Rconv6a/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\340\000\000\000\340\000\000\000"
      }
    }
  }
}
node {
  name: "Rconv6a/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv6a/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Rconv6a/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Rconv6a/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv6a/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv6a/W/Adam_1/Assign"
  op: "Assign"
  input: "Rconv6a/W/Adam_1"
  input: "Rconv6a/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv6a/W/Adam_1/read"
  op: "Identity"
  input: "Rconv6a/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
}
node {
  name: "Rconv6a/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv6a/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv6a/b/Adam/Assign"
  op: "Assign"
  input: "Rconv6a/b/Adam"
  input: "Rconv6a/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv6a/b/Adam/read"
  op: "Identity"
  input: "Rconv6a/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
}
node {
  name: "Rconv6a/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv6a/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv6a/b/Adam_1/Assign"
  op: "Assign"
  input: "Rconv6a/b/Adam_1"
  input: "Rconv6a/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv6a/b/Adam_1/read"
  op: "Identity"
  input: "Rconv6a/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
}
node {
  name: "Rbn6b/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6b/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6b/beta/Adam/Assign"
  op: "Assign"
  input: "Rbn6b/beta/Adam"
  input: "Rbn6b/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/beta/Adam/read"
  op: "Identity"
  input: "Rbn6b/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
}
node {
  name: "Rbn6b/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6b/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6b/beta/Adam_1/Assign"
  op: "Assign"
  input: "Rbn6b/beta/Adam_1"
  input: "Rbn6b/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/beta/Adam_1/read"
  op: "Identity"
  input: "Rbn6b/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
}
node {
  name: "Rbn6b/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6b/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6b/gamma/Adam/Assign"
  op: "Assign"
  input: "Rbn6b/gamma/Adam"
  input: "Rbn6b/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/gamma/Adam/read"
  op: "Identity"
  input: "Rbn6b/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
}
node {
  name: "Rbn6b/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 224
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rbn6b/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 224
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rbn6b/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Rbn6b/gamma/Adam_1"
  input: "Rbn6b/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rbn6b/gamma/Adam_1/read"
  op: "Identity"
  input: "Rbn6b/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
}
node {
  name: "Rconv6b/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\340\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv6b/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv6b/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "Rconv6b/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "Rconv6b/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv6b/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 224
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv6b/W/Adam/Assign"
  op: "Assign"
  input: "Rconv6b/W/Adam"
  input: "Rconv6b/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv6b/W/Adam/read"
  op: "Identity"
  input: "Rconv6b/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
}
node {
  name: "Rconv6b/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\340\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Rconv6b/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv6b/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Rconv6b/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Rconv6b/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rconv6b/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 224
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv6b/W/Adam_1/Assign"
  op: "Assign"
  input: "Rconv6b/W/Adam_1"
  input: "Rconv6b/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv6b/W/Adam_1/read"
  op: "Identity"
  input: "Rconv6b/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
}
node {
  name: "Rconv6b/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv6b/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv6b/b/Adam/Assign"
  op: "Assign"
  input: "Rconv6b/b/Adam"
  input: "Rconv6b/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv6b/b/Adam/read"
  op: "Identity"
  input: "Rconv6b/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
}
node {
  name: "Rconv6b/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Rconv6b/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Rconv6b/b/Adam_1/Assign"
  op: "Assign"
  input: "Rconv6b/b/Adam_1"
  input: "Rconv6b/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Rconv6b/b/Adam_1/read"
  op: "Identity"
  input: "Rconv6b/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
}
node {
  name: "fbn1/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fbn1/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fbn1/beta/Adam/Assign"
  op: "Assign"
  input: "fbn1/beta/Adam"
  input: "fbn1/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/beta/Adam/read"
  op: "Identity"
  input: "fbn1/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
}
node {
  name: "fbn1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fbn1/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fbn1/beta/Adam_1/Assign"
  op: "Assign"
  input: "fbn1/beta/Adam_1"
  input: "fbn1/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/beta/Adam_1/read"
  op: "Identity"
  input: "fbn1/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
}
node {
  name: "fbn1/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fbn1/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fbn1/gamma/Adam/Assign"
  op: "Assign"
  input: "fbn1/gamma/Adam"
  input: "fbn1/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/gamma/Adam/read"
  op: "Identity"
  input: "fbn1/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
}
node {
  name: "fbn1/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fbn1/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fbn1/gamma/Adam_1/Assign"
  op: "Assign"
  input: "fbn1/gamma/Adam_1"
  input: "fbn1/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fbn1/gamma/Adam_1/read"
  op: "Identity"
  input: "fbn1/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
}
node {
  name: "conv2/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv2/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv2/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv2/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/W/Adam/Assign"
  op: "Assign"
  input: "conv2/W/Adam"
  input: "conv2/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/W/Adam/read"
  op: "Identity"
  input: "conv2/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
}
node {
  name: "conv2/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv2/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv2/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv2/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/W/Adam_1/Assign"
  op: "Assign"
  input: "conv2/W/Adam_1"
  input: "conv2/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/W/Adam_1/read"
  op: "Identity"
  input: "conv2/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
}
node {
  name: "conv2/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/b/Adam/Assign"
  op: "Assign"
  input: "conv2/b/Adam"
  input: "conv2/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/b/Adam/read"
  op: "Identity"
  input: "conv2/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
}
node {
  name: "conv2/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/b/Adam_1/Assign"
  op: "Assign"
  input: "conv2/b/Adam_1"
  input: "conv2/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/b/Adam_1/read"
  op: "Identity"
  input: "conv2/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
}
node {
  name: "rconv1/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "rconv1/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv1/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "rconv1/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "rconv1/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv1/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rconv1/W/Adam/Assign"
  op: "Assign"
  input: "rconv1/W/Adam"
  input: "rconv1/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rconv1/W/Adam/read"
  op: "Identity"
  input: "rconv1/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
}
node {
  name: "rconv1/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "rconv1/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv1/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "rconv1/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "rconv1/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv1/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rconv1/W/Adam_1/Assign"
  op: "Assign"
  input: "rconv1/W/Adam_1"
  input: "rconv1/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rconv1/W/Adam_1/read"
  op: "Identity"
  input: "rconv1/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
}
node {
  name: "rconv1/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv1/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rconv1/b/Adam/Assign"
  op: "Assign"
  input: "rconv1/b/Adam"
  input: "rconv1/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rconv1/b/Adam/read"
  op: "Identity"
  input: "rconv1/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
}
node {
  name: "rconv1/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv1/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rconv1/b/Adam_1/Assign"
  op: "Assign"
  input: "rconv1/b/Adam_1"
  input: "rconv1/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rconv1/b/Adam_1/read"
  op: "Identity"
  input: "rconv1/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
}
node {
  name: "rconv2/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "rconv2/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv2/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "rconv2/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "rconv2/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv2/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rconv2/W/Adam/Assign"
  op: "Assign"
  input: "rconv2/W/Adam"
  input: "rconv2/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rconv2/W/Adam/read"
  op: "Identity"
  input: "rconv2/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
}
node {
  name: "rconv2/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "rconv2/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv2/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "rconv2/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "rconv2/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv2/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rconv2/W/Adam_1/Assign"
  op: "Assign"
  input: "rconv2/W/Adam_1"
  input: "rconv2/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rconv2/W/Adam_1/read"
  op: "Identity"
  input: "rconv2/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
}
node {
  name: "rconv2/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv2/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rconv2/b/Adam/Assign"
  op: "Assign"
  input: "rconv2/b/Adam"
  input: "rconv2/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rconv2/b/Adam/read"
  op: "Identity"
  input: "rconv2/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
}
node {
  name: "rconv2/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv2/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rconv2/b/Adam_1/Assign"
  op: "Assign"
  input: "rconv2/b/Adam_1"
  input: "rconv2/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rconv2/b/Adam_1/read"
  op: "Identity"
  input: "rconv2/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
}
node {
  name: "fconv1/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fconv1/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fconv1/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "fconv1/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "fconv1/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fconv1/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fconv1/W/Adam/Assign"
  op: "Assign"
  input: "fconv1/W/Adam"
  input: "fconv1/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fconv1/W/Adam/read"
  op: "Identity"
  input: "fconv1/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
}
node {
  name: "fconv1/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "fconv1/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fconv1/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fconv1/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fconv1/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fconv1/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fconv1/W/Adam_1/Assign"
  op: "Assign"
  input: "fconv1/W/Adam_1"
  input: "fconv1/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fconv1/W/Adam_1/read"
  op: "Identity"
  input: "fconv1/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
}
node {
  name: "fconv1/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fconv1/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fconv1/b/Adam/Assign"
  op: "Assign"
  input: "fconv1/b/Adam"
  input: "fconv1/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fconv1/b/Adam/read"
  op: "Identity"
  input: "fconv1/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
}
node {
  name: "fconv1/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fconv1/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fconv1/b/Adam_1/Assign"
  op: "Assign"
  input: "fconv1/b/Adam_1"
  input: "fconv1/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fconv1/b/Adam_1/read"
  op: "Identity"
  input: "fconv1/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
}
node {
  name: "fconv2/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000\220\001\000\000"
      }
    }
  }
}
node {
  name: "fconv2/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fconv2/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "fconv2/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "fconv2/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fconv2/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fconv2/W/Adam/Assign"
  op: "Assign"
  input: "fconv2/W/Adam"
  input: "fconv2/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fconv2/W/Adam/read"
  op: "Identity"
  input: "fconv2/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
}
node {
  name: "fconv2/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000\220\001\000\000"
      }
    }
  }
}
node {
  name: "fconv2/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fconv2/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fconv2/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fconv2/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fconv2/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fconv2/W/Adam_1/Assign"
  op: "Assign"
  input: "fconv2/W/Adam_1"
  input: "fconv2/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fconv2/W/Adam_1/read"
  op: "Identity"
  input: "fconv2/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
}
node {
  name: "fconv2/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fconv2/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fconv2/b/Adam/Assign"
  op: "Assign"
  input: "fconv2/b/Adam"
  input: "fconv2/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fconv2/b/Adam/read"
  op: "Identity"
  input: "fconv2/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
}
node {
  name: "fconv2/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fconv2/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fconv2/b/Adam_1/Assign"
  op: "Assign"
  input: "fconv2/b/Adam_1"
  input: "fconv2/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fconv2/b/Adam_1/read"
  op: "Identity"
  input: "fconv2/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
}
node {
  name: "Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-08
      }
    }
  }
}
node {
  name: "Adam/update_conv1/W/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/W"
  input: "conv1/W/Adam"
  input: "conv1/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1/b/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/b"
  input: "conv1/b/Adam"
  input: "conv1/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn1a/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn1a/beta"
  input: "Rbn1a/beta/Adam"
  input: "Rbn1a/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn1a/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn1a/gamma"
  input: "Rbn1a/gamma/Adam"
  input: "Rbn1a/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv1a/W/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv1a/W"
  input: "Rconv1a/W/Adam"
  input: "Rconv1a/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv1a/b/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv1a/b"
  input: "Rconv1a/b/Adam"
  input: "Rconv1a/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn1b/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn1b/beta"
  input: "Rbn1b/beta/Adam"
  input: "Rbn1b/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_1/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn1b/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn1b/gamma"
  input: "Rbn1b/gamma/Adam"
  input: "Rbn1b/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv1b/W/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv1b/W"
  input: "Rconv1b/W/Adam"
  input: "Rconv1b/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv1b/b/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv1b/b"
  input: "Rconv1b/b/Adam"
  input: "Rconv1b/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn2a/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn2a/beta"
  input: "Rbn2a/beta/Adam"
  input: "Rbn2a/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_2/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn2a/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn2a/gamma"
  input: "Rbn2a/gamma/Adam"
  input: "Rbn2a/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv2a/W/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv2a/W"
  input: "Rconv2a/W/Adam"
  input: "Rconv2a/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv2a/b/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv2a/b"
  input: "Rconv2a/b/Adam"
  input: "Rconv2a/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn2b/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn2b/beta"
  input: "Rbn2b/beta/Adam"
  input: "Rbn2b/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_3/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn2b/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn2b/gamma"
  input: "Rbn2b/gamma/Adam"
  input: "Rbn2b/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_3/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv2b/W/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv2b/W"
  input: "Rconv2b/W/Adam"
  input: "Rconv2b/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv2b/b/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv2b/b"
  input: "Rconv2b/b/Adam"
  input: "Rconv2b/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn3a/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn3a/beta"
  input: "Rbn3a/beta/Adam"
  input: "Rbn3a/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_4/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn3a/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn3a/gamma"
  input: "Rbn3a/gamma/Adam"
  input: "Rbn3a/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_4/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv3a/W/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv3a/W"
  input: "Rconv3a/W/Adam"
  input: "Rconv3a/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv3a/b/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv3a/b"
  input: "Rconv3a/b/Adam"
  input: "Rconv3a/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn3b/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn3b/beta"
  input: "Rbn3b/beta/Adam"
  input: "Rbn3b/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_5/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn3b/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn3b/gamma"
  input: "Rbn3b/gamma/Adam"
  input: "Rbn3b/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_5/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv3b/W/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv3b/W"
  input: "Rconv3b/W/Adam"
  input: "Rconv3b/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv3b/b/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv3b/b"
  input: "Rconv3b/b/Adam"
  input: "Rconv3b/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn4a/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn4a/beta"
  input: "Rbn4a/beta/Adam"
  input: "Rbn4a/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_6/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn4a/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn4a/gamma"
  input: "Rbn4a/gamma/Adam"
  input: "Rbn4a/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_6/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv4a/W/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv4a/W"
  input: "Rconv4a/W/Adam"
  input: "Rconv4a/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv4a/b/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv4a/b"
  input: "Rconv4a/b/Adam"
  input: "Rconv4a/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn4b/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn4b/beta"
  input: "Rbn4b/beta/Adam"
  input: "Rbn4b/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_7/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn4b/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn4b/gamma"
  input: "Rbn4b/gamma/Adam"
  input: "Rbn4b/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_7/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv4b/W/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv4b/W"
  input: "Rconv4b/W/Adam"
  input: "Rconv4b/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_8_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv4b/b/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv4b/b"
  input: "Rconv4b/b/Adam"
  input: "Rconv4b/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_8_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn5a/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn5a/beta"
  input: "Rbn5a/beta/Adam"
  input: "Rbn5a/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_8/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn5a/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn5a/gamma"
  input: "Rbn5a/gamma/Adam"
  input: "Rbn5a/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_8/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv5a/W/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv5a/W"
  input: "Rconv5a/W/Adam"
  input: "Rconv5a/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv5a/b/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv5a/b"
  input: "Rconv5a/b/Adam"
  input: "Rconv5a/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn5b/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn5b/beta"
  input: "Rbn5b/beta/Adam"
  input: "Rbn5b/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_9/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn5b/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn5b/gamma"
  input: "Rbn5b/gamma/Adam"
  input: "Rbn5b/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_9/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv5b/W/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv5b/W"
  input: "Rconv5b/W/Adam"
  input: "Rconv5b/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_10_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv5b/b/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv5b/b"
  input: "Rconv5b/b/Adam"
  input: "Rconv5b/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_10_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn6a/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn6a/beta"
  input: "Rbn6a/beta/Adam"
  input: "Rbn6a/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_10/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn6a/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn6a/gamma"
  input: "Rbn6a/gamma/Adam"
  input: "Rbn6a/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_10/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv6a/W/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv6a/W"
  input: "Rconv6a/W/Adam"
  input: "Rconv6a/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_11_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv6a/b/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv6a/b"
  input: "Rconv6a/b/Adam"
  input: "Rconv6a/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_11_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn6b/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn6b/beta"
  input: "Rbn6b/beta/Adam"
  input: "Rbn6b/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_11/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rbn6b/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "Rbn6b/gamma"
  input: "Rbn6b/gamma/Adam"
  input: "Rbn6b/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_11/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv6b/W/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv6b/W"
  input: "Rconv6b/W/Adam"
  input: "Rconv6b/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_12_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Rconv6b/b/ApplyAdam"
  op: "ApplyAdam"
  input: "Rconv6b/b"
  input: "Rconv6b/b/Adam"
  input: "Rconv6b/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_12_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fbn1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "fbn1/beta"
  input: "fbn1/beta/Adam"
  input: "fbn1/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_12/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fbn1/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "fbn1/gamma"
  input: "fbn1/gamma/Adam"
  input: "fbn1/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/batchnorm_12/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv2/W/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/W"
  input: "conv2/W/Adam"
  input: "conv2/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_13_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv2/b/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/b"
  input: "conv2/b/Adam"
  input: "conv2/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_13_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_rconv1/W/ApplyAdam"
  op: "ApplyAdam"
  input: "rconv1/W"
  input: "rconv1/W/Adam"
  input: "rconv1/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_14_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_rconv1/b/ApplyAdam"
  op: "ApplyAdam"
  input: "rconv1/b"
  input: "rconv1/b/Adam"
  input: "rconv1/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_14_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_rconv2/W/ApplyAdam"
  op: "ApplyAdam"
  input: "rconv2/W"
  input: "rconv2/W/Adam"
  input: "rconv2/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_15_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_rconv2/b/ApplyAdam"
  op: "ApplyAdam"
  input: "rconv2/b"
  input: "rconv2/b/Adam"
  input: "rconv2/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_15_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fconv1/W/ApplyAdam"
  op: "ApplyAdam"
  input: "fconv1/W"
  input: "fconv1/W/Adam"
  input: "fconv1/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_16_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fconv1/b/ApplyAdam"
  op: "ApplyAdam"
  input: "fconv1/b"
  input: "fconv1/b/Adam"
  input: "fconv1/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_16_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fconv2/W/ApplyAdam"
  op: "ApplyAdam"
  input: "fconv2/W"
  input: "fconv2/W/Adam"
  input: "fconv2/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/Conv3D_17_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_fconv2/b/ApplyAdam"
  op: "ApplyAdam"
  input: "fconv2/b"
  input: "fconv2/b/Adam"
  input: "fconv2/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_17_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_Rbn1a/beta/ApplyAdam"
  input: "^Adam/update_Rbn1a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn1b/beta/ApplyAdam"
  input: "^Adam/update_Rbn1b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn2a/beta/ApplyAdam"
  input: "^Adam/update_Rbn2a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn2b/beta/ApplyAdam"
  input: "^Adam/update_Rbn2b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn3a/beta/ApplyAdam"
  input: "^Adam/update_Rbn3a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn3b/beta/ApplyAdam"
  input: "^Adam/update_Rbn3b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn4a/beta/ApplyAdam"
  input: "^Adam/update_Rbn4a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn4b/beta/ApplyAdam"
  input: "^Adam/update_Rbn4b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn5a/beta/ApplyAdam"
  input: "^Adam/update_Rbn5a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn5b/beta/ApplyAdam"
  input: "^Adam/update_Rbn5b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn6a/beta/ApplyAdam"
  input: "^Adam/update_Rbn6a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn6b/beta/ApplyAdam"
  input: "^Adam/update_Rbn6b/gamma/ApplyAdam"
  input: "^Adam/update_Rconv1a/W/ApplyAdam"
  input: "^Adam/update_Rconv1a/b/ApplyAdam"
  input: "^Adam/update_Rconv1b/W/ApplyAdam"
  input: "^Adam/update_Rconv1b/b/ApplyAdam"
  input: "^Adam/update_Rconv2a/W/ApplyAdam"
  input: "^Adam/update_Rconv2a/b/ApplyAdam"
  input: "^Adam/update_Rconv2b/W/ApplyAdam"
  input: "^Adam/update_Rconv2b/b/ApplyAdam"
  input: "^Adam/update_Rconv3a/W/ApplyAdam"
  input: "^Adam/update_Rconv3a/b/ApplyAdam"
  input: "^Adam/update_Rconv3b/W/ApplyAdam"
  input: "^Adam/update_Rconv3b/b/ApplyAdam"
  input: "^Adam/update_Rconv4a/W/ApplyAdam"
  input: "^Adam/update_Rconv4a/b/ApplyAdam"
  input: "^Adam/update_Rconv4b/W/ApplyAdam"
  input: "^Adam/update_Rconv4b/b/ApplyAdam"
  input: "^Adam/update_Rconv5a/W/ApplyAdam"
  input: "^Adam/update_Rconv5a/b/ApplyAdam"
  input: "^Adam/update_Rconv5b/W/ApplyAdam"
  input: "^Adam/update_Rconv5b/b/ApplyAdam"
  input: "^Adam/update_Rconv6a/W/ApplyAdam"
  input: "^Adam/update_Rconv6a/b/ApplyAdam"
  input: "^Adam/update_Rconv6b/W/ApplyAdam"
  input: "^Adam/update_Rconv6b/b/ApplyAdam"
  input: "^Adam/update_conv1/W/ApplyAdam"
  input: "^Adam/update_conv1/b/ApplyAdam"
  input: "^Adam/update_conv2/W/ApplyAdam"
  input: "^Adam/update_conv2/b/ApplyAdam"
  input: "^Adam/update_fbn1/beta/ApplyAdam"
  input: "^Adam/update_fbn1/gamma/ApplyAdam"
  input: "^Adam/update_fconv1/W/ApplyAdam"
  input: "^Adam/update_fconv1/b/ApplyAdam"
  input: "^Adam/update_fconv2/W/ApplyAdam"
  input: "^Adam/update_fconv2/b/ApplyAdam"
  input: "^Adam/update_rconv1/W/ApplyAdam"
  input: "^Adam/update_rconv1/b/ApplyAdam"
  input: "^Adam/update_rconv2/W/ApplyAdam"
  input: "^Adam/update_rconv2/b/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_Rbn1a/beta/ApplyAdam"
  input: "^Adam/update_Rbn1a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn1b/beta/ApplyAdam"
  input: "^Adam/update_Rbn1b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn2a/beta/ApplyAdam"
  input: "^Adam/update_Rbn2a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn2b/beta/ApplyAdam"
  input: "^Adam/update_Rbn2b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn3a/beta/ApplyAdam"
  input: "^Adam/update_Rbn3a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn3b/beta/ApplyAdam"
  input: "^Adam/update_Rbn3b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn4a/beta/ApplyAdam"
  input: "^Adam/update_Rbn4a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn4b/beta/ApplyAdam"
  input: "^Adam/update_Rbn4b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn5a/beta/ApplyAdam"
  input: "^Adam/update_Rbn5a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn5b/beta/ApplyAdam"
  input: "^Adam/update_Rbn5b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn6a/beta/ApplyAdam"
  input: "^Adam/update_Rbn6a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn6b/beta/ApplyAdam"
  input: "^Adam/update_Rbn6b/gamma/ApplyAdam"
  input: "^Adam/update_Rconv1a/W/ApplyAdam"
  input: "^Adam/update_Rconv1a/b/ApplyAdam"
  input: "^Adam/update_Rconv1b/W/ApplyAdam"
  input: "^Adam/update_Rconv1b/b/ApplyAdam"
  input: "^Adam/update_Rconv2a/W/ApplyAdam"
  input: "^Adam/update_Rconv2a/b/ApplyAdam"
  input: "^Adam/update_Rconv2b/W/ApplyAdam"
  input: "^Adam/update_Rconv2b/b/ApplyAdam"
  input: "^Adam/update_Rconv3a/W/ApplyAdam"
  input: "^Adam/update_Rconv3a/b/ApplyAdam"
  input: "^Adam/update_Rconv3b/W/ApplyAdam"
  input: "^Adam/update_Rconv3b/b/ApplyAdam"
  input: "^Adam/update_Rconv4a/W/ApplyAdam"
  input: "^Adam/update_Rconv4a/b/ApplyAdam"
  input: "^Adam/update_Rconv4b/W/ApplyAdam"
  input: "^Adam/update_Rconv4b/b/ApplyAdam"
  input: "^Adam/update_Rconv5a/W/ApplyAdam"
  input: "^Adam/update_Rconv5a/b/ApplyAdam"
  input: "^Adam/update_Rconv5b/W/ApplyAdam"
  input: "^Adam/update_Rconv5b/b/ApplyAdam"
  input: "^Adam/update_Rconv6a/W/ApplyAdam"
  input: "^Adam/update_Rconv6a/b/ApplyAdam"
  input: "^Adam/update_Rconv6b/W/ApplyAdam"
  input: "^Adam/update_Rconv6b/b/ApplyAdam"
  input: "^Adam/update_conv1/W/ApplyAdam"
  input: "^Adam/update_conv1/b/ApplyAdam"
  input: "^Adam/update_conv2/W/ApplyAdam"
  input: "^Adam/update_conv2/b/ApplyAdam"
  input: "^Adam/update_fbn1/beta/ApplyAdam"
  input: "^Adam/update_fbn1/gamma/ApplyAdam"
  input: "^Adam/update_fconv1/W/ApplyAdam"
  input: "^Adam/update_fconv1/b/ApplyAdam"
  input: "^Adam/update_fconv2/W/ApplyAdam"
  input: "^Adam/update_fconv2/b/ApplyAdam"
  input: "^Adam/update_rconv1/W/ApplyAdam"
  input: "^Adam/update_rconv1/b/ApplyAdam"
  input: "^Adam/update_rconv2/W/ApplyAdam"
  input: "^Adam/update_rconv2/b/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam"
  op: "NoOp"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
  input: "^Adam/update_Rbn1a/beta/ApplyAdam"
  input: "^Adam/update_Rbn1a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn1b/beta/ApplyAdam"
  input: "^Adam/update_Rbn1b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn2a/beta/ApplyAdam"
  input: "^Adam/update_Rbn2a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn2b/beta/ApplyAdam"
  input: "^Adam/update_Rbn2b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn3a/beta/ApplyAdam"
  input: "^Adam/update_Rbn3a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn3b/beta/ApplyAdam"
  input: "^Adam/update_Rbn3b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn4a/beta/ApplyAdam"
  input: "^Adam/update_Rbn4a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn4b/beta/ApplyAdam"
  input: "^Adam/update_Rbn4b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn5a/beta/ApplyAdam"
  input: "^Adam/update_Rbn5a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn5b/beta/ApplyAdam"
  input: "^Adam/update_Rbn5b/gamma/ApplyAdam"
  input: "^Adam/update_Rbn6a/beta/ApplyAdam"
  input: "^Adam/update_Rbn6a/gamma/ApplyAdam"
  input: "^Adam/update_Rbn6b/beta/ApplyAdam"
  input: "^Adam/update_Rbn6b/gamma/ApplyAdam"
  input: "^Adam/update_Rconv1a/W/ApplyAdam"
  input: "^Adam/update_Rconv1a/b/ApplyAdam"
  input: "^Adam/update_Rconv1b/W/ApplyAdam"
  input: "^Adam/update_Rconv1b/b/ApplyAdam"
  input: "^Adam/update_Rconv2a/W/ApplyAdam"
  input: "^Adam/update_Rconv2a/b/ApplyAdam"
  input: "^Adam/update_Rconv2b/W/ApplyAdam"
  input: "^Adam/update_Rconv2b/b/ApplyAdam"
  input: "^Adam/update_Rconv3a/W/ApplyAdam"
  input: "^Adam/update_Rconv3a/b/ApplyAdam"
  input: "^Adam/update_Rconv3b/W/ApplyAdam"
  input: "^Adam/update_Rconv3b/b/ApplyAdam"
  input: "^Adam/update_Rconv4a/W/ApplyAdam"
  input: "^Adam/update_Rconv4a/b/ApplyAdam"
  input: "^Adam/update_Rconv4b/W/ApplyAdam"
  input: "^Adam/update_Rconv4b/b/ApplyAdam"
  input: "^Adam/update_Rconv5a/W/ApplyAdam"
  input: "^Adam/update_Rconv5a/b/ApplyAdam"
  input: "^Adam/update_Rconv5b/W/ApplyAdam"
  input: "^Adam/update_Rconv5b/b/ApplyAdam"
  input: "^Adam/update_Rconv6a/W/ApplyAdam"
  input: "^Adam/update_Rconv6a/b/ApplyAdam"
  input: "^Adam/update_Rconv6b/W/ApplyAdam"
  input: "^Adam/update_Rconv6b/b/ApplyAdam"
  input: "^Adam/update_conv1/W/ApplyAdam"
  input: "^Adam/update_conv1/b/ApplyAdam"
  input: "^Adam/update_conv2/W/ApplyAdam"
  input: "^Adam/update_conv2/b/ApplyAdam"
  input: "^Adam/update_fbn1/beta/ApplyAdam"
  input: "^Adam/update_fbn1/gamma/ApplyAdam"
  input: "^Adam/update_fconv1/W/ApplyAdam"
  input: "^Adam/update_fconv1/b/ApplyAdam"
  input: "^Adam/update_fconv2/W/ApplyAdam"
  input: "^Adam/update_fconv2/b/ApplyAdam"
  input: "^Adam/update_rconv1/W/ApplyAdam"
  input: "^Adam/update_rconv1/b/ApplyAdam"
  input: "^Adam/update_rconv2/W/ApplyAdam"
  input: "^Adam/update_rconv2/b/ApplyAdam"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 270
          }
        }
        string_val: "Rbn1a/Rbn1a/moving_mean/biased"
        string_val: "Rbn1a/Rbn1a/moving_mean/local_step"
        string_val: "Rbn1a/Rbn1a/moving_variance/biased"
        string_val: "Rbn1a/Rbn1a/moving_variance/local_step"
        string_val: "Rbn1a/beta"
        string_val: "Rbn1a/beta/Adam"
        string_val: "Rbn1a/beta/Adam_1"
        string_val: "Rbn1a/gamma"
        string_val: "Rbn1a/gamma/Adam"
        string_val: "Rbn1a/gamma/Adam_1"
        string_val: "Rbn1a/moving_mean"
        string_val: "Rbn1a/moving_variance"
        string_val: "Rbn1b/Rbn1b/moving_mean/biased"
        string_val: "Rbn1b/Rbn1b/moving_mean/local_step"
        string_val: "Rbn1b/Rbn1b/moving_variance/biased"
        string_val: "Rbn1b/Rbn1b/moving_variance/local_step"
        string_val: "Rbn1b/beta"
        string_val: "Rbn1b/beta/Adam"
        string_val: "Rbn1b/beta/Adam_1"
        string_val: "Rbn1b/gamma"
        string_val: "Rbn1b/gamma/Adam"
        string_val: "Rbn1b/gamma/Adam_1"
        string_val: "Rbn1b/moving_mean"
        string_val: "Rbn1b/moving_variance"
        string_val: "Rbn2a/Rbn2a/moving_mean/biased"
        string_val: "Rbn2a/Rbn2a/moving_mean/local_step"
        string_val: "Rbn2a/Rbn2a/moving_variance/biased"
        string_val: "Rbn2a/Rbn2a/moving_variance/local_step"
        string_val: "Rbn2a/beta"
        string_val: "Rbn2a/beta/Adam"
        string_val: "Rbn2a/beta/Adam_1"
        string_val: "Rbn2a/gamma"
        string_val: "Rbn2a/gamma/Adam"
        string_val: "Rbn2a/gamma/Adam_1"
        string_val: "Rbn2a/moving_mean"
        string_val: "Rbn2a/moving_variance"
        string_val: "Rbn2b/Rbn2b/moving_mean/biased"
        string_val: "Rbn2b/Rbn2b/moving_mean/local_step"
        string_val: "Rbn2b/Rbn2b/moving_variance/biased"
        string_val: "Rbn2b/Rbn2b/moving_variance/local_step"
        string_val: "Rbn2b/beta"
        string_val: "Rbn2b/beta/Adam"
        string_val: "Rbn2b/beta/Adam_1"
        string_val: "Rbn2b/gamma"
        string_val: "Rbn2b/gamma/Adam"
        string_val: "Rbn2b/gamma/Adam_1"
        string_val: "Rbn2b/moving_mean"
        string_val: "Rbn2b/moving_variance"
        string_val: "Rbn3a/Rbn3a/moving_mean/biased"
        string_val: "Rbn3a/Rbn3a/moving_mean/local_step"
        string_val: "Rbn3a/Rbn3a/moving_variance/biased"
        string_val: "Rbn3a/Rbn3a/moving_variance/local_step"
        string_val: "Rbn3a/beta"
        string_val: "Rbn3a/beta/Adam"
        string_val: "Rbn3a/beta/Adam_1"
        string_val: "Rbn3a/gamma"
        string_val: "Rbn3a/gamma/Adam"
        string_val: "Rbn3a/gamma/Adam_1"
        string_val: "Rbn3a/moving_mean"
        string_val: "Rbn3a/moving_variance"
        string_val: "Rbn3b/Rbn3b/moving_mean/biased"
        string_val: "Rbn3b/Rbn3b/moving_mean/local_step"
        string_val: "Rbn3b/Rbn3b/moving_variance/biased"
        string_val: "Rbn3b/Rbn3b/moving_variance/local_step"
        string_val: "Rbn3b/beta"
        string_val: "Rbn3b/beta/Adam"
        string_val: "Rbn3b/beta/Adam_1"
        string_val: "Rbn3b/gamma"
        string_val: "Rbn3b/gamma/Adam"
        string_val: "Rbn3b/gamma/Adam_1"
        string_val: "Rbn3b/moving_mean"
        string_val: "Rbn3b/moving_variance"
        string_val: "Rbn4a/Rbn4a/moving_mean/biased"
        string_val: "Rbn4a/Rbn4a/moving_mean/local_step"
        string_val: "Rbn4a/Rbn4a/moving_variance/biased"
        string_val: "Rbn4a/Rbn4a/moving_variance/local_step"
        string_val: "Rbn4a/beta"
        string_val: "Rbn4a/beta/Adam"
        string_val: "Rbn4a/beta/Adam_1"
        string_val: "Rbn4a/gamma"
        string_val: "Rbn4a/gamma/Adam"
        string_val: "Rbn4a/gamma/Adam_1"
        string_val: "Rbn4a/moving_mean"
        string_val: "Rbn4a/moving_variance"
        string_val: "Rbn4b/Rbn4b/moving_mean/biased"
        string_val: "Rbn4b/Rbn4b/moving_mean/local_step"
        string_val: "Rbn4b/Rbn4b/moving_variance/biased"
        string_val: "Rbn4b/Rbn4b/moving_variance/local_step"
        string_val: "Rbn4b/beta"
        string_val: "Rbn4b/beta/Adam"
        string_val: "Rbn4b/beta/Adam_1"
        string_val: "Rbn4b/gamma"
        string_val: "Rbn4b/gamma/Adam"
        string_val: "Rbn4b/gamma/Adam_1"
        string_val: "Rbn4b/moving_mean"
        string_val: "Rbn4b/moving_variance"
        string_val: "Rbn5a/Rbn5a/moving_mean/biased"
        string_val: "Rbn5a/Rbn5a/moving_mean/local_step"
        string_val: "Rbn5a/Rbn5a/moving_variance/biased"
        string_val: "Rbn5a/Rbn5a/moving_variance/local_step"
        string_val: "Rbn5a/beta"
        string_val: "Rbn5a/beta/Adam"
        string_val: "Rbn5a/beta/Adam_1"
        string_val: "Rbn5a/gamma"
        string_val: "Rbn5a/gamma/Adam"
        string_val: "Rbn5a/gamma/Adam_1"
        string_val: "Rbn5a/moving_mean"
        string_val: "Rbn5a/moving_variance"
        string_val: "Rbn5b/Rbn5b/moving_mean/biased"
        string_val: "Rbn5b/Rbn5b/moving_mean/local_step"
        string_val: "Rbn5b/Rbn5b/moving_variance/biased"
        string_val: "Rbn5b/Rbn5b/moving_variance/local_step"
        string_val: "Rbn5b/beta"
        string_val: "Rbn5b/beta/Adam"
        string_val: "Rbn5b/beta/Adam_1"
        string_val: "Rbn5b/gamma"
        string_val: "Rbn5b/gamma/Adam"
        string_val: "Rbn5b/gamma/Adam_1"
        string_val: "Rbn5b/moving_mean"
        string_val: "Rbn5b/moving_variance"
        string_val: "Rbn6a/Rbn6a/moving_mean/biased"
        string_val: "Rbn6a/Rbn6a/moving_mean/local_step"
        string_val: "Rbn6a/Rbn6a/moving_variance/biased"
        string_val: "Rbn6a/Rbn6a/moving_variance/local_step"
        string_val: "Rbn6a/beta"
        string_val: "Rbn6a/beta/Adam"
        string_val: "Rbn6a/beta/Adam_1"
        string_val: "Rbn6a/gamma"
        string_val: "Rbn6a/gamma/Adam"
        string_val: "Rbn6a/gamma/Adam_1"
        string_val: "Rbn6a/moving_mean"
        string_val: "Rbn6a/moving_variance"
        string_val: "Rbn6b/Rbn6b/moving_mean/biased"
        string_val: "Rbn6b/Rbn6b/moving_mean/local_step"
        string_val: "Rbn6b/Rbn6b/moving_variance/biased"
        string_val: "Rbn6b/Rbn6b/moving_variance/local_step"
        string_val: "Rbn6b/beta"
        string_val: "Rbn6b/beta/Adam"
        string_val: "Rbn6b/beta/Adam_1"
        string_val: "Rbn6b/gamma"
        string_val: "Rbn6b/gamma/Adam"
        string_val: "Rbn6b/gamma/Adam_1"
        string_val: "Rbn6b/moving_mean"
        string_val: "Rbn6b/moving_variance"
        string_val: "Rconv1a/W"
        string_val: "Rconv1a/W/Adam"
        string_val: "Rconv1a/W/Adam_1"
        string_val: "Rconv1a/b"
        string_val: "Rconv1a/b/Adam"
        string_val: "Rconv1a/b/Adam_1"
        string_val: "Rconv1b/W"
        string_val: "Rconv1b/W/Adam"
        string_val: "Rconv1b/W/Adam_1"
        string_val: "Rconv1b/b"
        string_val: "Rconv1b/b/Adam"
        string_val: "Rconv1b/b/Adam_1"
        string_val: "Rconv2a/W"
        string_val: "Rconv2a/W/Adam"
        string_val: "Rconv2a/W/Adam_1"
        string_val: "Rconv2a/b"
        string_val: "Rconv2a/b/Adam"
        string_val: "Rconv2a/b/Adam_1"
        string_val: "Rconv2b/W"
        string_val: "Rconv2b/W/Adam"
        string_val: "Rconv2b/W/Adam_1"
        string_val: "Rconv2b/b"
        string_val: "Rconv2b/b/Adam"
        string_val: "Rconv2b/b/Adam_1"
        string_val: "Rconv3a/W"
        string_val: "Rconv3a/W/Adam"
        string_val: "Rconv3a/W/Adam_1"
        string_val: "Rconv3a/b"
        string_val: "Rconv3a/b/Adam"
        string_val: "Rconv3a/b/Adam_1"
        string_val: "Rconv3b/W"
        string_val: "Rconv3b/W/Adam"
        string_val: "Rconv3b/W/Adam_1"
        string_val: "Rconv3b/b"
        string_val: "Rconv3b/b/Adam"
        string_val: "Rconv3b/b/Adam_1"
        string_val: "Rconv4a/W"
        string_val: "Rconv4a/W/Adam"
        string_val: "Rconv4a/W/Adam_1"
        string_val: "Rconv4a/b"
        string_val: "Rconv4a/b/Adam"
        string_val: "Rconv4a/b/Adam_1"
        string_val: "Rconv4b/W"
        string_val: "Rconv4b/W/Adam"
        string_val: "Rconv4b/W/Adam_1"
        string_val: "Rconv4b/b"
        string_val: "Rconv4b/b/Adam"
        string_val: "Rconv4b/b/Adam_1"
        string_val: "Rconv5a/W"
        string_val: "Rconv5a/W/Adam"
        string_val: "Rconv5a/W/Adam_1"
        string_val: "Rconv5a/b"
        string_val: "Rconv5a/b/Adam"
        string_val: "Rconv5a/b/Adam_1"
        string_val: "Rconv5b/W"
        string_val: "Rconv5b/W/Adam"
        string_val: "Rconv5b/W/Adam_1"
        string_val: "Rconv5b/b"
        string_val: "Rconv5b/b/Adam"
        string_val: "Rconv5b/b/Adam_1"
        string_val: "Rconv6a/W"
        string_val: "Rconv6a/W/Adam"
        string_val: "Rconv6a/W/Adam_1"
        string_val: "Rconv6a/b"
        string_val: "Rconv6a/b/Adam"
        string_val: "Rconv6a/b/Adam_1"
        string_val: "Rconv6b/W"
        string_val: "Rconv6b/W/Adam"
        string_val: "Rconv6b/W/Adam_1"
        string_val: "Rconv6b/b"
        string_val: "Rconv6b/b/Adam"
        string_val: "Rconv6b/b/Adam_1"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "conv1/W"
        string_val: "conv1/W/Adam"
        string_val: "conv1/W/Adam_1"
        string_val: "conv1/b"
        string_val: "conv1/b/Adam"
        string_val: "conv1/b/Adam_1"
        string_val: "conv2/W"
        string_val: "conv2/W/Adam"
        string_val: "conv2/W/Adam_1"
        string_val: "conv2/b"
        string_val: "conv2/b/Adam"
        string_val: "conv2/b/Adam_1"
        string_val: "fbn1/beta"
        string_val: "fbn1/beta/Adam"
        string_val: "fbn1/beta/Adam_1"
        string_val: "fbn1/fbn1/moving_mean/biased"
        string_val: "fbn1/fbn1/moving_mean/local_step"
        string_val: "fbn1/fbn1/moving_variance/biased"
        string_val: "fbn1/fbn1/moving_variance/local_step"
        string_val: "fbn1/gamma"
        string_val: "fbn1/gamma/Adam"
        string_val: "fbn1/gamma/Adam_1"
        string_val: "fbn1/moving_mean"
        string_val: "fbn1/moving_variance"
        string_val: "fconv1/W"
        string_val: "fconv1/W/Adam"
        string_val: "fconv1/W/Adam_1"
        string_val: "fconv1/b"
        string_val: "fconv1/b/Adam"
        string_val: "fconv1/b/Adam_1"
        string_val: "fconv2/W"
        string_val: "fconv2/W/Adam"
        string_val: "fconv2/W/Adam_1"
        string_val: "fconv2/b"
        string_val: "fconv2/b/Adam"
        string_val: "fconv2/b/Adam_1"
        string_val: "filter_localexpand"
        string_val: "filter_localexpand_1"
        string_val: "filter_localexpand_2"
        string_val: "learning_rate"
        string_val: "rconv1/W"
        string_val: "rconv1/W/Adam"
        string_val: "rconv1/W/Adam_1"
        string_val: "rconv1/b"
        string_val: "rconv1/b/Adam"
        string_val: "rconv1/b/Adam_1"
        string_val: "rconv2/W"
        string_val: "rconv2/W/Adam"
        string_val: "rconv2/W/Adam_1"
        string_val: "rconv2/b"
        string_val: "rconv2/b/Adam"
        string_val: "rconv2/b/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 270
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Rbn1a/Rbn1a/moving_mean/biased"
  input: "Rbn1a/Rbn1a/moving_mean/local_step"
  input: "Rbn1a/Rbn1a/moving_variance/biased"
  input: "Rbn1a/Rbn1a/moving_variance/local_step"
  input: "Rbn1a/beta"
  input: "Rbn1a/beta/Adam"
  input: "Rbn1a/beta/Adam_1"
  input: "Rbn1a/gamma"
  input: "Rbn1a/gamma/Adam"
  input: "Rbn1a/gamma/Adam_1"
  input: "Rbn1a/moving_mean"
  input: "Rbn1a/moving_variance"
  input: "Rbn1b/Rbn1b/moving_mean/biased"
  input: "Rbn1b/Rbn1b/moving_mean/local_step"
  input: "Rbn1b/Rbn1b/moving_variance/biased"
  input: "Rbn1b/Rbn1b/moving_variance/local_step"
  input: "Rbn1b/beta"
  input: "Rbn1b/beta/Adam"
  input: "Rbn1b/beta/Adam_1"
  input: "Rbn1b/gamma"
  input: "Rbn1b/gamma/Adam"
  input: "Rbn1b/gamma/Adam_1"
  input: "Rbn1b/moving_mean"
  input: "Rbn1b/moving_variance"
  input: "Rbn2a/Rbn2a/moving_mean/biased"
  input: "Rbn2a/Rbn2a/moving_mean/local_step"
  input: "Rbn2a/Rbn2a/moving_variance/biased"
  input: "Rbn2a/Rbn2a/moving_variance/local_step"
  input: "Rbn2a/beta"
  input: "Rbn2a/beta/Adam"
  input: "Rbn2a/beta/Adam_1"
  input: "Rbn2a/gamma"
  input: "Rbn2a/gamma/Adam"
  input: "Rbn2a/gamma/Adam_1"
  input: "Rbn2a/moving_mean"
  input: "Rbn2a/moving_variance"
  input: "Rbn2b/Rbn2b/moving_mean/biased"
  input: "Rbn2b/Rbn2b/moving_mean/local_step"
  input: "Rbn2b/Rbn2b/moving_variance/biased"
  input: "Rbn2b/Rbn2b/moving_variance/local_step"
  input: "Rbn2b/beta"
  input: "Rbn2b/beta/Adam"
  input: "Rbn2b/beta/Adam_1"
  input: "Rbn2b/gamma"
  input: "Rbn2b/gamma/Adam"
  input: "Rbn2b/gamma/Adam_1"
  input: "Rbn2b/moving_mean"
  input: "Rbn2b/moving_variance"
  input: "Rbn3a/Rbn3a/moving_mean/biased"
  input: "Rbn3a/Rbn3a/moving_mean/local_step"
  input: "Rbn3a/Rbn3a/moving_variance/biased"
  input: "Rbn3a/Rbn3a/moving_variance/local_step"
  input: "Rbn3a/beta"
  input: "Rbn3a/beta/Adam"
  input: "Rbn3a/beta/Adam_1"
  input: "Rbn3a/gamma"
  input: "Rbn3a/gamma/Adam"
  input: "Rbn3a/gamma/Adam_1"
  input: "Rbn3a/moving_mean"
  input: "Rbn3a/moving_variance"
  input: "Rbn3b/Rbn3b/moving_mean/biased"
  input: "Rbn3b/Rbn3b/moving_mean/local_step"
  input: "Rbn3b/Rbn3b/moving_variance/biased"
  input: "Rbn3b/Rbn3b/moving_variance/local_step"
  input: "Rbn3b/beta"
  input: "Rbn3b/beta/Adam"
  input: "Rbn3b/beta/Adam_1"
  input: "Rbn3b/gamma"
  input: "Rbn3b/gamma/Adam"
  input: "Rbn3b/gamma/Adam_1"
  input: "Rbn3b/moving_mean"
  input: "Rbn3b/moving_variance"
  input: "Rbn4a/Rbn4a/moving_mean/biased"
  input: "Rbn4a/Rbn4a/moving_mean/local_step"
  input: "Rbn4a/Rbn4a/moving_variance/biased"
  input: "Rbn4a/Rbn4a/moving_variance/local_step"
  input: "Rbn4a/beta"
  input: "Rbn4a/beta/Adam"
  input: "Rbn4a/beta/Adam_1"
  input: "Rbn4a/gamma"
  input: "Rbn4a/gamma/Adam"
  input: "Rbn4a/gamma/Adam_1"
  input: "Rbn4a/moving_mean"
  input: "Rbn4a/moving_variance"
  input: "Rbn4b/Rbn4b/moving_mean/biased"
  input: "Rbn4b/Rbn4b/moving_mean/local_step"
  input: "Rbn4b/Rbn4b/moving_variance/biased"
  input: "Rbn4b/Rbn4b/moving_variance/local_step"
  input: "Rbn4b/beta"
  input: "Rbn4b/beta/Adam"
  input: "Rbn4b/beta/Adam_1"
  input: "Rbn4b/gamma"
  input: "Rbn4b/gamma/Adam"
  input: "Rbn4b/gamma/Adam_1"
  input: "Rbn4b/moving_mean"
  input: "Rbn4b/moving_variance"
  input: "Rbn5a/Rbn5a/moving_mean/biased"
  input: "Rbn5a/Rbn5a/moving_mean/local_step"
  input: "Rbn5a/Rbn5a/moving_variance/biased"
  input: "Rbn5a/Rbn5a/moving_variance/local_step"
  input: "Rbn5a/beta"
  input: "Rbn5a/beta/Adam"
  input: "Rbn5a/beta/Adam_1"
  input: "Rbn5a/gamma"
  input: "Rbn5a/gamma/Adam"
  input: "Rbn5a/gamma/Adam_1"
  input: "Rbn5a/moving_mean"
  input: "Rbn5a/moving_variance"
  input: "Rbn5b/Rbn5b/moving_mean/biased"
  input: "Rbn5b/Rbn5b/moving_mean/local_step"
  input: "Rbn5b/Rbn5b/moving_variance/biased"
  input: "Rbn5b/Rbn5b/moving_variance/local_step"
  input: "Rbn5b/beta"
  input: "Rbn5b/beta/Adam"
  input: "Rbn5b/beta/Adam_1"
  input: "Rbn5b/gamma"
  input: "Rbn5b/gamma/Adam"
  input: "Rbn5b/gamma/Adam_1"
  input: "Rbn5b/moving_mean"
  input: "Rbn5b/moving_variance"
  input: "Rbn6a/Rbn6a/moving_mean/biased"
  input: "Rbn6a/Rbn6a/moving_mean/local_step"
  input: "Rbn6a/Rbn6a/moving_variance/biased"
  input: "Rbn6a/Rbn6a/moving_variance/local_step"
  input: "Rbn6a/beta"
  input: "Rbn6a/beta/Adam"
  input: "Rbn6a/beta/Adam_1"
  input: "Rbn6a/gamma"
  input: "Rbn6a/gamma/Adam"
  input: "Rbn6a/gamma/Adam_1"
  input: "Rbn6a/moving_mean"
  input: "Rbn6a/moving_variance"
  input: "Rbn6b/Rbn6b/moving_mean/biased"
  input: "Rbn6b/Rbn6b/moving_mean/local_step"
  input: "Rbn6b/Rbn6b/moving_variance/biased"
  input: "Rbn6b/Rbn6b/moving_variance/local_step"
  input: "Rbn6b/beta"
  input: "Rbn6b/beta/Adam"
  input: "Rbn6b/beta/Adam_1"
  input: "Rbn6b/gamma"
  input: "Rbn6b/gamma/Adam"
  input: "Rbn6b/gamma/Adam_1"
  input: "Rbn6b/moving_mean"
  input: "Rbn6b/moving_variance"
  input: "Rconv1a/W"
  input: "Rconv1a/W/Adam"
  input: "Rconv1a/W/Adam_1"
  input: "Rconv1a/b"
  input: "Rconv1a/b/Adam"
  input: "Rconv1a/b/Adam_1"
  input: "Rconv1b/W"
  input: "Rconv1b/W/Adam"
  input: "Rconv1b/W/Adam_1"
  input: "Rconv1b/b"
  input: "Rconv1b/b/Adam"
  input: "Rconv1b/b/Adam_1"
  input: "Rconv2a/W"
  input: "Rconv2a/W/Adam"
  input: "Rconv2a/W/Adam_1"
  input: "Rconv2a/b"
  input: "Rconv2a/b/Adam"
  input: "Rconv2a/b/Adam_1"
  input: "Rconv2b/W"
  input: "Rconv2b/W/Adam"
  input: "Rconv2b/W/Adam_1"
  input: "Rconv2b/b"
  input: "Rconv2b/b/Adam"
  input: "Rconv2b/b/Adam_1"
  input: "Rconv3a/W"
  input: "Rconv3a/W/Adam"
  input: "Rconv3a/W/Adam_1"
  input: "Rconv3a/b"
  input: "Rconv3a/b/Adam"
  input: "Rconv3a/b/Adam_1"
  input: "Rconv3b/W"
  input: "Rconv3b/W/Adam"
  input: "Rconv3b/W/Adam_1"
  input: "Rconv3b/b"
  input: "Rconv3b/b/Adam"
  input: "Rconv3b/b/Adam_1"
  input: "Rconv4a/W"
  input: "Rconv4a/W/Adam"
  input: "Rconv4a/W/Adam_1"
  input: "Rconv4a/b"
  input: "Rconv4a/b/Adam"
  input: "Rconv4a/b/Adam_1"
  input: "Rconv4b/W"
  input: "Rconv4b/W/Adam"
  input: "Rconv4b/W/Adam_1"
  input: "Rconv4b/b"
  input: "Rconv4b/b/Adam"
  input: "Rconv4b/b/Adam_1"
  input: "Rconv5a/W"
  input: "Rconv5a/W/Adam"
  input: "Rconv5a/W/Adam_1"
  input: "Rconv5a/b"
  input: "Rconv5a/b/Adam"
  input: "Rconv5a/b/Adam_1"
  input: "Rconv5b/W"
  input: "Rconv5b/W/Adam"
  input: "Rconv5b/W/Adam_1"
  input: "Rconv5b/b"
  input: "Rconv5b/b/Adam"
  input: "Rconv5b/b/Adam_1"
  input: "Rconv6a/W"
  input: "Rconv6a/W/Adam"
  input: "Rconv6a/W/Adam_1"
  input: "Rconv6a/b"
  input: "Rconv6a/b/Adam"
  input: "Rconv6a/b/Adam_1"
  input: "Rconv6b/W"
  input: "Rconv6b/W/Adam"
  input: "Rconv6b/W/Adam_1"
  input: "Rconv6b/b"
  input: "Rconv6b/b/Adam"
  input: "Rconv6b/b/Adam_1"
  input: "beta1_power"
  input: "beta2_power"
  input: "conv1/W"
  input: "conv1/W/Adam"
  input: "conv1/W/Adam_1"
  input: "conv1/b"
  input: "conv1/b/Adam"
  input: "conv1/b/Adam_1"
  input: "conv2/W"
  input: "conv2/W/Adam"
  input: "conv2/W/Adam_1"
  input: "conv2/b"
  input: "conv2/b/Adam"
  input: "conv2/b/Adam_1"
  input: "fbn1/beta"
  input: "fbn1/beta/Adam"
  input: "fbn1/beta/Adam_1"
  input: "fbn1/fbn1/moving_mean/biased"
  input: "fbn1/fbn1/moving_mean/local_step"
  input: "fbn1/fbn1/moving_variance/biased"
  input: "fbn1/fbn1/moving_variance/local_step"
  input: "fbn1/gamma"
  input: "fbn1/gamma/Adam"
  input: "fbn1/gamma/Adam_1"
  input: "fbn1/moving_mean"
  input: "fbn1/moving_variance"
  input: "fconv1/W"
  input: "fconv1/W/Adam"
  input: "fconv1/W/Adam_1"
  input: "fconv1/b"
  input: "fconv1/b/Adam"
  input: "fconv1/b/Adam_1"
  input: "fconv2/W"
  input: "fconv2/W/Adam"
  input: "fconv2/W/Adam_1"
  input: "fconv2/b"
  input: "fconv2/b/Adam"
  input: "fconv2/b/Adam_1"
  input: "filter_localexpand/Read/ReadVariableOp"
  input: "filter_localexpand_1/Read/ReadVariableOp"
  input: "filter_localexpand_2/Read/ReadVariableOp"
  input: "learning_rate/Read/ReadVariableOp"
  input: "rconv1/W"
  input: "rconv1/W/Adam"
  input: "rconv1/W/Adam_1"
  input: "rconv1/b"
  input: "rconv1/b/Adam"
  input: "rconv1/b/Adam_1"
  input: "rconv2/W"
  input: "rconv2/W/Adam"
  input: "rconv2/W/Adam_1"
  input: "rconv2/b"
  input: "rconv2/b/Adam"
  input: "rconv2/b/Adam_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 270
          }
        }
        string_val: "Rbn1a/Rbn1a/moving_mean/biased"
        string_val: "Rbn1a/Rbn1a/moving_mean/local_step"
        string_val: "Rbn1a/Rbn1a/moving_variance/biased"
        string_val: "Rbn1a/Rbn1a/moving_variance/local_step"
        string_val: "Rbn1a/beta"
        string_val: "Rbn1a/beta/Adam"
        string_val: "Rbn1a/beta/Adam_1"
        string_val: "Rbn1a/gamma"
        string_val: "Rbn1a/gamma/Adam"
        string_val: "Rbn1a/gamma/Adam_1"
        string_val: "Rbn1a/moving_mean"
        string_val: "Rbn1a/moving_variance"
        string_val: "Rbn1b/Rbn1b/moving_mean/biased"
        string_val: "Rbn1b/Rbn1b/moving_mean/local_step"
        string_val: "Rbn1b/Rbn1b/moving_variance/biased"
        string_val: "Rbn1b/Rbn1b/moving_variance/local_step"
        string_val: "Rbn1b/beta"
        string_val: "Rbn1b/beta/Adam"
        string_val: "Rbn1b/beta/Adam_1"
        string_val: "Rbn1b/gamma"
        string_val: "Rbn1b/gamma/Adam"
        string_val: "Rbn1b/gamma/Adam_1"
        string_val: "Rbn1b/moving_mean"
        string_val: "Rbn1b/moving_variance"
        string_val: "Rbn2a/Rbn2a/moving_mean/biased"
        string_val: "Rbn2a/Rbn2a/moving_mean/local_step"
        string_val: "Rbn2a/Rbn2a/moving_variance/biased"
        string_val: "Rbn2a/Rbn2a/moving_variance/local_step"
        string_val: "Rbn2a/beta"
        string_val: "Rbn2a/beta/Adam"
        string_val: "Rbn2a/beta/Adam_1"
        string_val: "Rbn2a/gamma"
        string_val: "Rbn2a/gamma/Adam"
        string_val: "Rbn2a/gamma/Adam_1"
        string_val: "Rbn2a/moving_mean"
        string_val: "Rbn2a/moving_variance"
        string_val: "Rbn2b/Rbn2b/moving_mean/biased"
        string_val: "Rbn2b/Rbn2b/moving_mean/local_step"
        string_val: "Rbn2b/Rbn2b/moving_variance/biased"
        string_val: "Rbn2b/Rbn2b/moving_variance/local_step"
        string_val: "Rbn2b/beta"
        string_val: "Rbn2b/beta/Adam"
        string_val: "Rbn2b/beta/Adam_1"
        string_val: "Rbn2b/gamma"
        string_val: "Rbn2b/gamma/Adam"
        string_val: "Rbn2b/gamma/Adam_1"
        string_val: "Rbn2b/moving_mean"
        string_val: "Rbn2b/moving_variance"
        string_val: "Rbn3a/Rbn3a/moving_mean/biased"
        string_val: "Rbn3a/Rbn3a/moving_mean/local_step"
        string_val: "Rbn3a/Rbn3a/moving_variance/biased"
        string_val: "Rbn3a/Rbn3a/moving_variance/local_step"
        string_val: "Rbn3a/beta"
        string_val: "Rbn3a/beta/Adam"
        string_val: "Rbn3a/beta/Adam_1"
        string_val: "Rbn3a/gamma"
        string_val: "Rbn3a/gamma/Adam"
        string_val: "Rbn3a/gamma/Adam_1"
        string_val: "Rbn3a/moving_mean"
        string_val: "Rbn3a/moving_variance"
        string_val: "Rbn3b/Rbn3b/moving_mean/biased"
        string_val: "Rbn3b/Rbn3b/moving_mean/local_step"
        string_val: "Rbn3b/Rbn3b/moving_variance/biased"
        string_val: "Rbn3b/Rbn3b/moving_variance/local_step"
        string_val: "Rbn3b/beta"
        string_val: "Rbn3b/beta/Adam"
        string_val: "Rbn3b/beta/Adam_1"
        string_val: "Rbn3b/gamma"
        string_val: "Rbn3b/gamma/Adam"
        string_val: "Rbn3b/gamma/Adam_1"
        string_val: "Rbn3b/moving_mean"
        string_val: "Rbn3b/moving_variance"
        string_val: "Rbn4a/Rbn4a/moving_mean/biased"
        string_val: "Rbn4a/Rbn4a/moving_mean/local_step"
        string_val: "Rbn4a/Rbn4a/moving_variance/biased"
        string_val: "Rbn4a/Rbn4a/moving_variance/local_step"
        string_val: "Rbn4a/beta"
        string_val: "Rbn4a/beta/Adam"
        string_val: "Rbn4a/beta/Adam_1"
        string_val: "Rbn4a/gamma"
        string_val: "Rbn4a/gamma/Adam"
        string_val: "Rbn4a/gamma/Adam_1"
        string_val: "Rbn4a/moving_mean"
        string_val: "Rbn4a/moving_variance"
        string_val: "Rbn4b/Rbn4b/moving_mean/biased"
        string_val: "Rbn4b/Rbn4b/moving_mean/local_step"
        string_val: "Rbn4b/Rbn4b/moving_variance/biased"
        string_val: "Rbn4b/Rbn4b/moving_variance/local_step"
        string_val: "Rbn4b/beta"
        string_val: "Rbn4b/beta/Adam"
        string_val: "Rbn4b/beta/Adam_1"
        string_val: "Rbn4b/gamma"
        string_val: "Rbn4b/gamma/Adam"
        string_val: "Rbn4b/gamma/Adam_1"
        string_val: "Rbn4b/moving_mean"
        string_val: "Rbn4b/moving_variance"
        string_val: "Rbn5a/Rbn5a/moving_mean/biased"
        string_val: "Rbn5a/Rbn5a/moving_mean/local_step"
        string_val: "Rbn5a/Rbn5a/moving_variance/biased"
        string_val: "Rbn5a/Rbn5a/moving_variance/local_step"
        string_val: "Rbn5a/beta"
        string_val: "Rbn5a/beta/Adam"
        string_val: "Rbn5a/beta/Adam_1"
        string_val: "Rbn5a/gamma"
        string_val: "Rbn5a/gamma/Adam"
        string_val: "Rbn5a/gamma/Adam_1"
        string_val: "Rbn5a/moving_mean"
        string_val: "Rbn5a/moving_variance"
        string_val: "Rbn5b/Rbn5b/moving_mean/biased"
        string_val: "Rbn5b/Rbn5b/moving_mean/local_step"
        string_val: "Rbn5b/Rbn5b/moving_variance/biased"
        string_val: "Rbn5b/Rbn5b/moving_variance/local_step"
        string_val: "Rbn5b/beta"
        string_val: "Rbn5b/beta/Adam"
        string_val: "Rbn5b/beta/Adam_1"
        string_val: "Rbn5b/gamma"
        string_val: "Rbn5b/gamma/Adam"
        string_val: "Rbn5b/gamma/Adam_1"
        string_val: "Rbn5b/moving_mean"
        string_val: "Rbn5b/moving_variance"
        string_val: "Rbn6a/Rbn6a/moving_mean/biased"
        string_val: "Rbn6a/Rbn6a/moving_mean/local_step"
        string_val: "Rbn6a/Rbn6a/moving_variance/biased"
        string_val: "Rbn6a/Rbn6a/moving_variance/local_step"
        string_val: "Rbn6a/beta"
        string_val: "Rbn6a/beta/Adam"
        string_val: "Rbn6a/beta/Adam_1"
        string_val: "Rbn6a/gamma"
        string_val: "Rbn6a/gamma/Adam"
        string_val: "Rbn6a/gamma/Adam_1"
        string_val: "Rbn6a/moving_mean"
        string_val: "Rbn6a/moving_variance"
        string_val: "Rbn6b/Rbn6b/moving_mean/biased"
        string_val: "Rbn6b/Rbn6b/moving_mean/local_step"
        string_val: "Rbn6b/Rbn6b/moving_variance/biased"
        string_val: "Rbn6b/Rbn6b/moving_variance/local_step"
        string_val: "Rbn6b/beta"
        string_val: "Rbn6b/beta/Adam"
        string_val: "Rbn6b/beta/Adam_1"
        string_val: "Rbn6b/gamma"
        string_val: "Rbn6b/gamma/Adam"
        string_val: "Rbn6b/gamma/Adam_1"
        string_val: "Rbn6b/moving_mean"
        string_val: "Rbn6b/moving_variance"
        string_val: "Rconv1a/W"
        string_val: "Rconv1a/W/Adam"
        string_val: "Rconv1a/W/Adam_1"
        string_val: "Rconv1a/b"
        string_val: "Rconv1a/b/Adam"
        string_val: "Rconv1a/b/Adam_1"
        string_val: "Rconv1b/W"
        string_val: "Rconv1b/W/Adam"
        string_val: "Rconv1b/W/Adam_1"
        string_val: "Rconv1b/b"
        string_val: "Rconv1b/b/Adam"
        string_val: "Rconv1b/b/Adam_1"
        string_val: "Rconv2a/W"
        string_val: "Rconv2a/W/Adam"
        string_val: "Rconv2a/W/Adam_1"
        string_val: "Rconv2a/b"
        string_val: "Rconv2a/b/Adam"
        string_val: "Rconv2a/b/Adam_1"
        string_val: "Rconv2b/W"
        string_val: "Rconv2b/W/Adam"
        string_val: "Rconv2b/W/Adam_1"
        string_val: "Rconv2b/b"
        string_val: "Rconv2b/b/Adam"
        string_val: "Rconv2b/b/Adam_1"
        string_val: "Rconv3a/W"
        string_val: "Rconv3a/W/Adam"
        string_val: "Rconv3a/W/Adam_1"
        string_val: "Rconv3a/b"
        string_val: "Rconv3a/b/Adam"
        string_val: "Rconv3a/b/Adam_1"
        string_val: "Rconv3b/W"
        string_val: "Rconv3b/W/Adam"
        string_val: "Rconv3b/W/Adam_1"
        string_val: "Rconv3b/b"
        string_val: "Rconv3b/b/Adam"
        string_val: "Rconv3b/b/Adam_1"
        string_val: "Rconv4a/W"
        string_val: "Rconv4a/W/Adam"
        string_val: "Rconv4a/W/Adam_1"
        string_val: "Rconv4a/b"
        string_val: "Rconv4a/b/Adam"
        string_val: "Rconv4a/b/Adam_1"
        string_val: "Rconv4b/W"
        string_val: "Rconv4b/W/Adam"
        string_val: "Rconv4b/W/Adam_1"
        string_val: "Rconv4b/b"
        string_val: "Rconv4b/b/Adam"
        string_val: "Rconv4b/b/Adam_1"
        string_val: "Rconv5a/W"
        string_val: "Rconv5a/W/Adam"
        string_val: "Rconv5a/W/Adam_1"
        string_val: "Rconv5a/b"
        string_val: "Rconv5a/b/Adam"
        string_val: "Rconv5a/b/Adam_1"
        string_val: "Rconv5b/W"
        string_val: "Rconv5b/W/Adam"
        string_val: "Rconv5b/W/Adam_1"
        string_val: "Rconv5b/b"
        string_val: "Rconv5b/b/Adam"
        string_val: "Rconv5b/b/Adam_1"
        string_val: "Rconv6a/W"
        string_val: "Rconv6a/W/Adam"
        string_val: "Rconv6a/W/Adam_1"
        string_val: "Rconv6a/b"
        string_val: "Rconv6a/b/Adam"
        string_val: "Rconv6a/b/Adam_1"
        string_val: "Rconv6b/W"
        string_val: "Rconv6b/W/Adam"
        string_val: "Rconv6b/W/Adam_1"
        string_val: "Rconv6b/b"
        string_val: "Rconv6b/b/Adam"
        string_val: "Rconv6b/b/Adam_1"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "conv1/W"
        string_val: "conv1/W/Adam"
        string_val: "conv1/W/Adam_1"
        string_val: "conv1/b"
        string_val: "conv1/b/Adam"
        string_val: "conv1/b/Adam_1"
        string_val: "conv2/W"
        string_val: "conv2/W/Adam"
        string_val: "conv2/W/Adam_1"
        string_val: "conv2/b"
        string_val: "conv2/b/Adam"
        string_val: "conv2/b/Adam_1"
        string_val: "fbn1/beta"
        string_val: "fbn1/beta/Adam"
        string_val: "fbn1/beta/Adam_1"
        string_val: "fbn1/fbn1/moving_mean/biased"
        string_val: "fbn1/fbn1/moving_mean/local_step"
        string_val: "fbn1/fbn1/moving_variance/biased"
        string_val: "fbn1/fbn1/moving_variance/local_step"
        string_val: "fbn1/gamma"
        string_val: "fbn1/gamma/Adam"
        string_val: "fbn1/gamma/Adam_1"
        string_val: "fbn1/moving_mean"
        string_val: "fbn1/moving_variance"
        string_val: "fconv1/W"
        string_val: "fconv1/W/Adam"
        string_val: "fconv1/W/Adam_1"
        string_val: "fconv1/b"
        string_val: "fconv1/b/Adam"
        string_val: "fconv1/b/Adam_1"
        string_val: "fconv2/W"
        string_val: "fconv2/W/Adam"
        string_val: "fconv2/W/Adam_1"
        string_val: "fconv2/b"
        string_val: "fconv2/b/Adam"
        string_val: "fconv2/b/Adam_1"
        string_val: "filter_localexpand"
        string_val: "filter_localexpand_1"
        string_val: "filter_localexpand_2"
        string_val: "learning_rate"
        string_val: "rconv1/W"
        string_val: "rconv1/W/Adam"
        string_val: "rconv1/W/Adam_1"
        string_val: "rconv1/b"
        string_val: "rconv1/b/Adam"
        string_val: "rconv1/b/Adam_1"
        string_val: "rconv2/W"
        string_val: "rconv2/W/Adam"
        string_val: "rconv2/W/Adam_1"
        string_val: "rconv2/b"
        string_val: "rconv2/b/Adam"
        string_val: "rconv2/b/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 270
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Rbn1a/Rbn1a/moving_mean/biased"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Rbn1a/Rbn1a/moving_mean/local_step"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Rbn1a/Rbn1a/moving_variance/biased"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Rbn1a/Rbn1a/moving_variance/local_step"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Rbn1a/beta"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Rbn1a/beta/Adam"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Rbn1a/beta/Adam_1"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Rbn1a/gamma"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Rbn1a/gamma/Adam"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Rbn1a/gamma/Adam_1"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "Rbn1a/moving_mean"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "Rbn1a/moving_variance"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "Rbn1b/Rbn1b/moving_mean/biased"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "Rbn1b/Rbn1b/moving_mean/local_step"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "Rbn1b/Rbn1b/moving_variance/biased"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "Rbn1b/Rbn1b/moving_variance/local_step"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "Rbn1b/beta"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "Rbn1b/beta/Adam"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "Rbn1b/beta/Adam_1"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "Rbn1b/gamma"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "Rbn1b/gamma/Adam"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "Rbn1b/gamma/Adam_1"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "Rbn1b/moving_mean"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "Rbn1b/moving_variance"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "Rbn2a/Rbn2a/moving_mean/biased"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "Rbn2a/Rbn2a/moving_mean/local_step"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "Rbn2a/Rbn2a/moving_variance/biased"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "Rbn2a/Rbn2a/moving_variance/local_step"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "Rbn2a/beta"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "Rbn2a/beta/Adam"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "Rbn2a/beta/Adam_1"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "Rbn2a/gamma"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "Rbn2a/gamma/Adam"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "Rbn2a/gamma/Adam_1"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "Rbn2a/moving_mean"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "Rbn2a/moving_variance"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "Rbn2b/Rbn2b/moving_mean/biased"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "Rbn2b/Rbn2b/moving_mean/local_step"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "Rbn2b/Rbn2b/moving_variance/biased"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "Rbn2b/Rbn2b/moving_variance/local_step"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "Rbn2b/beta"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "Rbn2b/beta/Adam"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "Rbn2b/beta/Adam_1"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "Rbn2b/gamma"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "Rbn2b/gamma/Adam"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "Rbn2b/gamma/Adam_1"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "Rbn2b/moving_mean"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "Rbn2b/moving_variance"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn2b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "Rbn3a/Rbn3a/moving_mean/biased"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "Rbn3a/Rbn3a/moving_mean/local_step"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "Rbn3a/Rbn3a/moving_variance/biased"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "Rbn3a/Rbn3a/moving_variance/local_step"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "Rbn3a/beta"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "Rbn3a/beta/Adam"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "Rbn3a/beta/Adam_1"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "Rbn3a/gamma"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "Rbn3a/gamma/Adam"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "Rbn3a/gamma/Adam_1"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "Rbn3a/moving_mean"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "Rbn3a/moving_variance"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "Rbn3b/Rbn3b/moving_mean/biased"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "Rbn3b/Rbn3b/moving_mean/local_step"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "Rbn3b/Rbn3b/moving_variance/biased"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "Rbn3b/Rbn3b/moving_variance/local_step"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "Rbn3b/beta"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "Rbn3b/beta/Adam"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "Rbn3b/beta/Adam_1"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "Rbn3b/gamma"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "Rbn3b/gamma/Adam"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "Rbn3b/gamma/Adam_1"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "Rbn3b/moving_mean"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "Rbn3b/moving_variance"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn3b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "Rbn4a/Rbn4a/moving_mean/biased"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "Rbn4a/Rbn4a/moving_mean/local_step"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "Rbn4a/Rbn4a/moving_variance/biased"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "Rbn4a/Rbn4a/moving_variance/local_step"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "Rbn4a/beta"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "Rbn4a/beta/Adam"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "Rbn4a/beta/Adam_1"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "Rbn4a/gamma"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "Rbn4a/gamma/Adam"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "Rbn4a/gamma/Adam_1"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "Rbn4a/moving_mean"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "Rbn4a/moving_variance"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "Rbn4b/Rbn4b/moving_mean/biased"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "Rbn4b/Rbn4b/moving_mean/local_step"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "Rbn4b/Rbn4b/moving_variance/biased"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "Rbn4b/Rbn4b/moving_variance/local_step"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "Rbn4b/beta"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "Rbn4b/beta/Adam"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "Rbn4b/beta/Adam_1"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "Rbn4b/gamma"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "Rbn4b/gamma/Adam"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "Rbn4b/gamma/Adam_1"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "Rbn4b/moving_mean"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "Rbn4b/moving_variance"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn4b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "Rbn5a/Rbn5a/moving_mean/biased"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "Rbn5a/Rbn5a/moving_mean/local_step"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "Rbn5a/Rbn5a/moving_variance/biased"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "Rbn5a/Rbn5a/moving_variance/local_step"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "Rbn5a/beta"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "Rbn5a/beta/Adam"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "Rbn5a/beta/Adam_1"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "Rbn5a/gamma"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "Rbn5a/gamma/Adam"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "Rbn5a/gamma/Adam_1"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "Rbn5a/moving_mean"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "Rbn5a/moving_variance"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "Rbn5b/Rbn5b/moving_mean/biased"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "Rbn5b/Rbn5b/moving_mean/local_step"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "Rbn5b/Rbn5b/moving_variance/biased"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "Rbn5b/Rbn5b/moving_variance/local_step"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "Rbn5b/beta"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "Rbn5b/beta/Adam"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "Rbn5b/beta/Adam_1"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "Rbn5b/gamma"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "Rbn5b/gamma/Adam"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "Rbn5b/gamma/Adam_1"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "Rbn5b/moving_mean"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "Rbn5b/moving_variance"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn5b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "Rbn6a/Rbn6a/moving_mean/biased"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "Rbn6a/Rbn6a/moving_mean/local_step"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "Rbn6a/Rbn6a/moving_variance/biased"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "Rbn6a/Rbn6a/moving_variance/local_step"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "Rbn6a/beta"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "Rbn6a/beta/Adam"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "Rbn6a/beta/Adam_1"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "Rbn6a/gamma"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "Rbn6a/gamma/Adam"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "Rbn6a/gamma/Adam_1"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "Rbn6a/moving_mean"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "Rbn6a/moving_variance"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6a/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "Rbn6b/Rbn6b/moving_mean/biased"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "Rbn6b/Rbn6b/moving_mean/local_step"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "Rbn6b/Rbn6b/moving_variance/biased"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "Rbn6b/Rbn6b/moving_variance/local_step"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "Rbn6b/beta"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "Rbn6b/beta/Adam"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "Rbn6b/beta/Adam_1"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "Rbn6b/gamma"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "Rbn6b/gamma/Adam"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "Rbn6b/gamma/Adam_1"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "Rbn6b/moving_mean"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "Rbn6b/moving_variance"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn6b/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "Rconv1a/W"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "Rconv1a/W/Adam"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "Rconv1a/W/Adam_1"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "Rconv1a/b"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "Rconv1a/b/Adam"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "Rconv1a/b/Adam_1"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "Rconv1b/W"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "Rconv1b/W/Adam"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "Rconv1b/W/Adam_1"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "Rconv1b/b"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "Rconv1b/b/Adam"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "Rconv1b/b/Adam_1"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv1b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "Rconv2a/W"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "Rconv2a/W/Adam"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "Rconv2a/W/Adam_1"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "Rconv2a/b"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "Rconv2a/b/Adam"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "Rconv2a/b/Adam_1"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "Rconv2b/W"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "Rconv2b/W/Adam"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "Rconv2b/W/Adam_1"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "Rconv2b/b"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "Rconv2b/b/Adam"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "Rconv2b/b/Adam_1"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv2b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "Rconv3a/W"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "Rconv3a/W/Adam"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "Rconv3a/W/Adam_1"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "Rconv3a/b"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "Rconv3a/b/Adam"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "Rconv3a/b/Adam_1"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "Rconv3b/W"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "Rconv3b/W/Adam"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "Rconv3b/W/Adam_1"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "Rconv3b/b"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "Rconv3b/b/Adam"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "Rconv3b/b/Adam_1"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv3b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "Rconv4a/W"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "Rconv4a/W/Adam"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "Rconv4a/W/Adam_1"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "Rconv4a/b"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "Rconv4a/b/Adam"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "Rconv4a/b/Adam_1"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "Rconv4b/W"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "Rconv4b/W/Adam"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "Rconv4b/W/Adam_1"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "Rconv4b/b"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "Rconv4b/b/Adam"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "Rconv4b/b/Adam_1"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv4b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "Rconv5a/W"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "Rconv5a/W/Adam"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "Rconv5a/W/Adam_1"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "Rconv5a/b"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "Rconv5a/b/Adam"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "Rconv5a/b/Adam_1"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "Rconv5b/W"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "Rconv5b/W/Adam"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "Rconv5b/W/Adam_1"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "Rconv5b/b"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "Rconv5b/b/Adam"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "Rconv5b/b/Adam_1"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv5b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "Rconv6a/W"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "Rconv6a/W/Adam"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "Rconv6a/W/Adam_1"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "Rconv6a/b"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "Rconv6a/b/Adam"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "Rconv6a/b/Adam_1"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6a/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "Rconv6b/W"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "Rconv6b/W/Adam"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "Rconv6b/W/Adam_1"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "Rconv6b/b"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "Rconv6b/b/Adam"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "Rconv6b/b/Adam_1"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rconv6b/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Rbn1a/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "conv1/W"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "conv1/W/Adam"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "conv1/W/Adam_1"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_221"
  op: "Assign"
  input: "conv1/b"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_222"
  op: "Assign"
  input: "conv1/b/Adam"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_223"
  op: "Assign"
  input: "conv1/b/Adam_1"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_224"
  op: "Assign"
  input: "conv2/W"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_225"
  op: "Assign"
  input: "conv2/W/Adam"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_226"
  op: "Assign"
  input: "conv2/W/Adam_1"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_227"
  op: "Assign"
  input: "conv2/b"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_228"
  op: "Assign"
  input: "conv2/b/Adam"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_229"
  op: "Assign"
  input: "conv2/b/Adam_1"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_230"
  op: "Assign"
  input: "fbn1/beta"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_231"
  op: "Assign"
  input: "fbn1/beta/Adam"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_232"
  op: "Assign"
  input: "fbn1/beta/Adam_1"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_233"
  op: "Assign"
  input: "fbn1/fbn1/moving_mean/biased"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_234"
  op: "Assign"
  input: "fbn1/fbn1/moving_mean/local_step"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_235"
  op: "Assign"
  input: "fbn1/fbn1/moving_variance/biased"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_236"
  op: "Assign"
  input: "fbn1/fbn1/moving_variance/local_step"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_237"
  op: "Assign"
  input: "fbn1/gamma"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_238"
  op: "Assign"
  input: "fbn1/gamma/Adam"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_239"
  op: "Assign"
  input: "fbn1/gamma/Adam_1"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_240"
  op: "Assign"
  input: "fbn1/moving_mean"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_241"
  op: "Assign"
  input: "fbn1/moving_variance"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fbn1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_242"
  op: "Assign"
  input: "fconv1/W"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_243"
  op: "Assign"
  input: "fconv1/W/Adam"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_244"
  op: "Assign"
  input: "fconv1/W/Adam_1"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_245"
  op: "Assign"
  input: "fconv1/b"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_246"
  op: "Assign"
  input: "fconv1/b/Adam"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_247"
  op: "Assign"
  input: "fconv1/b/Adam_1"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_248"
  op: "Assign"
  input: "fconv2/W"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_249"
  op: "Assign"
  input: "fconv2/W/Adam"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_250"
  op: "Assign"
  input: "fconv2/W/Adam_1"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_251"
  op: "Assign"
  input: "fconv2/b"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_252"
  op: "Assign"
  input: "fconv2/b/Adam"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_253"
  op: "Assign"
  input: "fconv2/b/Adam_1"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "filter_localexpand"
  input: "save/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "filter_localexpand_1"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "filter_localexpand_2"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "learning_rate"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Assign_254"
  op: "Assign"
  input: "rconv1/W"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_255"
  op: "Assign"
  input: "rconv1/W/Adam"
  input: "save/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_256"
  op: "Assign"
  input: "rconv1/W/Adam_1"
  input: "save/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_257"
  op: "Assign"
  input: "rconv1/b"
  input: "save/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_258"
  op: "Assign"
  input: "rconv1/b/Adam"
  input: "save/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_259"
  op: "Assign"
  input: "rconv1/b/Adam_1"
  input: "save/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_260"
  op: "Assign"
  input: "rconv2/W"
  input: "save/RestoreV2:264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_261"
  op: "Assign"
  input: "rconv2/W/Adam"
  input: "save/RestoreV2:265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_262"
  op: "Assign"
  input: "rconv2/W/Adam_1"
  input: "save/RestoreV2:266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_263"
  op: "Assign"
  input: "rconv2/b"
  input: "save/RestoreV2:267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_264"
  op: "Assign"
  input: "rconv2/b/Adam"
  input: "save/RestoreV2:268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_265"
  op: "Assign"
  input: "rconv2/b/Adam_1"
  input: "save/RestoreV2:269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_3"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_14"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_15"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_16"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_17"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_18"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_19"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_21"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_22"
  input: "^save/Assign_220"
  input: "^save/Assign_221"
  input: "^save/Assign_222"
  input: "^save/Assign_223"
  input: "^save/Assign_224"
  input: "^save/Assign_225"
  input: "^save/Assign_226"
  input: "^save/Assign_227"
  input: "^save/Assign_228"
  input: "^save/Assign_229"
  input: "^save/Assign_23"
  input: "^save/Assign_230"
  input: "^save/Assign_231"
  input: "^save/Assign_232"
  input: "^save/Assign_233"
  input: "^save/Assign_234"
  input: "^save/Assign_235"
  input: "^save/Assign_236"
  input: "^save/Assign_237"
  input: "^save/Assign_238"
  input: "^save/Assign_239"
  input: "^save/Assign_24"
  input: "^save/Assign_240"
  input: "^save/Assign_241"
  input: "^save/Assign_242"
  input: "^save/Assign_243"
  input: "^save/Assign_244"
  input: "^save/Assign_245"
  input: "^save/Assign_246"
  input: "^save/Assign_247"
  input: "^save/Assign_248"
  input: "^save/Assign_249"
  input: "^save/Assign_25"
  input: "^save/Assign_250"
  input: "^save/Assign_251"
  input: "^save/Assign_252"
  input: "^save/Assign_253"
  input: "^save/Assign_254"
  input: "^save/Assign_255"
  input: "^save/Assign_256"
  input: "^save/Assign_257"
  input: "^save/Assign_258"
  input: "^save/Assign_259"
  input: "^save/Assign_26"
  input: "^save/Assign_260"
  input: "^save/Assign_261"
  input: "^save/Assign_262"
  input: "^save/Assign_263"
  input: "^save/Assign_264"
  input: "^save/Assign_265"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
}
node {
  name: "init"
  op: "NoOp"
  input: "^Rbn1a/Rbn1a/moving_mean/biased/Assign"
  input: "^Rbn1a/Rbn1a/moving_mean/local_step/Assign"
  input: "^Rbn1a/Rbn1a/moving_variance/biased/Assign"
  input: "^Rbn1a/Rbn1a/moving_variance/local_step/Assign"
  input: "^Rbn1a/beta/Adam/Assign"
  input: "^Rbn1a/beta/Adam_1/Assign"
  input: "^Rbn1a/beta/Assign"
  input: "^Rbn1a/gamma/Adam/Assign"
  input: "^Rbn1a/gamma/Adam_1/Assign"
  input: "^Rbn1a/gamma/Assign"
  input: "^Rbn1a/moving_mean/Assign"
  input: "^Rbn1a/moving_variance/Assign"
  input: "^Rbn1b/Rbn1b/moving_mean/biased/Assign"
  input: "^Rbn1b/Rbn1b/moving_mean/local_step/Assign"
  input: "^Rbn1b/Rbn1b/moving_variance/biased/Assign"
  input: "^Rbn1b/Rbn1b/moving_variance/local_step/Assign"
  input: "^Rbn1b/beta/Adam/Assign"
  input: "^Rbn1b/beta/Adam_1/Assign"
  input: "^Rbn1b/beta/Assign"
  input: "^Rbn1b/gamma/Adam/Assign"
  input: "^Rbn1b/gamma/Adam_1/Assign"
  input: "^Rbn1b/gamma/Assign"
  input: "^Rbn1b/moving_mean/Assign"
  input: "^Rbn1b/moving_variance/Assign"
  input: "^Rbn2a/Rbn2a/moving_mean/biased/Assign"
  input: "^Rbn2a/Rbn2a/moving_mean/local_step/Assign"
  input: "^Rbn2a/Rbn2a/moving_variance/biased/Assign"
  input: "^Rbn2a/Rbn2a/moving_variance/local_step/Assign"
  input: "^Rbn2a/beta/Adam/Assign"
  input: "^Rbn2a/beta/Adam_1/Assign"
  input: "^Rbn2a/beta/Assign"
  input: "^Rbn2a/gamma/Adam/Assign"
  input: "^Rbn2a/gamma/Adam_1/Assign"
  input: "^Rbn2a/gamma/Assign"
  input: "^Rbn2a/moving_mean/Assign"
  input: "^Rbn2a/moving_variance/Assign"
  input: "^Rbn2b/Rbn2b/moving_mean/biased/Assign"
  input: "^Rbn2b/Rbn2b/moving_mean/local_step/Assign"
  input: "^Rbn2b/Rbn2b/moving_variance/biased/Assign"
  input: "^Rbn2b/Rbn2b/moving_variance/local_step/Assign"
  input: "^Rbn2b/beta/Adam/Assign"
  input: "^Rbn2b/beta/Adam_1/Assign"
  input: "^Rbn2b/beta/Assign"
  input: "^Rbn2b/gamma/Adam/Assign"
  input: "^Rbn2b/gamma/Adam_1/Assign"
  input: "^Rbn2b/gamma/Assign"
  input: "^Rbn2b/moving_mean/Assign"
  input: "^Rbn2b/moving_variance/Assign"
  input: "^Rbn3a/Rbn3a/moving_mean/biased/Assign"
  input: "^Rbn3a/Rbn3a/moving_mean/local_step/Assign"
  input: "^Rbn3a/Rbn3a/moving_variance/biased/Assign"
  input: "^Rbn3a/Rbn3a/moving_variance/local_step/Assign"
  input: "^Rbn3a/beta/Adam/Assign"
  input: "^Rbn3a/beta/Adam_1/Assign"
  input: "^Rbn3a/beta/Assign"
  input: "^Rbn3a/gamma/Adam/Assign"
  input: "^Rbn3a/gamma/Adam_1/Assign"
  input: "^Rbn3a/gamma/Assign"
  input: "^Rbn3a/moving_mean/Assign"
  input: "^Rbn3a/moving_variance/Assign"
  input: "^Rbn3b/Rbn3b/moving_mean/biased/Assign"
  input: "^Rbn3b/Rbn3b/moving_mean/local_step/Assign"
  input: "^Rbn3b/Rbn3b/moving_variance/biased/Assign"
  input: "^Rbn3b/Rbn3b/moving_variance/local_step/Assign"
  input: "^Rbn3b/beta/Adam/Assign"
  input: "^Rbn3b/beta/Adam_1/Assign"
  input: "^Rbn3b/beta/Assign"
  input: "^Rbn3b/gamma/Adam/Assign"
  input: "^Rbn3b/gamma/Adam_1/Assign"
  input: "^Rbn3b/gamma/Assign"
  input: "^Rbn3b/moving_mean/Assign"
  input: "^Rbn3b/moving_variance/Assign"
  input: "^Rbn4a/Rbn4a/moving_mean/biased/Assign"
  input: "^Rbn4a/Rbn4a/moving_mean/local_step/Assign"
  input: "^Rbn4a/Rbn4a/moving_variance/biased/Assign"
  input: "^Rbn4a/Rbn4a/moving_variance/local_step/Assign"
  input: "^Rbn4a/beta/Adam/Assign"
  input: "^Rbn4a/beta/Adam_1/Assign"
  input: "^Rbn4a/beta/Assign"
  input: "^Rbn4a/gamma/Adam/Assign"
  input: "^Rbn4a/gamma/Adam_1/Assign"
  input: "^Rbn4a/gamma/Assign"
  input: "^Rbn4a/moving_mean/Assign"
  input: "^Rbn4a/moving_variance/Assign"
  input: "^Rbn4b/Rbn4b/moving_mean/biased/Assign"
  input: "^Rbn4b/Rbn4b/moving_mean/local_step/Assign"
  input: "^Rbn4b/Rbn4b/moving_variance/biased/Assign"
  input: "^Rbn4b/Rbn4b/moving_variance/local_step/Assign"
  input: "^Rbn4b/beta/Adam/Assign"
  input: "^Rbn4b/beta/Adam_1/Assign"
  input: "^Rbn4b/beta/Assign"
  input: "^Rbn4b/gamma/Adam/Assign"
  input: "^Rbn4b/gamma/Adam_1/Assign"
  input: "^Rbn4b/gamma/Assign"
  input: "^Rbn4b/moving_mean/Assign"
  input: "^Rbn4b/moving_variance/Assign"
  input: "^Rbn5a/Rbn5a/moving_mean/biased/Assign"
  input: "^Rbn5a/Rbn5a/moving_mean/local_step/Assign"
  input: "^Rbn5a/Rbn5a/moving_variance/biased/Assign"
  input: "^Rbn5a/Rbn5a/moving_variance/local_step/Assign"
  input: "^Rbn5a/beta/Adam/Assign"
  input: "^Rbn5a/beta/Adam_1/Assign"
  input: "^Rbn5a/beta/Assign"
  input: "^Rbn5a/gamma/Adam/Assign"
  input: "^Rbn5a/gamma/Adam_1/Assign"
  input: "^Rbn5a/gamma/Assign"
  input: "^Rbn5a/moving_mean/Assign"
  input: "^Rbn5a/moving_variance/Assign"
  input: "^Rbn5b/Rbn5b/moving_mean/biased/Assign"
  input: "^Rbn5b/Rbn5b/moving_mean/local_step/Assign"
  input: "^Rbn5b/Rbn5b/moving_variance/biased/Assign"
  input: "^Rbn5b/Rbn5b/moving_variance/local_step/Assign"
  input: "^Rbn5b/beta/Adam/Assign"
  input: "^Rbn5b/beta/Adam_1/Assign"
  input: "^Rbn5b/beta/Assign"
  input: "^Rbn5b/gamma/Adam/Assign"
  input: "^Rbn5b/gamma/Adam_1/Assign"
  input: "^Rbn5b/gamma/Assign"
  input: "^Rbn5b/moving_mean/Assign"
  input: "^Rbn5b/moving_variance/Assign"
  input: "^Rbn6a/Rbn6a/moving_mean/biased/Assign"
  input: "^Rbn6a/Rbn6a/moving_mean/local_step/Assign"
  input: "^Rbn6a/Rbn6a/moving_variance/biased/Assign"
  input: "^Rbn6a/Rbn6a/moving_variance/local_step/Assign"
  input: "^Rbn6a/beta/Adam/Assign"
  input: "^Rbn6a/beta/Adam_1/Assign"
  input: "^Rbn6a/beta/Assign"
  input: "^Rbn6a/gamma/Adam/Assign"
  input: "^Rbn6a/gamma/Adam_1/Assign"
  input: "^Rbn6a/gamma/Assign"
  input: "^Rbn6a/moving_mean/Assign"
  input: "^Rbn6a/moving_variance/Assign"
  input: "^Rbn6b/Rbn6b/moving_mean/biased/Assign"
  input: "^Rbn6b/Rbn6b/moving_mean/local_step/Assign"
  input: "^Rbn6b/Rbn6b/moving_variance/biased/Assign"
  input: "^Rbn6b/Rbn6b/moving_variance/local_step/Assign"
  input: "^Rbn6b/beta/Adam/Assign"
  input: "^Rbn6b/beta/Adam_1/Assign"
  input: "^Rbn6b/beta/Assign"
  input: "^Rbn6b/gamma/Adam/Assign"
  input: "^Rbn6b/gamma/Adam_1/Assign"
  input: "^Rbn6b/gamma/Assign"
  input: "^Rbn6b/moving_mean/Assign"
  input: "^Rbn6b/moving_variance/Assign"
  input: "^Rconv1a/W/Adam/Assign"
  input: "^Rconv1a/W/Adam_1/Assign"
  input: "^Rconv1a/W/Assign"
  input: "^Rconv1a/b/Adam/Assign"
  input: "^Rconv1a/b/Adam_1/Assign"
  input: "^Rconv1a/b/Assign"
  input: "^Rconv1b/W/Adam/Assign"
  input: "^Rconv1b/W/Adam_1/Assign"
  input: "^Rconv1b/W/Assign"
  input: "^Rconv1b/b/Adam/Assign"
  input: "^Rconv1b/b/Adam_1/Assign"
  input: "^Rconv1b/b/Assign"
  input: "^Rconv2a/W/Adam/Assign"
  input: "^Rconv2a/W/Adam_1/Assign"
  input: "^Rconv2a/W/Assign"
  input: "^Rconv2a/b/Adam/Assign"
  input: "^Rconv2a/b/Adam_1/Assign"
  input: "^Rconv2a/b/Assign"
  input: "^Rconv2b/W/Adam/Assign"
  input: "^Rconv2b/W/Adam_1/Assign"
  input: "^Rconv2b/W/Assign"
  input: "^Rconv2b/b/Adam/Assign"
  input: "^Rconv2b/b/Adam_1/Assign"
  input: "^Rconv2b/b/Assign"
  input: "^Rconv3a/W/Adam/Assign"
  input: "^Rconv3a/W/Adam_1/Assign"
  input: "^Rconv3a/W/Assign"
  input: "^Rconv3a/b/Adam/Assign"
  input: "^Rconv3a/b/Adam_1/Assign"
  input: "^Rconv3a/b/Assign"
  input: "^Rconv3b/W/Adam/Assign"
  input: "^Rconv3b/W/Adam_1/Assign"
  input: "^Rconv3b/W/Assign"
  input: "^Rconv3b/b/Adam/Assign"
  input: "^Rconv3b/b/Adam_1/Assign"
  input: "^Rconv3b/b/Assign"
  input: "^Rconv4a/W/Adam/Assign"
  input: "^Rconv4a/W/Adam_1/Assign"
  input: "^Rconv4a/W/Assign"
  input: "^Rconv4a/b/Adam/Assign"
  input: "^Rconv4a/b/Adam_1/Assign"
  input: "^Rconv4a/b/Assign"
  input: "^Rconv4b/W/Adam/Assign"
  input: "^Rconv4b/W/Adam_1/Assign"
  input: "^Rconv4b/W/Assign"
  input: "^Rconv4b/b/Adam/Assign"
  input: "^Rconv4b/b/Adam_1/Assign"
  input: "^Rconv4b/b/Assign"
  input: "^Rconv5a/W/Adam/Assign"
  input: "^Rconv5a/W/Adam_1/Assign"
  input: "^Rconv5a/W/Assign"
  input: "^Rconv5a/b/Adam/Assign"
  input: "^Rconv5a/b/Adam_1/Assign"
  input: "^Rconv5a/b/Assign"
  input: "^Rconv5b/W/Adam/Assign"
  input: "^Rconv5b/W/Adam_1/Assign"
  input: "^Rconv5b/W/Assign"
  input: "^Rconv5b/b/Adam/Assign"
  input: "^Rconv5b/b/Adam_1/Assign"
  input: "^Rconv5b/b/Assign"
  input: "^Rconv6a/W/Adam/Assign"
  input: "^Rconv6a/W/Adam_1/Assign"
  input: "^Rconv6a/W/Assign"
  input: "^Rconv6a/b/Adam/Assign"
  input: "^Rconv6a/b/Adam_1/Assign"
  input: "^Rconv6a/b/Assign"
  input: "^Rconv6b/W/Adam/Assign"
  input: "^Rconv6b/W/Adam_1/Assign"
  input: "^Rconv6b/W/Assign"
  input: "^Rconv6b/b/Adam/Assign"
  input: "^Rconv6b/b/Adam_1/Assign"
  input: "^Rconv6b/b/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^conv1/W/Adam/Assign"
  input: "^conv1/W/Adam_1/Assign"
  input: "^conv1/W/Assign"
  input: "^conv1/b/Adam/Assign"
  input: "^conv1/b/Adam_1/Assign"
  input: "^conv1/b/Assign"
  input: "^conv2/W/Adam/Assign"
  input: "^conv2/W/Adam_1/Assign"
  input: "^conv2/W/Assign"
  input: "^conv2/b/Adam/Assign"
  input: "^conv2/b/Adam_1/Assign"
  input: "^conv2/b/Assign"
  input: "^fbn1/beta/Adam/Assign"
  input: "^fbn1/beta/Adam_1/Assign"
  input: "^fbn1/beta/Assign"
  input: "^fbn1/fbn1/moving_mean/biased/Assign"
  input: "^fbn1/fbn1/moving_mean/local_step/Assign"
  input: "^fbn1/fbn1/moving_variance/biased/Assign"
  input: "^fbn1/fbn1/moving_variance/local_step/Assign"
  input: "^fbn1/gamma/Adam/Assign"
  input: "^fbn1/gamma/Adam_1/Assign"
  input: "^fbn1/gamma/Assign"
  input: "^fbn1/moving_mean/Assign"
  input: "^fbn1/moving_variance/Assign"
  input: "^fconv1/W/Adam/Assign"
  input: "^fconv1/W/Adam_1/Assign"
  input: "^fconv1/W/Assign"
  input: "^fconv1/b/Adam/Assign"
  input: "^fconv1/b/Adam_1/Assign"
  input: "^fconv1/b/Assign"
  input: "^fconv2/W/Adam/Assign"
  input: "^fconv2/W/Adam_1/Assign"
  input: "^fconv2/W/Assign"
  input: "^fconv2/b/Adam/Assign"
  input: "^fconv2/b/Adam_1/Assign"
  input: "^fconv2/b/Assign"
  input: "^filter_localexpand/Assign"
  input: "^filter_localexpand_1/Assign"
  input: "^filter_localexpand_2/Assign"
  input: "^learning_rate/Assign"
  input: "^rconv1/W/Adam/Assign"
  input: "^rconv1/W/Adam_1/Assign"
  input: "^rconv1/W/Assign"
  input: "^rconv1/b/Adam/Assign"
  input: "^rconv1/b/Adam_1/Assign"
  input: "^rconv1/b/Assign"
  input: "^rconv2/W/Adam/Assign"
  input: "^rconv2/W/Adam_1/Assign"
  input: "^rconv2/W/Assign"
  input: "^rconv2/b/Adam/Assign"
  input: "^rconv2/b/Adam_1/Assign"
  input: "^rconv2/b/Assign"
}
versions {
  producer: 440
}
